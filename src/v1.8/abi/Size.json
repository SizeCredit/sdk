{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "buyCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditLimitOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct BuyCreditLimitParams",
              "components": [
                {
                  "name": "maxDueDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "internalType": "struct YieldCurve",
                  "components": [
                    {
                      "name": "tenors",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    },
                    {
                      "name": "aprs",
                      "type": "int256[]",
                      "internalType": "int256[]"
                    },
                    {
                      "name": "marketRateMultipliers",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" },
            {
              "name": "collectionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "rateProvider",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarketOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct BuyCreditMarketParams",
              "components": [
                {
                  "name": "borrower",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "exactAmountIn",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "collectionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "rateProvider",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ClaimParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "collateralRatio",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "compensate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CompensateParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "creditPositionToCompensateId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "compensateOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct CompensateOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct CompensateParams",
              "components": [
                {
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "creditPositionToCompensateId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "data",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DataView",
          "components": [
            {
              "name": "nextDebtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nextCreditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "collateralToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "borrowTokenVault",
              "type": "address",
              "internalType": "contract NonTransferrableRebasingTokenVault"
            },
            {
              "name": "debtToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "contract IPool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "debtTokenAmountToCollateralTokenAmount",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositOnBehalfOf",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct DepositParams",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "to", "type": "address", "internalType": "address" }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "feeConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBorrowOfferAPR",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" },
        {
          "name": "collectionId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "rateProvider",
          "type": "address",
          "internalType": "address"
        },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBuyCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" },
            {
              "name": "collectionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "rateProvider",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCreditPosition",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct CreditPosition",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            { "name": "forSale", "type": "bool", "internalType": "bool" },
            { "name": "credit", "type": "uint256", "internalType": "uint256" },
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPosition",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DebtPosition",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "futureValue",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "dueDate", "type": "uint256", "internalType": "uint256" },
            {
              "name": "liquidityIndexAtRepayment",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanOfferAPR",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" },
        {
          "name": "collectionId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "rateProvider",
          "type": "address",
          "internalType": "address"
        },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPositionsCount",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSellCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" },
            {
              "name": "collectionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "rateProvider",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "creditAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserDefinedBorrowOfferAPR",
      "inputs": [
        { "name": "borrower", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserDefinedCopyBorrowOfferConfig",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct CopyLimitOrderConfig",
          "components": [
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "offsetAPR", "type": "int256", "internalType": "int256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserDefinedCopyLoanOfferConfig",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct CopyLimitOrderConfig",
          "components": [
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "offsetAPR", "type": "int256", "internalType": "int256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserDefinedLoanOfferAPR",
      "inputs": [
        { "name": "lender", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserView",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserView",
          "components": [
            {
              "name": "user",
              "type": "tuple",
              "internalType": "struct User",
              "components": [
                {
                  "name": "loanOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "borrowOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            { "name": "account", "type": "address", "internalType": "address" },
            {
              "name": "collateralTokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowTokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "debtBalance",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        {
          "name": "f",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "r",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "o",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        },
        {
          "name": "d",
          "type": "tuple",
          "internalType": "struct InitializeDataParams",
          "components": [
            { "name": "weth", "type": "address", "internalType": "address" },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "borrowTokenVault",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "sizeFactory",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isDebtPositionLiquidatable",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "deadline", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "liquidateWithReplacement",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateWithReplacementParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            {
              "name": "collectionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "rateProvider",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "liquidatorProfitBorrowToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multicall",
      "inputs": [
        { "name": "_data", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [
        { "name": "results", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "oracle",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "partialRepay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct PartialRepayParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "reinitialize",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct RepayParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "riskConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "selfLiquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SelfLiquidateParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "selfLiquidateOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SelfLiquidateOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SelfLiquidateParams",
              "components": [
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimitOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SellCreditLimitOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SellCreditLimitParams",
              "components": [
                {
                  "name": "maxDueDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "internalType": "struct YieldCurve",
                  "components": [
                    {
                      "name": "tenors",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    },
                    {
                      "name": "aprs",
                      "type": "int256[]",
                      "internalType": "int256[]"
                    },
                    {
                      "name": "marketRateMultipliers",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" },
            {
              "name": "collectionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "rateProvider",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarketOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SellCreditMarketOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SellCreditMarketParams",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "exactAmountIn",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "collectionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "rateProvider",
                  "type": "address",
                  "internalType": "address"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setCopyLimitOrderConfigs",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SetCopyLimitOrderConfigsParams",
          "components": [
            {
              "name": "copyLoanOfferConfig",
              "type": "tuple",
              "internalType": "struct CopyLimitOrderConfig",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            },
            {
              "name": "copyBorrowOfferConfig",
              "type": "tuple",
              "internalType": "struct CopyLimitOrderConfig",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setCopyLimitOrderConfigsOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SetCopyLimitOrderConfigsOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SetCopyLimitOrderConfigsParams",
              "components": [
                {
                  "name": "copyLoanOfferConfig",
                  "type": "tuple",
                  "internalType": "struct CopyLimitOrderConfig",
                  "components": [
                    {
                      "name": "minTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "minAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "offsetAPR",
                      "type": "int256",
                      "internalType": "int256"
                    }
                  ]
                },
                {
                  "name": "copyBorrowOfferConfig",
                  "type": "tuple",
                  "internalType": "struct CopyLimitOrderConfig",
                  "components": [
                    {
                      "name": "minTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "minAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "offsetAPR",
                      "type": "int256",
                      "internalType": "int256"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfiguration",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationParams",
          "components": [
            {
              "name": "openingLimitBorrowCR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allCreditPositionsForSaleDisabled",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIdsForSale",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfigurationOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SetUserConfigurationParams",
              "components": [
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "creditPositionIdsForSale",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "creditPositionIds",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setVariablePoolBorrowRate",
      "inputs": [
        { "name": "borrowRate", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setVault",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SetVaultParams",
          "components": [
            { "name": "vault", "type": "address", "internalType": "address" },
            {
              "name": "forfeitOldShares",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setVaultOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SetVaultOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SetVaultParams",
              "components": [
                {
                  "name": "vault",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "forfeitOldShares",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateConfig",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct UpdateConfigParams",
          "components": [
            { "name": "key", "type": "string", "internalType": "string" },
            { "name": "value", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct WithdrawParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct WithdrawOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct WithdrawParams",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "to", "type": "address", "internalType": "address" }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VariablePoolBorrowRateUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "newBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AccessControlBadConfirmation", "inputs": [] },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "neededRole", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "DUE_DATE_GREATER_THAN_MAX_DUE_DATE",
      "inputs": [
        { "name": "dueDate", "type": "uint256", "internalType": "uint256" },
        { "name": "maxDueDate", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "EnforcedPause", "inputs": [] },
    { "type": "error", "name": "ExpectedPause", "inputs": [] },
    { "type": "error", "name": "FailedCall", "inputs": [] },
    {
      "type": "error",
      "name": "INVALID_OFFER",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "MUST_IMPROVE_COLLATERAL_RATIO",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "crBefore", "type": "uint256", "internalType": "uint256" },
        { "name": "crAfter", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "NULL_TENOR", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051615f60620001005f395f81816139f201528181613a1b0152613b830152615f605ff3fe6080604052600436106103be575f3560e01c80636c2eb350116101f4578063ac9650d811610113578063d927acef116100a8578063f1bf35c311610078578063f1bf35c314610c28578063f45bf01c14610c47578063f54ae18b14610c5a578063fa823af514610c6d578063fd17174a14610c80575f80fd5b8063d927acef14610bd0578063e05001f514610be3578063e236052b14610bf6578063e5af06ce14610c09575f80fd5b8063ca40742c116100e3578063ca40742c14610b6c578063cb2e9bdc14610b8b578063ccd8d4d114610b9e578063d547741f14610bb1575f80fd5b8063ac9650d814610aa2578063ad3cb1cc14610ac2578063b5ec748714610af2578063c421a75914610b4d575f80fd5b80637f417c06116101895780638ea68d7e116101595780638ea68d7e14610a3157806391d1485414610a445780639ab8011514610a63578063a217fddf14610a8f575f80fd5b80637f417c06146109e4578063834dafb5146109f75780638456cb5914610a0a5780638e57277614610a1e575f80fd5b806376c1b82f116101c457806376c1b82f1461090f5780637a32376a1461093b5780637c90a6ca1461094e5780637dc0d1d0146109a3575f80fd5b80636c2eb350146107a557806373b683be146107b957806373d4a13a146107d857806375829a36146108fc575f80fd5b80632f2ff15d116102e05780634fd9a8a51161027557806353e043d41161024557806353e043d41461070e57806354fd4d50146107215780635c975abb146107565780635cbc51eb14610779575f80fd5b80634fd9a8a5146106c1578063510aeb39146106d457806352d1902d146106e7578063536b9c79146106fb575f80fd5b80633ae6d7c3116102b05780633ae6d7c3146106685780633f4ba83a1461067b5780634cbd882c1461068f5780634f1ef286146106ae575f80fd5b80632f2ff15d1461060457806336568abe146106235780633746f858146106425780633962a68614610655575f80fd5b80631970e5ea11610356578063248a9ca311610326578063248a9ca3146105a05780632b4c9a20146105bf5780632b59bd99146105d25780632e106f21146105f1575f80fd5b80631970e5ea146104d55780631ca3b0cb146104f45780631e5eb1d01461051d5780631ff75b0b14610581575f80fd5b806304c842221161039157806304c84222146104565780630cf8542f146104825780630d37ab0014610495578063134f3f96146104c2575f80fd5b806301ffc9a7146103c257806302088c51146103f657806302f2855a146104225780630317b9df14610437575b5f80fd5b3480156103cd575f80fd5b506103e16103dc3660046142c8565b610c93565b60405190151581526020015b60405180910390f35b348015610401575f80fd5b506104156104103660046144c8565b610cc9565b6040516103ed9190614511565b610435610430366004614586565b610d4a565b005b348015610442575f80fd5b506104356104513660046145b0565b610e3d565b348015610461575f80fd5b506104756104703660046145e1565b610f41565b6040516103ed91906145fc565b610435610490366004614586565b610fc8565b3480156104a0575f80fd5b506104b46104af366004614635565b610ff5565b6040519081526020016103ed565b6104356104d0366004614761565b611008565b3480156104e0575f80fd5b506104b46104ef3660046147df565b6110b6565b3480156104ff575f80fd5b506105086110c1565b604080519283526020830191909152016103ed565b348015610528575f80fd5b506105316110f4565b6040516103ed9190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b34801561058c575f80fd5b506104b461059b3660046147f6565b6111a6565b3480156105ab575f80fd5b506104b46105ba3660046147df565b611249565b6104356105cd366004614586565b611269565b3480156105dd575f80fd5b506104b46105ec366004614635565b611296565b6104356105ff36600461483b565b6112a2565b34801561060f575f80fd5b5061043561061e366004614871565b6112c8565b34801561062e575f80fd5b5061043561063d366004614871565b6112ea565b6104356106503660046145b0565b611322565b6104356106633660046148f4565b611348565b610435610676366004614947565b611493565b348015610686575f80fd5b506104356116cf565b34801561069a575f80fd5b506104356106a9366004614985565b611728565b6104356106bc3660046149ab565b611809565b6104356106cf366004614bb6565b611828565b6104356106e2366004614be7565b6118d6565b3480156106f2575f80fd5b506104b4611903565b610435610709366004614c40565b61191e565b61043561071c366004614bb6565b611a17565b34801561072c575f80fd5b506040805180820190915260048152630ec625c760e31b60208201525b6040516103ed9190614cde565b348015610761575f80fd5b505f80516020615eeb8339815191525460ff166103e1565b348015610784575f80fd5b506107986107933660046145e1565b611ac5565b6040516103ed9190614dbe565b3480156107b0575f80fd5b50610435611f08565b3480156107c4575f80fd5b506104b46107d33660046147f6565b611fd8565b3480156107e3575f80fd5b5061088b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e09283015190911691810191909152610100016103ed565b61043561090a366004614e95565b612037565b34801561091a575f80fd5b5061092e6109293660046147df565b612130565b6040516103ed9190614ec7565b610435610949366004614f55565b6121f6565b348015610959575f80fd5b506109626122a4565b6040516103ed91905f60a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b3480156109ae575f80fd5b506109b7612342565b6040805182516001600160a01b031681526020928301516001600160401b031692810192909252016103ed565b6104356109f2366004614be7565b6123c5565b610435610a053660046148f4565b612471565b348015610a15575f80fd5b506104356125a4565b610435610a2c366004614586565b6125fd565b610435610a3f3660046144c8565b61262a565b348015610a4f575f80fd5b506103e1610a5e366004614871565b61265f565b348015610a6e575f80fd5b50610a82610a7d3660046144c8565b612695565b6040516103ed9190614f89565b348015610a9a575f80fd5b506104b45f81565b610ab5610ab0366004614fd5565b612716565b6040516103ed9190615043565b348015610acd575f80fd5b50610749604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610afd575f80fd5b50610b11610b0c3660046147df565b61272b565b6040516103ed919081516001600160a01b0316815260208083015190820152604080830151908201526060918201519181019190915260800190565b348015610b58575f80fd5b50610475610b673660046145e1565b612811565b348015610b77575f80fd5b506104b4610b863660046145e1565b612898565b610435610b993660046150a5565b61291b565b610435610bac3660046145b0565b612948565b348015610bbc575f80fd5b50610435610bcb366004614871565b61296e565b610508610bde3660046150b6565b61298a565b6104b4610bf1366004614586565b612bd5565b610435610c043660046150c6565b612d43565b348015610c14575f80fd5b506103e1610c233660046147df565b612d77565b348015610c33575f80fd5b50610435610c423660046150e7565b612df2565b610435610c5536600461516b565b61306a565b610435610c683660046151f8565b61311d565b610435610c7b3660046151f8565b6131cb565b610435610c8e36600461516b565b613279565b5f6001600160e01b03198216637965db0b60e01b1480610cc357506301ffc9a760e01b6001600160e01b03198316145b92915050565b610cd1614175565b604051631c81982560e11b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__90633903304a90610d0a905f908690600401615281565b61014060405180830381865af4158015610d26573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc391906152ec565b610d526132ad565b610d5a6132e4565b604051635fed4de960e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__90635fed4de990610d93905f908590600401615381565b5f6040518083038186803b158015610da9575f80fd5b505af4158015610dbb573d5f803e3d5ffd5b505060405163d96aec4360e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__925063d96aec439150610df8905f908590600401615381565b5f6040518083038186803b158015610e0e575f80fd5b505af4158015610e20573d5f803e3d5ffd5b50505050610e3a60015f80516020615f0b83398151915255565b50565b5f610e488133613329565b610e735760405163e2517d3f60e01b8152336004820152602481018290526044015b60405180910390fd5b60405163e57980dd60e01b815273__$72c16261390208f563094e6a4fc9f74031$__9063e57980dd90610eac905f9086906004016153c3565b5f6040518083038186803b158015610ec2575f80fd5b505af4158015610ed4573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$72c16261390208f563094e6a4fc9f74031$__9250634752b3b39150610f11905f9086906004016153c3565b5f6040518083038186803b158015610f27575f80fd5b505af4158015610f39573d5f803e3d5ffd5b505050505050565b610f6e6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b506001600160a01b03165f908152601b6020908152604091829020825160a0810184526001820154815260028201549281019290925260038101549282019290925260048201546060820152600590910154608082015290565b610e3a604051806040016040528083803603810190610fe79190615447565b8152336020909101526131cb565b5f6110018184846133d2565b9392505050565b6110106132ad565b6110186132e4565b6040516333d4ade560e01b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__906333d4ade590611051905f908590600401615461565b5f6040518083038186803b158015611067575f80fd5b505af4158015611079573d5f803e3d5ffd5b505060405163178bcac760e11b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__9250632f17958e9150610df8905f908590600401615461565b5f610cc38183613520565b6011545f9081906110d39082906154e5565b6110df60025f196154f8565b6012546110ec91906154e5565b915091509091565b6111306040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__906386617e779060240160c060405180830381865af415801561117d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111a19190615517565b905090565b60405163897bce1f60e01b81525f600482018190526001600160a01b0380871660248401526044830186905284166064830152608482018390529073__$fad1da84a532053b53119316a58e977f10$__9063897bce1f9060a4015b602060405180830381865af415801561121c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112409190615575565b95945050505050565b5f9081525f80516020615ecb833981519152602052604090206001015490565b610e3a6040518060400160405280838036038101906112889190615447565b81523360209091015261311d565b5f611001818484613720565b610e3a6040518060400160405280836112ba9061558c565b815233602090910152611008565b6112d182611249565b6112da81613864565b6112e4838361386e565b50505050565b6001600160a01b03811633146113135760405163334bd91960e11b815260040160405180910390fd5b61131d828261390f565b505050565b610e3a60405180604001604052808361133a90615597565b815233602090910152611a17565b6113506132ad565b6113586132e4565b60405163160b9e6b60e31b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063b05cf35890611391905f9085906004016155d3565b5f6040518083038186803b1580156113a7575f80fd5b505af41580156113b9573d5f803e3d5ffd5b5050604051639f46aa4160e01b815273__$c58e2605104bb31274ad8c04841b6a7550$__9250639f46aa4191506113f6905f9085906004016155d3565b5f6040518083038186803b15801561140c575f80fd5b505af415801561141e573d5f803e3d5ffd5b505050505f19815f0151602001510361147d5760208101516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401610df8565b610e3a60015f80516020615f0b83398151915255565b61149b6132ad565b6114a36132e4565b602081015160405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af4158015611507573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061152b9190615575565b60405163f9c417bd60e01b815290915073__$7fa168b5d238863382c2bf886894022425$__9063f9c417bd90611567905f9087906004016155e8565b5f6040518083038186803b15801561157d575f80fd5b505af415801561158f573d5f803e3d5ffd5b5050604051634971bf9960e01b815273__$7fa168b5d238863382c2bf886894022425$__9250634971bf9991506115cc905f9087906004016155e8565b5f6040518083038186803b1580156115e2575f80fd5b505af41580156115f4573d5f803e3d5ffd5b505060405163046dbd1360e11b81525f600482018190526001600160a01b0386166024830152925073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__91506308db7a2690604401602060405180830381865af4158015611657573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061167b9190615575565b90508181116116b65760405163625a84dd60e01b81526001600160a01b03841660048201526024810183905260448101829052606401610e6a565b505050610e3a60015f80516020615f0b83398151915255565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6116fa8133613329565b6117205760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b610e3a613988565b6117306132ad565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd2403861175b8133613329565b6117815760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a25050610e3a60015f80516020615f0b83398151915255565b6118116139e7565b61181a82613a8b565b6118248282613abc565b5050565b6118306132ad565b6118386132e4565b604051637125eda960e11b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__9063e24bdb5290611871905f9085906004016156e3565b5f6040518083038186803b158015611887575f80fd5b505af4158015611899573d5f803e3d5ffd5b505060405163184d91f360e31b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__925063c26c8f989150610df8905f9085906004016156e3565b610e3a6040518060400160405280838036038101906118f591906156fb565b815233602090910152612037565b5f61190c613b78565b505f80516020615eab83398151915290565b6119266132ad565b61192e6132e4565b604080516325f2df6f60e01b81525f6004820152825151602482015260208301516001600160a01b03908116604483015291830151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__906325f2df6f906084015f6040518083038186803b1580156119a0575f80fd5b505af41580156119b2573d5f803e3d5ffd5b5050604080516330e78a9160e11b81525f6004820152845151602482015260208501516001600160a01b03908116604483015291850151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__92506361cf15229150608401610df8565b611a1f6132ad565b611a276132e4565b604051632d0c1e8b60e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__90632d0c1e8b90611a60905f9085906004016156e3565b5f6040518083038186803b158015611a76575f80fd5b505af4158015611a88573d5f803e3d5ffd5b505060405163c0c66ed960e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__925063c0c66ed99150610df8905f9085906004016156e3565b611acd6141bb565b5f80516020615f0b83398151915254600203611afc57604051633ee5aeb560e01b815260040160405180910390fd5b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611b8e57602002820191905f5260205f20905b815481526020019060010190808311611b7a575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611be457602002820191905f5260205f20905b815481526020019060010190808311611bd0575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611c3a57602002820191905f5260205f20905b815481526020019060010190808311611c26575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015611cc057602002820191905f5260205f20905b815481526020019060010190808311611cac575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611d1657602002820191905f5260205f20905b815481526020019060010190808311611d02575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611d6c57602002820191905f5260205f20905b815481526020019060010190808311611d58575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa158015611df2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e169190615575565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611e66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e8a9190615575565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611eda573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611efe9190615575565b905290505b919050565b5f611f1281613864565b612a305f611f1e613bc1565b8054909150600160401b900460ff1680611f45575080546001600160401b03808416911610155b15611f635760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b03831617600160401b178155611f8c613be9565b805460ff60401b191681556040516001600160401b03831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050565b604051637574b6e360e01b81525f600482018190526001600160a01b0380871660248401526044830186905284166064830152608482018390529073__$fad1da84a532053b53119316a58e977f10$__90637574b6e39060a401611201565b61203f6132ad565b6120476132e4565b604051623fe27360e01b81525f6004820152815180516001600160a01b039081166024840152602091820151151560448401529083015116606482015273__$c6aecf0de9c97d330c260596cb45f01743$__90623fe273906084015f6040518083038186803b1580156120b8575f80fd5b505af41580156120ca573d5f803e3d5ffd5b505060405163724e2b6f60e01b81525f6004820152835180516001600160a01b039081166024840152602091820151151560448401529085015116606482015273__$c6aecf0de9c97d330c260596cb45f01743$__925063724e2b6f9150608401610df8565b6121386141f5565b604051633978289f60e01b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90633978289f90604401602060405180830381865af415801561218c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121b09190615575565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b6121fe6132ad565b6122066132e4565b60405163da25f11760e01b815273__$e9ef7182266124a833dac7dfa55fc79e51$__9063da25f1179061223f905f908590600401615715565b5f6040518083038186803b158015612255575f80fd5b505af4158015612267573d5f803e3d5ffd5b50506040516388fb1b6760e01b815273__$e9ef7182266124a833dac7dfa55fc79e51$__92506388fb1b679150610df8905f908590600401615715565b6122d16040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063dd378fd69060240160a060405180830381865af415801561231e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111a191906157ab565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063d72f4008906024016040805180830381865af41580156123a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111a1919061580d565b6123cd6132ad565b6123d56132e4565b6040516210aa0b60e31b815273__$45d7492db284be01938913cb41b9cac2a6$__90628550589061240c905f908590600401615840565b5f6040518083038186803b158015612422575f80fd5b505af4158015612434573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$45d7492db284be01938913cb41b9cac2a6$__92506364140a839150610df8905f908590600401615840565b6124796132ad565b6124816132e4565b604051631e55c20b60e31b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9063f2ae1058906124ba905f9085906004016155d3565b5f6040518083038186803b1580156124d0575f80fd5b505af41580156124e2573d5f803e3d5ffd5b5050604051630f6470bd60e01b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9250630f6470bd915061251f905f9085906004016155d3565b5f6040518083038186803b158015612535575f80fd5b505af4158015612547573d5f803e3d5ffd5b505050505f19815f0151602001510361147d578051516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401610df8565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6125cf8133613329565b6125f55760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b610e3a613bf9565b610e3a60405180604001604052808380360381019061261c9190615878565b815233602090910152611493565b610e3a6040518060600160405280838152602001336001600160a01b03168152602001336001600160a01b0316815250611348565b5f9182525f80516020615ecb833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61269d614224565b60405163301d1d1560e21b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063c0747454906126d6905f908690600401615281565b61012060405180830381865af41580156126f2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc39190615892565b60606127206132e4565b6110015f8484613c41565b61275b60405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af41580156127af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127d39190615575565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b61283e6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b506001600160a01b03165f908152601b6020908152604091829020825160a0810184526006820154815260078201549281019290925260088101549282019290925260098201546060820152600a90910154608082015290565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af41580156128f7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc39190615575565b610e3a60405180604001604052808380360381019061293a91906158f4565b8152336020909101526121f6565b610e3a60405180604001604052808361296090615597565b815233602090910152611828565b61297782611249565b61298081613864565b6112e4838361390f565b5f806129946132ad565b61299c6132e4565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab6129c78133613329565b6129ed5760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b604051639f53ee0f60e01b815273__$d00168f5747027b5a56099c751031d7e40$__90639f53ee0f90612a26905f908890600401615976565b5f6040518083038186803b158015612a3c575f80fd5b505af4158015612a4e573d5f803e3d5ffd5b505060405163647a4b7560e11b815273__$d00168f5747027b5a56099c751031d7e40$__925063c8f496ea9150612a8b905f908890600401615976565b6040805180830381865af4158015612aa5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ac9919061598b565b909350915073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__632d77afb65f612af960408801602089016145e1565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b158015612b3c575f80fd5b505af4158015612b4e573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$d00168f5747027b5a56099c751031d7e40$__9250636e6595c19150612b8d905f90889088906004016159ad565b5f6040518083038186803b158015612ba3575f80fd5b505af4158015612bb5573d5f803e3d5ffd5b5050505050612bd060015f80516020615f0b83398151915255565b915091565b5f612bde6132ad565b612be66132e4565b6040516320b5435f60e11b815273__$04d32033081e1e9356971d8f4b5098bcad$__9063416a86be90612c1f905f9086906004016159d1565b5f6040518083038186803b158015612c35575f80fd5b505af4158015612c47573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$04d32033081e1e9356971d8f4b5098bcad$__925063341a672c9150612c84905f9086906004016159d1565b602060405180830381865af4158015612c9f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612cc39190615575565b60405163489d188160e01b815290915073__$04d32033081e1e9356971d8f4b5098bcad$__9063489d188190612d01905f90869086906004016159f9565b5f6040518083038186803b158015612d17575f80fd5b505af4158015612d29573d5f803e3d5ffd5b50505050611f0360015f80516020615f0b83398151915255565b610e3a604051806060016040528083803603810190612d6291906144c8565b81523360208201819052604090910152612471565b604051631928c8e960e11b81525f60048201819052602482018390529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__9063325191d290604401602060405180830381865af4158015612dce573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc39190615a2f565b5f612dfb613bc1565b805490915060ff600160401b82041615906001600160401b03165f81158015612e215750825b90505f826001600160401b03166001148015612e3c5750303b155b905081158015612e4a575080155b15612e685760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315612e9257845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__906369777eb990612ed3905f908e908e908e908e908e90600401615b63565b5f6040518083038186803b158015612ee9575f80fd5b505af4158015612efb573d5f803e3d5ffd5b50505050612f07613d29565b612f0f613d29565b612f17613be9565b612f1f613d29565b604051632ffdac7160e21b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__9063bff6b1c490612f5e905f908d908d908d908d90600401615bd7565b5f6040518083038186803b158015612f74575f80fd5b505af4158015612f86573d5f803e3d5ffd5b50505050612f965f801b8b61386e565b50612fc17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b61386e565b50612fec7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b61386e565b506130177f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b61386e565b50831561305e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6130726132ad565b61307a6132e4565b604051635792057f60e11b81525f60048201528135602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__9063af240afe906044015f6040518083038186803b1580156130c9575f80fd5b505af41580156130db573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__92506341d373f29150604401610df8565b6131256132ad565b61312d6132e4565b604051631005beb160e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__9063802df58890613166905f908590600401615c3b565b5f6040518083038186803b15801561317c575f80fd5b505af415801561318e573d5f803e3d5ffd5b5050604051631cc17ae560e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__925063e60bd7289150610df8905f908590600401615c3b565b6131d36132ad565b6131db6132e4565b60405163024889b160e51b815273__$d49e499a4608ab3aca09b91fe5950492b6$__90634911362090613214905f908590600401615c3b565b5f6040518083038186803b15801561322a575f80fd5b505af415801561323c573d5f803e3d5ffd5b505060405163a083c0ab60e01b815273__$d49e499a4608ab3aca09b91fe5950492b6$__925063a083c0ab9150610df8905f908590600401615c3b565b610e3a6040518060600160405280838036038101906132989190615c80565b8152336020820181905260409091015261191e565b5f80516020615f0b8339815191528054600119016132de57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b5f80516020615eeb8339815191525460ff16156133145760405163d93c066560e01b815260040160405180910390fd5b565b60015f80516020615f0b83398151915255565b5f613334838361265f565b1561334157506001610cc3565b601c546001600160a01b031661335857505f610cc3565b601c54604051632474521560e21b8152600481018590526001600160a01b038481166024830152909116906391d1485490604401602060405180830381865afa1580156133a7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133cb9190615a2f565b9050610cc3565b6001600160a01b0382165f908152600e8401602090815260408083208151808301835281548152825160018301805460808188028401810190965260608301818152613518978c978c979591870194919391928492909184919084018282801561345957602002820191905f5260205f20905b815481526020019060010190808311613445575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156134af57602002820191905f5260205f20905b81548152602001906001019080831161349b575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561350557602002820191905f5260205f20905b8154815260200190600101908083116134f1575b5050505050815250508152505085613d31565b949350505050565b5f61100183600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613578573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061359c9190615575565b6135a790600a615d7a565b6135b19084615d85565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa1580156135fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061361f9190615d9c565b61362a90600a615dbc565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015613674573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136989190615d9c565b6136a390600a615dbc565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa1580156136ed573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906137119190615575565b61371b9190615d85565b613e8b565b6001600160a01b0382165f908152600e84016020908152604080832081518083018352600482018054825283516005909301805460808188028601810190965260608501818152613518978c978c9791870194919391928492909184919084018282801561345957602002820191905f5260205f20908154815260200190600101908083116134455750505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156134af57602002820191905f5260205f209081548152602001906001019080831161349b57505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561350557602002820191905f5260205f20908154815260200190600101908083116134f1575050505050815250508152505085613d31565b610e3a8133613e97565b5f5f80516020615ecb833981519152613887848461265f565b613906575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556138bc3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610cc3565b5f915050610cc3565b5f5f80516020615ecb833981519152613928848461265f565b15613906575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610cc3565b613990613ed0565b5f80516020615eeb833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480613a6d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316613a615f80516020615eab833981519152546001600160a01b031690565b6001600160a01b031614155b156133145760405163703e46dd60e11b815260040160405180910390fd5b5f613a968133613329565b6118245760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613b16575060408051601f3d908101601f19168201909252613b1391810190615575565b60015b613b3e57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e6a565b5f80516020615eab8339815191528114613b6e57604051632a87526960e21b815260048101829052602401610e6a565b61131d8383613eff565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146133145760405163703e46dd60e11b815260040160405180910390fd5b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610cc3565b613bf1613f54565b613314613f79565b613c016132e4565b5f80516020615eeb833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336139c9565b6060816001600160401b03811115613c5b57613c5b6142ef565b604051908082528060200260200182016040528015613c8e57816020015b6060815260200190600190039081613c795790505b5090505f5b82811015613d2157613cfc30858584818110613cb157613cb1615dca565b9050602002810190613cc39190615dde565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613f8192505050565b828281518110613d0e57613d0e615dca565b6020908102919091010152600101613c93565b509392505050565b613314613f54565b5f815f03613d52576040516301c85f6760e71b815260040160405180910390fd5b613d5b83613fea565b15613d835760405162b04ee160e61b81526001600160a01b0385166004820152602401610e6a565b8251613d8f8342615e27565b1115613dc357613d9f8242615e27565b8351604051636f2f16a760e01b815260048101929092526024820152604401610e6a565b60408051606081018252600d8701546001600160801b03811682526001600160401b03600160801b82048116602080850191909152600160c01b909204168284015285015191516315c6891560e11b8152909173__$99c8b6d537f6911e4d5e2b5618b4ddcec4$__91632b8d122a91613e429185908890600401615e3a565b602060405180830381865af4158015613e5d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613e819190615575565b9695505050505050565b5f613518848484614003565b613ea1828261265f565b6118245760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610e6a565b5f80516020615eeb8339815191525460ff1661331457604051638dfc202b60e01b815260040160405180910390fd5b613f088261402f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115613f4c5761131d8282613f81565b611824614092565b613f5c6140b1565b61331457604051631afcd79f60e31b815260040160405180910390fd5b613316613f54565b60605f80846001600160a01b031684604051613f9d9190615e8f565b5f60405180830381855af49150503d805f8114613fd5576040519150601f19603f3d011682016040523d82523d5f602084013e613fda565b606091505b50915091506112408583836140ca565b80515f90158015610cc35750610cc38260200151614126565b5f825f1904841183021582026140205763ad251c275f526004601cfd5b50910281810615159190040190565b806001600160a01b03163b5f0361406457604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e6a565b5f80516020615eab83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b34156133145760405163b398979f60e01b815260040160405180910390fd5b5f6140ba613bc1565b54600160401b900460ff16919050565b6060826140df576140da8261414c565b611001565b81511580156140f657506001600160a01b0384163b155b1561411f57604051639996b31560e01b81526001600160a01b0385166004820152602401610e6a565b5080611001565b8051515f9015801561413b5750602082015151155b8015610cc357505060400151511590565b80511561415c5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6040518060e001604052806141886141f5565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060a001604052806141ce61425b565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81525090565b60405180608001604052805f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b6040518060c001604052806142376141f5565b81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051806080016040528061426e61428e565b815260200161427b61428e565b81525f6020820181905260409091015290565b60405180604001604052805f81526020016142c360405180606001604052806060815260200160608152602001606081525090565b905290565b5f602082840312156142d8575f80fd5b81356001600160e01b031981168114611001575f80fd5b634e487b7160e01b5f52604160045260245ffd5b60405161012081016001600160401b0381118282101715614326576143266142ef565b60405290565b604051608081016001600160401b0381118282101715614326576143266142ef565b604080519081016001600160401b0381118282101715614326576143266142ef565b604051606081016001600160401b0381118282101715614326576143266142ef565b60405160a081016001600160401b0381118282101715614326576143266142ef565b60405160c081016001600160401b0381118282101715614326576143266142ef565b604051601f8201601f191681016001600160401b03811182821017156143fe576143fe6142ef565b604052919050565b6001600160a01b0381168114610e3a575f80fd5b8035611f0381614406565b8015158114610e3a575f80fd5b8035611f0381614425565b5f610120828403121561444e575f80fd5b614456614303565b90506144618261441a565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a08201526144a160c08301614432565b60c082015260e082013560e08201526101006144be81840161441a565b9082015292915050565b5f61012082840312156144d9575f80fd5b611001838361443d565b80516001600160a01b0316825260208082015115159083015260408082015190830152606090810151910152565b5f610140820190506145248284516144e3565b60018060a01b036020840151166080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015260c083015161012083015292915050565b5f60608284031215614580575f80fd5b50919050565b5f60608284031215614596575f80fd5b6110018383614570565b5f60408284031215614580575f80fd5b5f602082840312156145c0575f80fd5b81356001600160401b038111156145d5575f80fd5b613518848285016145a0565b5f602082840312156145f1575f80fd5b813561100181614406565b60a08101610cc3828480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b5f8060408385031215614646575f80fd5b823561465181614406565b946020939093013593505050565b5f6001600160401b03821115614677576146776142ef565b5060051b60200190565b5f82601f830112614690575f80fd5b813560206146a56146a08361465f565b6143d6565b8083825260208201915060208460051b8701019350868411156146c6575f80fd5b602086015b848110156146e257803583529183019183016146cb565b509695505050505050565b5f608082840312156146fd575f80fd5b61470561432c565b905081358152602082013561471981614425565b6020820152604082013561472c81614425565b604082015260608201356001600160401b03811115614749575f80fd5b61475584828501614681565b60608301525092915050565b5f60208284031215614771575f80fd5b81356001600160401b0380821115614787575f80fd5b908301906040828603121561479a575f80fd5b6147a261434e565b8235828111156147b0575f80fd5b6147bc878286016146ed565b825250602083013592506147cf83614406565b6020810192909252509392505050565b5f602082840312156147ef575f80fd5b5035919050565b5f805f8060808587031215614809575f80fd5b843561481481614406565b935060208501359250604085013561482b81614406565b9396929550929360600135925050565b5f6020828403121561484b575f80fd5b81356001600160401b03811115614860575f80fd5b820160808185031215611001575f80fd5b5f8060408385031215614882575f80fd5b82359150602083013561489481614406565b809150509250929050565b5f61016082840312156148b0575f80fd5b6148b8614370565b90506148c4838361443d565b81526101208201356148d581614406565b60208201526101408201356148e981614406565b604082015292915050565b5f6101608284031215614905575f80fd5b611001838361489f565b5f6060828403121561491f575f80fd5b614927614370565b905081358152602082013560208201526040820135604082015292915050565b5f60808284031215614957575f80fd5b61495f61434e565b614969848461490f565b8152606083013561497981614406565b60208201529392505050565b5f60208284031215614995575f80fd5b81356001600160801b0381168114611001575f80fd5b5f80604083850312156149bc575f80fd5b82356149c781614406565b91506020838101356001600160401b03808211156149e3575f80fd5b818601915086601f8301126149f6575f80fd5b813581811115614a0857614a086142ef565b614a1a601f8201601f191685016143d6565b91508082528784828501011115614a2f575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f60408284031215614a5c575f80fd5b614a6461434e565b9050813581526020808301356001600160401b0380821115614a84575f80fd5b9084019060608287031215614a97575f80fd5b614a9f614370565b823582811115614aad575f80fd5b614ab988828601614681565b8252508383013582811115614acc575f80fd5b8301601f81018813614adc575f80fd5b8035614aea6146a08261465f565b81815260059190911b8201860190868101908a831115614b08575f80fd5b928701925b82841015614b2657833582529287019290870190614b0d565b84880152505050604083013582811115614b3e575f80fd5b614b4a88828601614681565b60408301525080848601525050505092915050565b5f60408284031215614b6f575f80fd5b614b7761434e565b905081356001600160401b03811115614b8e575f80fd5b614b9a84828501614a4c565b8252506020820135614bab81614406565b602082015292915050565b5f60208284031215614bc6575f80fd5b81356001600160401b03811115614bdb575f80fd5b61351884828501614b5f565b5f60408284031215614bf7575f80fd5b61100183836145a0565b5f60208284031215614c11575f80fd5b604051602081018181106001600160401b0382111715614c3357614c336142ef565b6040529135825250919050565b5f60608284031215614c50575f80fd5b614c58614370565b614c628484614c01565b81526020830135614c7281614406565b60208201526040830135614c8581614406565b60408201529392505050565b5f5b83811015614cab578181015183820152602001614c93565b50505f910152565b5f8151808452614cca816020860160208601614c91565b601f01601f19169290920160200192915050565b602081525f6110016020830184614cb3565b5f815180845260208085019450602084015f5b83811015614d1f57815187529582019590820190600101614d03565b509495945050505050565b805182525f602080830151604082860152805160606040870152614d5160a0870182614cf0565b83830151603f19888303810160608a0152815180845291860193505f929091908601905b80841015614d955784518252938601936001939093019290860190614d75565b5060408501519550818982030160808a0152614db18187614cf0565b9998505050505050505050565b602081525f825160a060208401528051608060c0850152614de3610140850182614d2a565b9050602082015160bf198583030160e0860152614e008282614d2a565b91505060408201516101008501526060820151151561012085015260208501519150614e3760408501836001600160a01b03169052565b6040850151606085015260608501516080850152608085015160a0850152809250505092915050565b5f60408284031215614e70575f80fd5b614e7861434e565b90508135614e8581614406565b81526020820135614bab81614425565b5f60608284031215614ea5575f80fd5b614ead61434e565b614eb78484614e60565b8152604083013561497981614406565b60808101610cc382846144e3565b5f60a08284031215614ee5575f80fd5b614eed614392565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b5f6101408284031215614f32575f80fd5b614f3a61434e565b9050614f468383614ed5565b8152614bab8360a08401614ed5565b5f6101608284031215614f66575f80fd5b614f6e61434e565b614f788484614f21565b815261014083013561497981614406565b5f61012082019050614f9c8284516144e3565b60208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015292915050565b5f8060208385031215614fe6575f80fd5b82356001600160401b0380821115614ffc575f80fd5b818501915085601f83011261500f575f80fd5b81358181111561501d575f80fd5b8660208260051b8501011115615031575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561509857603f19888603018452615086858351614cb3565b9450928501929085019060010161506a565b5092979650505050505050565b5f6101408284031215614580575f80fd5b5f60e08284031215614580575f80fd5b5f6101208284031215614580575f80fd5b5f60c08284031215614580575f80fd5b5f805f805f8587036102808112156150fd575f80fd5b863561510881614406565b955061511788602089016150d7565b945060a060df198201121561512a575f80fd5b5060e08601925061513f8761018088016145a0565b915061514f876101c088016150d7565b90509295509295909350565b5f60208284031215614580575f80fd5b5f6020828403121561517b575f80fd5b611001838361515b565b5f60608284031215615195575f80fd5b61519d614370565b905081356151aa81614406565b81526020828101359082015260408201356148e981614406565b5f608082840312156151d4575f80fd5b6151dc61434e565b90506151e88383615185565b81526060820135614bab81614406565b5f60808284031215615208575f80fd5b61100183836151c4565b60018060a01b0381511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c0810151151560c083015260e081015160e0830152610100808201516112e4828501826001600160a01b03169052565b82815261014081016110016020830184615212565b5f608082840312156152a6575f80fd5b6152ae61432c565b905081516152bb81614406565b815260208201516152cb81614425565b80602083015250604082015160408201526060820151606082015292915050565b5f61014082840312156152fd575f80fd5b60405160e081018181106001600160401b038211171561531f5761531f6142ef565b60405261532c8484615296565b8152608083015161533c81614406565b8060208301525060a0830151604082015260c0830151606082015260e0830151608082015261010083015160a082015261012083015160c08201528091505092915050565b5f608082019050838252823560208301526020830135604083015260408301356153aa81614406565b6001600160a01b03166060929092019190915292915050565b828152604060208201525f8235601e198436030181126153e1575f80fd5b83016020810190356001600160401b038111156153fc575f80fd5b80360382131561540a575f80fd5b604080850152806080850152808260a08601375f60a082860101526020850135606085015260a0601f19601f830116850101925050509392505050565b5f60608284031215615457575f80fd5b6110018383615185565b828152604060208201525f8251604080840152805160808401526020810151151560a08401526040810151151560c084015260608101519050608060e08401526154af610100840182614cf0565b602094909401516001600160a01b031660609390930192909252509092915050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610cc357610cc36154d1565b5f8261551257634e487b7160e01b5f52601260045260245ffd5b500490565b5f60c08284031215615527575f80fd5b61552f6143b4565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015161556981614406565b60a08201529392505050565b5f60208284031215615585575f80fd5b5051919050565b5f610cc336836146ed565b5f610cc33683614a4c565b6155ad828251615212565b60208101516001600160a01b039081166101208401526040909101511661014090910152565b828152610180810161100160208301846155a2565b918252805180516020808501919091528082015160408086019190915290910151606084015201516001600160a01b0316608082015260a00190565b5f8151606084526156386060850182614cf0565b602084810151868303878301528051808452908201935090915f91908301905b808310156156785784518252938301936001929092019190830190615658565b506040860151935086810360408801526156928185614cf0565b979650505050505050565b5f8151604084528051604085015260208101519050604060608501526156c66080850182615624565b6020938401516001600160a01b0316949093019390935250919050565b828152604060208201525f613518604083018461569d565b5f6040828403121561570b575f80fd5b6110018383614e60565b5f61018082019050838252825161575b60208401825180518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b602090810151805160c08501528082015160e0850152604081015161010085015260608101516101208501526080015161014084015292909201516001600160a01b031661016090910152919050565b5f60a082840312156157bb575f80fd5b6157c3614392565b82518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b6001600160401b0381168114610e3a575f80fd5b5f6040828403121561581d575f80fd5b61582561434e565b825161583081614406565b81526020830151614979816157f9565b5f60608201905083825282356020830152602083013561585f81614406565b6001600160a01b03166040929092019190915292915050565b5f60608284031215615888575f80fd5b611001838361490f565b5f61012082840312156158a3575f80fd5b6158ab6143b4565b6158b58484615296565b81526080830151602082015260a0830151604082015260c0830151606082015260e0830151608082015261010083015160a08201528091505092915050565b5f6101408284031215615905575f80fd5b6110018383614f21565b80358252602081013561592181614406565b6001600160a01b03908116602084015260408281013590840152606080830135908401526080808301359084015260a0828101359084015260c08201359061596882614406565b80821660c085015250505050565b8281526101008101611001602083018461590f565b5f806040838503121561599c575f80fd5b505080516020909101519092909150565b83815261012081016159c2602083018561590f565b82610100830152949350505050565b8281526080810161100160208301848035825260208082013590830152604090810135910152565b83815260a08101615a2160208301858035825260208082013590830152604090810135910152565b826080830152949350505050565b5f60208284031215615a3f575f80fd5b815161100181614425565b803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a0810135615a8481614406565b6001600160a01b031660a0929092019190915250565b8035615aa581614406565b6001600160a01b031682526020810135615abe816157f9565b6001600160401b0381166020840152505050565b8035615add81614406565b6001600160a01b039081168352602082013590615af982614406565b9081166020840152604082013590615b1082614406565b9081166040840152606082013590615b2782614406565b9081166060840152608082013590615b3e82614406565b908116608084015260a082013590615b5582614406565b80821660a085015250505050565b8681526001600160a01b03861660208201526102a08101615b876040830187615a4a565b84356101008301526020850135610120830152604085013561014083015260608501356101608301526080850135610180830152615bc96101a0830185615a9a565b6156926101e0830184615ad2565b8581526102808101615bec6020830187615a4a565b843560e08301526020850135610100830152604085013561012083015260608501356101408301526080850135610160830152615c2d610180830185615a9a565b613e816101c0830184615ad2565b82815260a081016110016020830184805180516001600160a01b0390811684526020808301518186015260409283015182169285019290925291015116606090910152565b5f60208284031215615c90575f80fd5b6110018383614c01565b600181815b80851115615cd457815f1904821115615cba57615cba6154d1565b80851615615cc757918102915b93841c9390800290615c9f565b509250929050565b5f82615cea57506001610cc3565b81615cf657505f610cc3565b8160018114615d0c5760028114615d1657615d32565b6001915050610cc3565b60ff841115615d2757615d276154d1565b50506001821b610cc3565b5060208310610133831016604e8410600b8410161715615d55575081810a610cc3565b615d5f8383615c9a565b805f1904821115615d7257615d726154d1565b029392505050565b5f6110018383615cdc565b8082028115828204841417610cc357610cc36154d1565b5f60208284031215615dac575f80fd5b815160ff81168114611001575f80fd5b5f61100160ff841683615cdc565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e19843603018112615df3575f80fd5b8301803591506001600160401b03821115615e0c575f80fd5b602001915036819003821315615e20575f80fd5b9250929050565b80820180821115610cc357610cc36154d1565b60a081525f615e4c60a0830186615624565b90506001600160801b03845116602083015260208401516001600160401b0380821660408501528060408701511660608501525050826080830152949350505050565b5f8251615ea0818460208701614c91565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220db53e39fafeb6758e3bee5bcf6394daa189c06a50577b2f4276ae064a15c23fd64736f6c63430008170033",
    "sourceMap": "4084:13278:279:-:0;;;1171:4:87;1128:48;;5000:53:279;;;;;;;;;-1:-1:-1;5024:22:279;:20;:22::i;:::-;4084:13278;;7709:422:86;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:86;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:86;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:86;-1:-1:-1;;;;;8033:33:86;;;;;8085:29;;158:50:495;;;8085:29:86;;146:2:495;131:18;8085:29:86;;;;;;;7979:146;7758:373;7709:422::o;14:200:495:-;4084:13278:279;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/market/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 8788, "length": 20 },
          { "start": 10359, "length": 20 }
        ]
      },
      "src/market/libraries/OfferLibrary.sol": {
        "OfferLibrary": [
          { "start": 4835, "length": 20 },
          { "start": 8469, "length": 20 }
        ]
      },
      "src/market/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 5467, "length": 20 },
          { "start": 5583, "length": 20 },
          { "start": 5918, "length": 20 },
          { "start": 9858, "length": 20 },
          { "start": 10687, "length": 20 },
          { "start": 11216, "length": 20 },
          { "start": 11926, "length": 20 }
        ]
      },
      "src/market/libraries/YieldCurveLibrary.sol": {
        "YieldCurveLibrary": [{ "start": 16152, "length": 20 }]
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 6966, "length": 20 },
          { "start": 7065, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 3552, "length": 20 },
          { "start": 9616, "length": 20 },
          { "start": 9715, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 12694, "length": 20 },
          { "start": 12793, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 5693, "length": 20 },
          { "start": 5792, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 13034, "length": 20 },
          { "start": 13133, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 12193, "length": 20 },
          { "start": 12334, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 11509, "length": 20 },
          { "start": 11608, "length": 20 },
          { "start": 11733, "length": 20 }
        ]
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 11004, "length": 20 },
          { "start": 11103, "length": 20 },
          { "start": 11359, "length": 20 }
        ]
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "PartialRepay": [
          { "start": 3689, "length": 20 },
          { "start": 3788, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 9443, "length": 20 },
          { "start": 9541, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 6765, "length": 20 },
          { "start": 6899, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 6471, "length": 20 },
          { "start": 6570, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5223, "length": 20 },
          { "start": 5322, "length": 20 },
          { "start": 10156, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetCopyLimitOrderConfigs.sol": {
        "SetCopyLimitOrderConfigs": [
          { "start": 8981, "length": 20 },
          { "start": 9080, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 4391, "length": 20 },
          { "start": 4490, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetVault.sol": {
        "SetVault": [
          { "start": 8582, "length": 20 },
          { "start": 8716, "length": 20 }
        ]
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3970, "length": 20 },
          { "start": 4069, "length": 20 },
          { "start": 4677, "length": 20 },
          { "start": 9190, "length": 20 },
          { "start": 9322, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 12860, "length": 20 },
          { "start": 12959, "length": 20 }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103be575f3560e01c80636c2eb350116101f4578063ac9650d811610113578063d927acef116100a8578063f1bf35c311610078578063f1bf35c314610c28578063f45bf01c14610c47578063f54ae18b14610c5a578063fa823af514610c6d578063fd17174a14610c80575f80fd5b8063d927acef14610bd0578063e05001f514610be3578063e236052b14610bf6578063e5af06ce14610c09575f80fd5b8063ca40742c116100e3578063ca40742c14610b6c578063cb2e9bdc14610b8b578063ccd8d4d114610b9e578063d547741f14610bb1575f80fd5b8063ac9650d814610aa2578063ad3cb1cc14610ac2578063b5ec748714610af2578063c421a75914610b4d575f80fd5b80637f417c06116101895780638ea68d7e116101595780638ea68d7e14610a3157806391d1485414610a445780639ab8011514610a63578063a217fddf14610a8f575f80fd5b80637f417c06146109e4578063834dafb5146109f75780638456cb5914610a0a5780638e57277614610a1e575f80fd5b806376c1b82f116101c457806376c1b82f1461090f5780637a32376a1461093b5780637c90a6ca1461094e5780637dc0d1d0146109a3575f80fd5b80636c2eb350146107a557806373b683be146107b957806373d4a13a146107d857806375829a36146108fc575f80fd5b80632f2ff15d116102e05780634fd9a8a51161027557806353e043d41161024557806353e043d41461070e57806354fd4d50146107215780635c975abb146107565780635cbc51eb14610779575f80fd5b80634fd9a8a5146106c1578063510aeb39146106d457806352d1902d146106e7578063536b9c79146106fb575f80fd5b80633ae6d7c3116102b05780633ae6d7c3146106685780633f4ba83a1461067b5780634cbd882c1461068f5780634f1ef286146106ae575f80fd5b80632f2ff15d1461060457806336568abe146106235780633746f858146106425780633962a68614610655575f80fd5b80631970e5ea11610356578063248a9ca311610326578063248a9ca3146105a05780632b4c9a20146105bf5780632b59bd99146105d25780632e106f21146105f1575f80fd5b80631970e5ea146104d55780631ca3b0cb146104f45780631e5eb1d01461051d5780631ff75b0b14610581575f80fd5b806304c842221161039157806304c84222146104565780630cf8542f146104825780630d37ab0014610495578063134f3f96146104c2575f80fd5b806301ffc9a7146103c257806302088c51146103f657806302f2855a146104225780630317b9df14610437575b5f80fd5b3480156103cd575f80fd5b506103e16103dc3660046142c8565b610c93565b60405190151581526020015b60405180910390f35b348015610401575f80fd5b506104156104103660046144c8565b610cc9565b6040516103ed9190614511565b610435610430366004614586565b610d4a565b005b348015610442575f80fd5b506104356104513660046145b0565b610e3d565b348015610461575f80fd5b506104756104703660046145e1565b610f41565b6040516103ed91906145fc565b610435610490366004614586565b610fc8565b3480156104a0575f80fd5b506104b46104af366004614635565b610ff5565b6040519081526020016103ed565b6104356104d0366004614761565b611008565b3480156104e0575f80fd5b506104b46104ef3660046147df565b6110b6565b3480156104ff575f80fd5b506105086110c1565b604080519283526020830191909152016103ed565b348015610528575f80fd5b506105316110f4565b6040516103ed9190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b34801561058c575f80fd5b506104b461059b3660046147f6565b6111a6565b3480156105ab575f80fd5b506104b46105ba3660046147df565b611249565b6104356105cd366004614586565b611269565b3480156105dd575f80fd5b506104b46105ec366004614635565b611296565b6104356105ff36600461483b565b6112a2565b34801561060f575f80fd5b5061043561061e366004614871565b6112c8565b34801561062e575f80fd5b5061043561063d366004614871565b6112ea565b6104356106503660046145b0565b611322565b6104356106633660046148f4565b611348565b610435610676366004614947565b611493565b348015610686575f80fd5b506104356116cf565b34801561069a575f80fd5b506104356106a9366004614985565b611728565b6104356106bc3660046149ab565b611809565b6104356106cf366004614bb6565b611828565b6104356106e2366004614be7565b6118d6565b3480156106f2575f80fd5b506104b4611903565b610435610709366004614c40565b61191e565b61043561071c366004614bb6565b611a17565b34801561072c575f80fd5b506040805180820190915260048152630ec625c760e31b60208201525b6040516103ed9190614cde565b348015610761575f80fd5b505f80516020615eeb8339815191525460ff166103e1565b348015610784575f80fd5b506107986107933660046145e1565b611ac5565b6040516103ed9190614dbe565b3480156107b0575f80fd5b50610435611f08565b3480156107c4575f80fd5b506104b46107d33660046147f6565b611fd8565b3480156107e3575f80fd5b5061088b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e09283015190911691810191909152610100016103ed565b61043561090a366004614e95565b612037565b34801561091a575f80fd5b5061092e6109293660046147df565b612130565b6040516103ed9190614ec7565b610435610949366004614f55565b6121f6565b348015610959575f80fd5b506109626122a4565b6040516103ed91905f60a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b3480156109ae575f80fd5b506109b7612342565b6040805182516001600160a01b031681526020928301516001600160401b031692810192909252016103ed565b6104356109f2366004614be7565b6123c5565b610435610a053660046148f4565b612471565b348015610a15575f80fd5b506104356125a4565b610435610a2c366004614586565b6125fd565b610435610a3f3660046144c8565b61262a565b348015610a4f575f80fd5b506103e1610a5e366004614871565b61265f565b348015610a6e575f80fd5b50610a82610a7d3660046144c8565b612695565b6040516103ed9190614f89565b348015610a9a575f80fd5b506104b45f81565b610ab5610ab0366004614fd5565b612716565b6040516103ed9190615043565b348015610acd575f80fd5b50610749604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610afd575f80fd5b50610b11610b0c3660046147df565b61272b565b6040516103ed919081516001600160a01b0316815260208083015190820152604080830151908201526060918201519181019190915260800190565b348015610b58575f80fd5b50610475610b673660046145e1565b612811565b348015610b77575f80fd5b506104b4610b863660046145e1565b612898565b610435610b993660046150a5565b61291b565b610435610bac3660046145b0565b612948565b348015610bbc575f80fd5b50610435610bcb366004614871565b61296e565b610508610bde3660046150b6565b61298a565b6104b4610bf1366004614586565b612bd5565b610435610c043660046150c6565b612d43565b348015610c14575f80fd5b506103e1610c233660046147df565b612d77565b348015610c33575f80fd5b50610435610c423660046150e7565b612df2565b610435610c5536600461516b565b61306a565b610435610c683660046151f8565b61311d565b610435610c7b3660046151f8565b6131cb565b610435610c8e36600461516b565b613279565b5f6001600160e01b03198216637965db0b60e01b1480610cc357506301ffc9a760e01b6001600160e01b03198316145b92915050565b610cd1614175565b604051631c81982560e11b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__90633903304a90610d0a905f908690600401615281565b61014060405180830381865af4158015610d26573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc391906152ec565b610d526132ad565b610d5a6132e4565b604051635fed4de960e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__90635fed4de990610d93905f908590600401615381565b5f6040518083038186803b158015610da9575f80fd5b505af4158015610dbb573d5f803e3d5ffd5b505060405163d96aec4360e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__925063d96aec439150610df8905f908590600401615381565b5f6040518083038186803b158015610e0e575f80fd5b505af4158015610e20573d5f803e3d5ffd5b50505050610e3a60015f80516020615f0b83398151915255565b50565b5f610e488133613329565b610e735760405163e2517d3f60e01b8152336004820152602481018290526044015b60405180910390fd5b60405163e57980dd60e01b815273__$72c16261390208f563094e6a4fc9f74031$__9063e57980dd90610eac905f9086906004016153c3565b5f6040518083038186803b158015610ec2575f80fd5b505af4158015610ed4573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$72c16261390208f563094e6a4fc9f74031$__9250634752b3b39150610f11905f9086906004016153c3565b5f6040518083038186803b158015610f27575f80fd5b505af4158015610f39573d5f803e3d5ffd5b505050505050565b610f6e6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b506001600160a01b03165f908152601b6020908152604091829020825160a0810184526001820154815260028201549281019290925260038101549282019290925260048201546060820152600590910154608082015290565b610e3a604051806040016040528083803603810190610fe79190615447565b8152336020909101526131cb565b5f6110018184846133d2565b9392505050565b6110106132ad565b6110186132e4565b6040516333d4ade560e01b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__906333d4ade590611051905f908590600401615461565b5f6040518083038186803b158015611067575f80fd5b505af4158015611079573d5f803e3d5ffd5b505060405163178bcac760e11b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__9250632f17958e9150610df8905f908590600401615461565b5f610cc38183613520565b6011545f9081906110d39082906154e5565b6110df60025f196154f8565b6012546110ec91906154e5565b915091509091565b6111306040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__906386617e779060240160c060405180830381865af415801561117d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111a19190615517565b905090565b60405163897bce1f60e01b81525f600482018190526001600160a01b0380871660248401526044830186905284166064830152608482018390529073__$fad1da84a532053b53119316a58e977f10$__9063897bce1f9060a4015b602060405180830381865af415801561121c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112409190615575565b95945050505050565b5f9081525f80516020615ecb833981519152602052604090206001015490565b610e3a6040518060400160405280838036038101906112889190615447565b81523360209091015261311d565b5f611001818484613720565b610e3a6040518060400160405280836112ba9061558c565b815233602090910152611008565b6112d182611249565b6112da81613864565b6112e4838361386e565b50505050565b6001600160a01b03811633146113135760405163334bd91960e11b815260040160405180910390fd5b61131d828261390f565b505050565b610e3a60405180604001604052808361133a90615597565b815233602090910152611a17565b6113506132ad565b6113586132e4565b60405163160b9e6b60e31b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063b05cf35890611391905f9085906004016155d3565b5f6040518083038186803b1580156113a7575f80fd5b505af41580156113b9573d5f803e3d5ffd5b5050604051639f46aa4160e01b815273__$c58e2605104bb31274ad8c04841b6a7550$__9250639f46aa4191506113f6905f9085906004016155d3565b5f6040518083038186803b15801561140c575f80fd5b505af415801561141e573d5f803e3d5ffd5b505050505f19815f0151602001510361147d5760208101516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401610df8565b610e3a60015f80516020615f0b83398151915255565b61149b6132ad565b6114a36132e4565b602081015160405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af4158015611507573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061152b9190615575565b60405163f9c417bd60e01b815290915073__$7fa168b5d238863382c2bf886894022425$__9063f9c417bd90611567905f9087906004016155e8565b5f6040518083038186803b15801561157d575f80fd5b505af415801561158f573d5f803e3d5ffd5b5050604051634971bf9960e01b815273__$7fa168b5d238863382c2bf886894022425$__9250634971bf9991506115cc905f9087906004016155e8565b5f6040518083038186803b1580156115e2575f80fd5b505af41580156115f4573d5f803e3d5ffd5b505060405163046dbd1360e11b81525f600482018190526001600160a01b0386166024830152925073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__91506308db7a2690604401602060405180830381865af4158015611657573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061167b9190615575565b90508181116116b65760405163625a84dd60e01b81526001600160a01b03841660048201526024810183905260448101829052606401610e6a565b505050610e3a60015f80516020615f0b83398151915255565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6116fa8133613329565b6117205760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b610e3a613988565b6117306132ad565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd2403861175b8133613329565b6117815760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a25050610e3a60015f80516020615f0b83398151915255565b6118116139e7565b61181a82613a8b565b6118248282613abc565b5050565b6118306132ad565b6118386132e4565b604051637125eda960e11b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__9063e24bdb5290611871905f9085906004016156e3565b5f6040518083038186803b158015611887575f80fd5b505af4158015611899573d5f803e3d5ffd5b505060405163184d91f360e31b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__925063c26c8f989150610df8905f9085906004016156e3565b610e3a6040518060400160405280838036038101906118f591906156fb565b815233602090910152612037565b5f61190c613b78565b505f80516020615eab83398151915290565b6119266132ad565b61192e6132e4565b604080516325f2df6f60e01b81525f6004820152825151602482015260208301516001600160a01b03908116604483015291830151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__906325f2df6f906084015f6040518083038186803b1580156119a0575f80fd5b505af41580156119b2573d5f803e3d5ffd5b5050604080516330e78a9160e11b81525f6004820152845151602482015260208501516001600160a01b03908116604483015291850151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__92506361cf15229150608401610df8565b611a1f6132ad565b611a276132e4565b604051632d0c1e8b60e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__90632d0c1e8b90611a60905f9085906004016156e3565b5f6040518083038186803b158015611a76575f80fd5b505af4158015611a88573d5f803e3d5ffd5b505060405163c0c66ed960e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__925063c0c66ed99150610df8905f9085906004016156e3565b611acd6141bb565b5f80516020615f0b83398151915254600203611afc57604051633ee5aeb560e01b815260040160405180910390fd5b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611b8e57602002820191905f5260205f20905b815481526020019060010190808311611b7a575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611be457602002820191905f5260205f20905b815481526020019060010190808311611bd0575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611c3a57602002820191905f5260205f20905b815481526020019060010190808311611c26575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015611cc057602002820191905f5260205f20905b815481526020019060010190808311611cac575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611d1657602002820191905f5260205f20905b815481526020019060010190808311611d02575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611d6c57602002820191905f5260205f20905b815481526020019060010190808311611d58575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa158015611df2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e169190615575565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611e66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e8a9190615575565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611eda573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611efe9190615575565b905290505b919050565b5f611f1281613864565b612a305f611f1e613bc1565b8054909150600160401b900460ff1680611f45575080546001600160401b03808416911610155b15611f635760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b03831617600160401b178155611f8c613be9565b805460ff60401b191681556040516001600160401b03831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050565b604051637574b6e360e01b81525f600482018190526001600160a01b0380871660248401526044830186905284166064830152608482018390529073__$fad1da84a532053b53119316a58e977f10$__90637574b6e39060a401611201565b61203f6132ad565b6120476132e4565b604051623fe27360e01b81525f6004820152815180516001600160a01b039081166024840152602091820151151560448401529083015116606482015273__$c6aecf0de9c97d330c260596cb45f01743$__90623fe273906084015f6040518083038186803b1580156120b8575f80fd5b505af41580156120ca573d5f803e3d5ffd5b505060405163724e2b6f60e01b81525f6004820152835180516001600160a01b039081166024840152602091820151151560448401529085015116606482015273__$c6aecf0de9c97d330c260596cb45f01743$__925063724e2b6f9150608401610df8565b6121386141f5565b604051633978289f60e01b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90633978289f90604401602060405180830381865af415801561218c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121b09190615575565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b6121fe6132ad565b6122066132e4565b60405163da25f11760e01b815273__$e9ef7182266124a833dac7dfa55fc79e51$__9063da25f1179061223f905f908590600401615715565b5f6040518083038186803b158015612255575f80fd5b505af4158015612267573d5f803e3d5ffd5b50506040516388fb1b6760e01b815273__$e9ef7182266124a833dac7dfa55fc79e51$__92506388fb1b679150610df8905f908590600401615715565b6122d16040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063dd378fd69060240160a060405180830381865af415801561231e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111a191906157ab565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063d72f4008906024016040805180830381865af41580156123a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111a1919061580d565b6123cd6132ad565b6123d56132e4565b6040516210aa0b60e31b815273__$45d7492db284be01938913cb41b9cac2a6$__90628550589061240c905f908590600401615840565b5f6040518083038186803b158015612422575f80fd5b505af4158015612434573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$45d7492db284be01938913cb41b9cac2a6$__92506364140a839150610df8905f908590600401615840565b6124796132ad565b6124816132e4565b604051631e55c20b60e31b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9063f2ae1058906124ba905f9085906004016155d3565b5f6040518083038186803b1580156124d0575f80fd5b505af41580156124e2573d5f803e3d5ffd5b5050604051630f6470bd60e01b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9250630f6470bd915061251f905f9085906004016155d3565b5f6040518083038186803b158015612535575f80fd5b505af4158015612547573d5f803e3d5ffd5b505050505f19815f0151602001510361147d578051516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401610df8565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6125cf8133613329565b6125f55760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b610e3a613bf9565b610e3a60405180604001604052808380360381019061261c9190615878565b815233602090910152611493565b610e3a6040518060600160405280838152602001336001600160a01b03168152602001336001600160a01b0316815250611348565b5f9182525f80516020615ecb833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61269d614224565b60405163301d1d1560e21b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063c0747454906126d6905f908690600401615281565b61012060405180830381865af41580156126f2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc39190615892565b60606127206132e4565b6110015f8484613c41565b61275b60405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af41580156127af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127d39190615575565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b61283e6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b506001600160a01b03165f908152601b6020908152604091829020825160a0810184526006820154815260078201549281019290925260088101549282019290925260098201546060820152600a90910154608082015290565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af41580156128f7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc39190615575565b610e3a60405180604001604052808380360381019061293a91906158f4565b8152336020909101526121f6565b610e3a60405180604001604052808361296090615597565b815233602090910152611828565b61297782611249565b61298081613864565b6112e4838361390f565b5f806129946132ad565b61299c6132e4565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab6129c78133613329565b6129ed5760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b604051639f53ee0f60e01b815273__$d00168f5747027b5a56099c751031d7e40$__90639f53ee0f90612a26905f908890600401615976565b5f6040518083038186803b158015612a3c575f80fd5b505af4158015612a4e573d5f803e3d5ffd5b505060405163647a4b7560e11b815273__$d00168f5747027b5a56099c751031d7e40$__925063c8f496ea9150612a8b905f908890600401615976565b6040805180830381865af4158015612aa5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ac9919061598b565b909350915073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__632d77afb65f612af960408801602089016145e1565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b158015612b3c575f80fd5b505af4158015612b4e573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$d00168f5747027b5a56099c751031d7e40$__9250636e6595c19150612b8d905f90889088906004016159ad565b5f6040518083038186803b158015612ba3575f80fd5b505af4158015612bb5573d5f803e3d5ffd5b5050505050612bd060015f80516020615f0b83398151915255565b915091565b5f612bde6132ad565b612be66132e4565b6040516320b5435f60e11b815273__$04d32033081e1e9356971d8f4b5098bcad$__9063416a86be90612c1f905f9086906004016159d1565b5f6040518083038186803b158015612c35575f80fd5b505af4158015612c47573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$04d32033081e1e9356971d8f4b5098bcad$__925063341a672c9150612c84905f9086906004016159d1565b602060405180830381865af4158015612c9f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612cc39190615575565b60405163489d188160e01b815290915073__$04d32033081e1e9356971d8f4b5098bcad$__9063489d188190612d01905f90869086906004016159f9565b5f6040518083038186803b158015612d17575f80fd5b505af4158015612d29573d5f803e3d5ffd5b50505050611f0360015f80516020615f0b83398151915255565b610e3a604051806060016040528083803603810190612d6291906144c8565b81523360208201819052604090910152612471565b604051631928c8e960e11b81525f60048201819052602482018390529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__9063325191d290604401602060405180830381865af4158015612dce573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc39190615a2f565b5f612dfb613bc1565b805490915060ff600160401b82041615906001600160401b03165f81158015612e215750825b90505f826001600160401b03166001148015612e3c5750303b155b905081158015612e4a575080155b15612e685760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315612e9257845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__906369777eb990612ed3905f908e908e908e908e908e90600401615b63565b5f6040518083038186803b158015612ee9575f80fd5b505af4158015612efb573d5f803e3d5ffd5b50505050612f07613d29565b612f0f613d29565b612f17613be9565b612f1f613d29565b604051632ffdac7160e21b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__9063bff6b1c490612f5e905f908d908d908d908d90600401615bd7565b5f6040518083038186803b158015612f74575f80fd5b505af4158015612f86573d5f803e3d5ffd5b50505050612f965f801b8b61386e565b50612fc17f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b61386e565b50612fec7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b61386e565b506130177f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b61386e565b50831561305e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b6130726132ad565b61307a6132e4565b604051635792057f60e11b81525f60048201528135602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__9063af240afe906044015f6040518083038186803b1580156130c9575f80fd5b505af41580156130db573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__92506341d373f29150604401610df8565b6131256132ad565b61312d6132e4565b604051631005beb160e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__9063802df58890613166905f908590600401615c3b565b5f6040518083038186803b15801561317c575f80fd5b505af415801561318e573d5f803e3d5ffd5b5050604051631cc17ae560e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__925063e60bd7289150610df8905f908590600401615c3b565b6131d36132ad565b6131db6132e4565b60405163024889b160e51b815273__$d49e499a4608ab3aca09b91fe5950492b6$__90634911362090613214905f908590600401615c3b565b5f6040518083038186803b15801561322a575f80fd5b505af415801561323c573d5f803e3d5ffd5b505060405163a083c0ab60e01b815273__$d49e499a4608ab3aca09b91fe5950492b6$__925063a083c0ab9150610df8905f908590600401615c3b565b610e3a6040518060600160405280838036038101906132989190615c80565b8152336020820181905260409091015261191e565b5f80516020615f0b8339815191528054600119016132de57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b5f80516020615eeb8339815191525460ff16156133145760405163d93c066560e01b815260040160405180910390fd5b565b60015f80516020615f0b83398151915255565b5f613334838361265f565b1561334157506001610cc3565b601c546001600160a01b031661335857505f610cc3565b601c54604051632474521560e21b8152600481018590526001600160a01b038481166024830152909116906391d1485490604401602060405180830381865afa1580156133a7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906133cb9190615a2f565b9050610cc3565b6001600160a01b0382165f908152600e8401602090815260408083208151808301835281548152825160018301805460808188028401810190965260608301818152613518978c978c979591870194919391928492909184919084018282801561345957602002820191905f5260205f20905b815481526020019060010190808311613445575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156134af57602002820191905f5260205f20905b81548152602001906001019080831161349b575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561350557602002820191905f5260205f20905b8154815260200190600101908083116134f1575b5050505050815250508152505085613d31565b949350505050565b5f61100183600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613578573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061359c9190615575565b6135a790600a615d7a565b6135b19084615d85565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa1580156135fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061361f9190615d9c565b61362a90600a615dbc565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015613674573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906136989190615d9c565b6136a390600a615dbc565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa1580156136ed573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906137119190615575565b61371b9190615d85565b613e8b565b6001600160a01b0382165f908152600e84016020908152604080832081518083018352600482018054825283516005909301805460808188028601810190965260608501818152613518978c978c9791870194919391928492909184919084018282801561345957602002820191905f5260205f20908154815260200190600101908083116134455750505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156134af57602002820191905f5260205f209081548152602001906001019080831161349b57505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561350557602002820191905f5260205f20908154815260200190600101908083116134f1575050505050815250508152505085613d31565b610e3a8133613e97565b5f5f80516020615ecb833981519152613887848461265f565b613906575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556138bc3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610cc3565b5f915050610cc3565b5f5f80516020615ecb833981519152613928848461265f565b15613906575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610cc3565b613990613ed0565b5f80516020615eeb833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480613a6d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316613a615f80516020615eab833981519152546001600160a01b031690565b6001600160a01b031614155b156133145760405163703e46dd60e11b815260040160405180910390fd5b5f613a968133613329565b6118245760405163e2517d3f60e01b815233600482015260248101829052604401610e6a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613b16575060408051601f3d908101601f19168201909252613b1391810190615575565b60015b613b3e57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e6a565b5f80516020615eab8339815191528114613b6e57604051632a87526960e21b815260048101829052602401610e6a565b61131d8383613eff565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146133145760405163703e46dd60e11b815260040160405180910390fd5b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610cc3565b613bf1613f54565b613314613f79565b613c016132e4565b5f80516020615eeb833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336139c9565b6060816001600160401b03811115613c5b57613c5b6142ef565b604051908082528060200260200182016040528015613c8e57816020015b6060815260200190600190039081613c795790505b5090505f5b82811015613d2157613cfc30858584818110613cb157613cb1615dca565b9050602002810190613cc39190615dde565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613f8192505050565b828281518110613d0e57613d0e615dca565b6020908102919091010152600101613c93565b509392505050565b613314613f54565b5f815f03613d52576040516301c85f6760e71b815260040160405180910390fd5b613d5b83613fea565b15613d835760405162b04ee160e61b81526001600160a01b0385166004820152602401610e6a565b8251613d8f8342615e27565b1115613dc357613d9f8242615e27565b8351604051636f2f16a760e01b815260048101929092526024820152604401610e6a565b60408051606081018252600d8701546001600160801b03811682526001600160401b03600160801b82048116602080850191909152600160c01b909204168284015285015191516315c6891560e11b8152909173__$99c8b6d537f6911e4d5e2b5618b4ddcec4$__91632b8d122a91613e429185908890600401615e3a565b602060405180830381865af4158015613e5d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613e819190615575565b9695505050505050565b5f613518848484614003565b613ea1828261265f565b6118245760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610e6a565b5f80516020615eeb8339815191525460ff1661331457604051638dfc202b60e01b815260040160405180910390fd5b613f088261402f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115613f4c5761131d8282613f81565b611824614092565b613f5c6140b1565b61331457604051631afcd79f60e31b815260040160405180910390fd5b613316613f54565b60605f80846001600160a01b031684604051613f9d9190615e8f565b5f60405180830381855af49150503d805f8114613fd5576040519150601f19603f3d011682016040523d82523d5f602084013e613fda565b606091505b50915091506112408583836140ca565b80515f90158015610cc35750610cc38260200151614126565b5f825f1904841183021582026140205763ad251c275f526004601cfd5b50910281810615159190040190565b806001600160a01b03163b5f0361406457604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e6a565b5f80516020615eab83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b34156133145760405163b398979f60e01b815260040160405180910390fd5b5f6140ba613bc1565b54600160401b900460ff16919050565b6060826140df576140da8261414c565b611001565b81511580156140f657506001600160a01b0384163b155b1561411f57604051639996b31560e01b81526001600160a01b0385166004820152602401610e6a565b5080611001565b8051515f9015801561413b5750602082015151155b8015610cc357505060400151511590565b80511561415c5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6040518060e001604052806141886141f5565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060a001604052806141ce61425b565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81525090565b60405180608001604052805f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b6040518060c001604052806142376141f5565b81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051806080016040528061426e61428e565b815260200161427b61428e565b81525f6020820181905260409091015290565b60405180604001604052805f81526020016142c360405180606001604052806060815260200160608152602001606081525090565b905290565b5f602082840312156142d8575f80fd5b81356001600160e01b031981168114611001575f80fd5b634e487b7160e01b5f52604160045260245ffd5b60405161012081016001600160401b0381118282101715614326576143266142ef565b60405290565b604051608081016001600160401b0381118282101715614326576143266142ef565b604080519081016001600160401b0381118282101715614326576143266142ef565b604051606081016001600160401b0381118282101715614326576143266142ef565b60405160a081016001600160401b0381118282101715614326576143266142ef565b60405160c081016001600160401b0381118282101715614326576143266142ef565b604051601f8201601f191681016001600160401b03811182821017156143fe576143fe6142ef565b604052919050565b6001600160a01b0381168114610e3a575f80fd5b8035611f0381614406565b8015158114610e3a575f80fd5b8035611f0381614425565b5f610120828403121561444e575f80fd5b614456614303565b90506144618261441a565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a08201526144a160c08301614432565b60c082015260e082013560e08201526101006144be81840161441a565b9082015292915050565b5f61012082840312156144d9575f80fd5b611001838361443d565b80516001600160a01b0316825260208082015115159083015260408082015190830152606090810151910152565b5f610140820190506145248284516144e3565b60018060a01b036020840151166080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015260c083015161012083015292915050565b5f60608284031215614580575f80fd5b50919050565b5f60608284031215614596575f80fd5b6110018383614570565b5f60408284031215614580575f80fd5b5f602082840312156145c0575f80fd5b81356001600160401b038111156145d5575f80fd5b613518848285016145a0565b5f602082840312156145f1575f80fd5b813561100181614406565b60a08101610cc3828480518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b5f8060408385031215614646575f80fd5b823561465181614406565b946020939093013593505050565b5f6001600160401b03821115614677576146776142ef565b5060051b60200190565b5f82601f830112614690575f80fd5b813560206146a56146a08361465f565b6143d6565b8083825260208201915060208460051b8701019350868411156146c6575f80fd5b602086015b848110156146e257803583529183019183016146cb565b509695505050505050565b5f608082840312156146fd575f80fd5b61470561432c565b905081358152602082013561471981614425565b6020820152604082013561472c81614425565b604082015260608201356001600160401b03811115614749575f80fd5b61475584828501614681565b60608301525092915050565b5f60208284031215614771575f80fd5b81356001600160401b0380821115614787575f80fd5b908301906040828603121561479a575f80fd5b6147a261434e565b8235828111156147b0575f80fd5b6147bc878286016146ed565b825250602083013592506147cf83614406565b6020810192909252509392505050565b5f602082840312156147ef575f80fd5b5035919050565b5f805f8060808587031215614809575f80fd5b843561481481614406565b935060208501359250604085013561482b81614406565b9396929550929360600135925050565b5f6020828403121561484b575f80fd5b81356001600160401b03811115614860575f80fd5b820160808185031215611001575f80fd5b5f8060408385031215614882575f80fd5b82359150602083013561489481614406565b809150509250929050565b5f61016082840312156148b0575f80fd5b6148b8614370565b90506148c4838361443d565b81526101208201356148d581614406565b60208201526101408201356148e981614406565b604082015292915050565b5f6101608284031215614905575f80fd5b611001838361489f565b5f6060828403121561491f575f80fd5b614927614370565b905081358152602082013560208201526040820135604082015292915050565b5f60808284031215614957575f80fd5b61495f61434e565b614969848461490f565b8152606083013561497981614406565b60208201529392505050565b5f60208284031215614995575f80fd5b81356001600160801b0381168114611001575f80fd5b5f80604083850312156149bc575f80fd5b82356149c781614406565b91506020838101356001600160401b03808211156149e3575f80fd5b818601915086601f8301126149f6575f80fd5b813581811115614a0857614a086142ef565b614a1a601f8201601f191685016143d6565b91508082528784828501011115614a2f575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f60408284031215614a5c575f80fd5b614a6461434e565b9050813581526020808301356001600160401b0380821115614a84575f80fd5b9084019060608287031215614a97575f80fd5b614a9f614370565b823582811115614aad575f80fd5b614ab988828601614681565b8252508383013582811115614acc575f80fd5b8301601f81018813614adc575f80fd5b8035614aea6146a08261465f565b81815260059190911b8201860190868101908a831115614b08575f80fd5b928701925b82841015614b2657833582529287019290870190614b0d565b84880152505050604083013582811115614b3e575f80fd5b614b4a88828601614681565b60408301525080848601525050505092915050565b5f60408284031215614b6f575f80fd5b614b7761434e565b905081356001600160401b03811115614b8e575f80fd5b614b9a84828501614a4c565b8252506020820135614bab81614406565b602082015292915050565b5f60208284031215614bc6575f80fd5b81356001600160401b03811115614bdb575f80fd5b61351884828501614b5f565b5f60408284031215614bf7575f80fd5b61100183836145a0565b5f60208284031215614c11575f80fd5b604051602081018181106001600160401b0382111715614c3357614c336142ef565b6040529135825250919050565b5f60608284031215614c50575f80fd5b614c58614370565b614c628484614c01565b81526020830135614c7281614406565b60208201526040830135614c8581614406565b60408201529392505050565b5f5b83811015614cab578181015183820152602001614c93565b50505f910152565b5f8151808452614cca816020860160208601614c91565b601f01601f19169290920160200192915050565b602081525f6110016020830184614cb3565b5f815180845260208085019450602084015f5b83811015614d1f57815187529582019590820190600101614d03565b509495945050505050565b805182525f602080830151604082860152805160606040870152614d5160a0870182614cf0565b83830151603f19888303810160608a0152815180845291860193505f929091908601905b80841015614d955784518252938601936001939093019290860190614d75565b5060408501519550818982030160808a0152614db18187614cf0565b9998505050505050505050565b602081525f825160a060208401528051608060c0850152614de3610140850182614d2a565b9050602082015160bf198583030160e0860152614e008282614d2a565b91505060408201516101008501526060820151151561012085015260208501519150614e3760408501836001600160a01b03169052565b6040850151606085015260608501516080850152608085015160a0850152809250505092915050565b5f60408284031215614e70575f80fd5b614e7861434e565b90508135614e8581614406565b81526020820135614bab81614425565b5f60608284031215614ea5575f80fd5b614ead61434e565b614eb78484614e60565b8152604083013561497981614406565b60808101610cc382846144e3565b5f60a08284031215614ee5575f80fd5b614eed614392565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b5f6101408284031215614f32575f80fd5b614f3a61434e565b9050614f468383614ed5565b8152614bab8360a08401614ed5565b5f6101608284031215614f66575f80fd5b614f6e61434e565b614f788484614f21565b815261014083013561497981614406565b5f61012082019050614f9c8284516144e3565b60208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015292915050565b5f8060208385031215614fe6575f80fd5b82356001600160401b0380821115614ffc575f80fd5b818501915085601f83011261500f575f80fd5b81358181111561501d575f80fd5b8660208260051b8501011115615031575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561509857603f19888603018452615086858351614cb3565b9450928501929085019060010161506a565b5092979650505050505050565b5f6101408284031215614580575f80fd5b5f60e08284031215614580575f80fd5b5f6101208284031215614580575f80fd5b5f60c08284031215614580575f80fd5b5f805f805f8587036102808112156150fd575f80fd5b863561510881614406565b955061511788602089016150d7565b945060a060df198201121561512a575f80fd5b5060e08601925061513f8761018088016145a0565b915061514f876101c088016150d7565b90509295509295909350565b5f60208284031215614580575f80fd5b5f6020828403121561517b575f80fd5b611001838361515b565b5f60608284031215615195575f80fd5b61519d614370565b905081356151aa81614406565b81526020828101359082015260408201356148e981614406565b5f608082840312156151d4575f80fd5b6151dc61434e565b90506151e88383615185565b81526060820135614bab81614406565b5f60808284031215615208575f80fd5b61100183836151c4565b60018060a01b0381511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c0810151151560c083015260e081015160e0830152610100808201516112e4828501826001600160a01b03169052565b82815261014081016110016020830184615212565b5f608082840312156152a6575f80fd5b6152ae61432c565b905081516152bb81614406565b815260208201516152cb81614425565b80602083015250604082015160408201526060820151606082015292915050565b5f61014082840312156152fd575f80fd5b60405160e081018181106001600160401b038211171561531f5761531f6142ef565b60405261532c8484615296565b8152608083015161533c81614406565b8060208301525060a0830151604082015260c0830151606082015260e0830151608082015261010083015160a082015261012083015160c08201528091505092915050565b5f608082019050838252823560208301526020830135604083015260408301356153aa81614406565b6001600160a01b03166060929092019190915292915050565b828152604060208201525f8235601e198436030181126153e1575f80fd5b83016020810190356001600160401b038111156153fc575f80fd5b80360382131561540a575f80fd5b604080850152806080850152808260a08601375f60a082860101526020850135606085015260a0601f19601f830116850101925050509392505050565b5f60608284031215615457575f80fd5b6110018383615185565b828152604060208201525f8251604080840152805160808401526020810151151560a08401526040810151151560c084015260608101519050608060e08401526154af610100840182614cf0565b602094909401516001600160a01b031660609390930192909252509092915050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610cc357610cc36154d1565b5f8261551257634e487b7160e01b5f52601260045260245ffd5b500490565b5f60c08284031215615527575f80fd5b61552f6143b4565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015161556981614406565b60a08201529392505050565b5f60208284031215615585575f80fd5b5051919050565b5f610cc336836146ed565b5f610cc33683614a4c565b6155ad828251615212565b60208101516001600160a01b039081166101208401526040909101511661014090910152565b828152610180810161100160208301846155a2565b918252805180516020808501919091528082015160408086019190915290910151606084015201516001600160a01b0316608082015260a00190565b5f8151606084526156386060850182614cf0565b602084810151868303878301528051808452908201935090915f91908301905b808310156156785784518252938301936001929092019190830190615658565b506040860151935086810360408801526156928185614cf0565b979650505050505050565b5f8151604084528051604085015260208101519050604060608501526156c66080850182615624565b6020938401516001600160a01b0316949093019390935250919050565b828152604060208201525f613518604083018461569d565b5f6040828403121561570b575f80fd5b6110018383614e60565b5f61018082019050838252825161575b60208401825180518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b602090810151805160c08501528082015160e0850152604081015161010085015260608101516101208501526080015161014084015292909201516001600160a01b031661016090910152919050565b5f60a082840312156157bb575f80fd5b6157c3614392565b82518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b6001600160401b0381168114610e3a575f80fd5b5f6040828403121561581d575f80fd5b61582561434e565b825161583081614406565b81526020830151614979816157f9565b5f60608201905083825282356020830152602083013561585f81614406565b6001600160a01b03166040929092019190915292915050565b5f60608284031215615888575f80fd5b611001838361490f565b5f61012082840312156158a3575f80fd5b6158ab6143b4565b6158b58484615296565b81526080830151602082015260a0830151604082015260c0830151606082015260e0830151608082015261010083015160a08201528091505092915050565b5f6101408284031215615905575f80fd5b6110018383614f21565b80358252602081013561592181614406565b6001600160a01b03908116602084015260408281013590840152606080830135908401526080808301359084015260a0828101359084015260c08201359061596882614406565b80821660c085015250505050565b8281526101008101611001602083018461590f565b5f806040838503121561599c575f80fd5b505080516020909101519092909150565b83815261012081016159c2602083018561590f565b82610100830152949350505050565b8281526080810161100160208301848035825260208082013590830152604090810135910152565b83815260a08101615a2160208301858035825260208082013590830152604090810135910152565b826080830152949350505050565b5f60208284031215615a3f575f80fd5b815161100181614425565b803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a0810135615a8481614406565b6001600160a01b031660a0929092019190915250565b8035615aa581614406565b6001600160a01b031682526020810135615abe816157f9565b6001600160401b0381166020840152505050565b8035615add81614406565b6001600160a01b039081168352602082013590615af982614406565b9081166020840152604082013590615b1082614406565b9081166040840152606082013590615b2782614406565b9081166060840152608082013590615b3e82614406565b908116608084015260a082013590615b5582614406565b80821660a085015250505050565b8681526001600160a01b03861660208201526102a08101615b876040830187615a4a565b84356101008301526020850135610120830152604085013561014083015260608501356101608301526080850135610180830152615bc96101a0830185615a9a565b6156926101e0830184615ad2565b8581526102808101615bec6020830187615a4a565b843560e08301526020850135610100830152604085013561012083015260608501356101408301526080850135610160830152615c2d610180830185615a9a565b613e816101c0830184615ad2565b82815260a081016110016020830184805180516001600160a01b0390811684526020808301518186015260409283015182169285019290925291015116606090910152565b5f60208284031215615c90575f80fd5b6110018383614c01565b600181815b80851115615cd457815f1904821115615cba57615cba6154d1565b80851615615cc757918102915b93841c9390800290615c9f565b509250929050565b5f82615cea57506001610cc3565b81615cf657505f610cc3565b8160018114615d0c5760028114615d1657615d32565b6001915050610cc3565b60ff841115615d2757615d276154d1565b50506001821b610cc3565b5060208310610133831016604e8410600b8410161715615d55575081810a610cc3565b615d5f8383615c9a565b805f1904821115615d7257615d726154d1565b029392505050565b5f6110018383615cdc565b8082028115828204841417610cc357610cc36154d1565b5f60208284031215615dac575f80fd5b815160ff81168114611001575f80fd5b5f61100160ff841683615cdc565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e19843603018112615df3575f80fd5b8301803591506001600160401b03821115615e0c575f80fd5b602001915036819003821315615e20575f80fd5b9250929050565b80820180821115610cc357610cc36154d1565b60a081525f615e4c60a0830186615624565b90506001600160801b03845116602083015260208401516001600160401b0380821660408501528060408701511660608501525050826080830152949350505050565b5f8251615ea0818460208701614c91565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a2646970667358221220db53e39fafeb6758e3bee5bcf6394daa189c06a50577b2f4276ae064a15c23fd64736f6c63430008170033",
    "sourceMapi;:::-;;:::i;:::-;;;470:14:495;;463:22;445:41;;433:2;418:18;3443:202:83;;;;;;;;6573:238:281;;;;;;;;;;-1:-1:-1;6573:238:281;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15208:256:279:-;;;;;;:::i;:::-;;:::i;:::-;;7146:259;;;;;;;;;;-1:-1:-1;7146:259:279;;;;;:::i;:::-;;:::i;4431:196:281:-;;;;;;;;;;-1:-1:-1;4431:196:281;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8525:180:279:-;;;;;;:::i;:::-;;:::i;5577:170:281:-;;;;;;;;;;-1:-1:-1;5577:170:281;;;;;:::i;:::-;;:::i;:::-;;;7795:25:495;;;7783:2;7768:18;5577:170:281;7649:177:495;15766:332:279;;;;;;:::i;:::-;;:::i;2657:172:281:-;;;;;;;;;;-1:-1:-1;2657:172:281;;;;;:::i;:::-;;:::i;5293:244::-;;;;;;;;;;;;;:::i;:::-;;;;10569:25:495;;;10625:2;10610:18;;10603:34;;;;10542:18;5293:244:281;10395:248:495;2865:125:281;;;;;;;;;;;;;:::i;:::-;;;;;;10903:13:495;;10885:32;;10973:4;10961:17;;;10955:24;10933:20;;;10926:54;11036:4;11024:17;;;11018:24;10996:20;;;10989:54;11099:4;11087:17;;;11081:24;11059:20;;;11052:54;11162:4;11150:17;;;11144:24;11122:20;;;11115:54;11245:3;11217:17;;;11211:24;-1:-1:-1;;;;;11207:50:495;11185:20;;;11178:80;;;;10872:3;10857:19;;10648:616;6289:248:281;;;;;;;;;;-1:-1:-1;6289:248:281;;;;;:::i;:::-;;:::i;4759:191:83:-;;;;;;;;;;-1:-1:-1;4759:191:83;;;;;:::i;:::-;;:::i;9029:186:279:-;;;;;;:::i;:::-;;:::i;5787:178:281:-;;;;;;;;;;-1:-1:-1;5787:178:281;;;;;:::i;:::-;;:::i;15496:234:279:-;;;;;;:::i;:::-;;:::i;5246:136:83:-;;;;;;;;;;-1:-1:-1;5246:136:83;;;;;:::i;:::-;;:::i;6348:245::-;;;;;;;;;;-1:-1:-1;6348:245:83;;;;;:::i;:::-;;:::i;9567:210:279:-;;;;;;:::i;:::-;;:::i;11856:484::-;;;;;;:::i;:::-;;:::i;14822:354::-;;;;;;:::i;:::-;;:::i;8121:116::-;;;;;;;;;;;;;:::i;7442:493::-;;;;;;;;;;-1:-1:-1;7442:493:279;;;;;:::i;:::-;;:::i;4161:214:87:-;;;;;;:::i;:::-;;:::i;10403:312:279:-;;;;;;:::i;:::-;;:::i;16850:190::-;;;;;;:::i;:::-;;:::i;3708:134:87:-;;;;;;;;;;;;;:::i;13547:304:279:-;;;;;;:::i;:::-;;:::i;9813:308::-;;;;;;:::i;:::-;;:::i;7126:86:281:-;;;;;;;;;;-1:-1:-1;7198:7:281;;;;;;;;;;;;-1:-1:-1;;;7198:7:281;;;;7126:86;;;;;;;:::i;2496:145:92:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:92;;;2496:145;;3966:425:281;;;;;;;;;;-1:-1:-1;3966:425:281;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5756:126:279:-;;;;;;;;;;;;;:::i;6005:244:281:-;;;;;;;;;;-1:-1:-1;6005:244:281;;;;;:::i;:::-;;:::i;3342:588::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3415:508:281;;;;;;;;3458:29;;3415:508;;3523:31;;3415:508;;;;3595:36;;-1:-1:-1;;;;;3595:36:281;;;3415:508;;;;;;;3668:32;;;;3415:508;;;;3782:26;;;;3415:508;;;;3840:27;;;;3415:508;;;;3892:20;;;;3415:508;;;;3728:23;;;;;3415:508;;;;;3342:588;;;;;24360:13:495;;24342:32;;24430:4;24418:17;;;24412:24;24390:20;;;24383:54;24472:17;;;24466:24;-1:-1:-1;;;;;24566:21:495;;;24544:20;;;24537:51;;;;24648:4;24636:17;;;24630:24;24626:33;;24604:20;;;24597:63;24720:4;24708:17;;;24702:24;24698:33;;24676:20;;;24669:63;24517:3;24780:17;;;24774:24;24770:33;;24748:20;;;24741:63;24864:4;24852:17;;;24846:24;24842:33;;24820:20;;;24813:63;24936:4;24924:17;;;24918:24;24914:33;;;24892:20;;;24885:63;;;;24329:3;24314:19;3342:588:281;24139:815:495;17076:284:279;;;;;;:::i;:::-;;:::i;5093:164:281:-;;;;;;;;;;-1:-1:-1;5093:164:281;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16466:348:279:-;;;;;;:::i;:::-;;:::i;3026:128:281:-;;;;;;;;;;;;;:::i;:::-;;;;;;27709:4:495;27751:3;27740:9;27736:19;27728:27;;27788:6;27782:13;27771:9;27764:32;27852:4;27844:6;27840:17;27834:24;27827:4;27816:9;27812:20;27805:54;27915:4;27907:6;27903:17;27897:24;27890:4;27879:9;27875:20;27868:54;27978:4;27970:6;27966:17;27960:24;27953:4;27942:9;27938:20;27931:54;28041:4;28033:6;28029:17;28023:24;28016:4;28005:9;28001:20;27994:54;27525:529;;;;;3190:116:281;;;;;;;;;;;;;:::i;:::-;;;;28311:13:495;;-1:-1:-1;;;;;28307:39:495;28289:58;;28407:4;28395:17;;;28389:24;-1:-1:-1;;;;;28385:49:495;28363:20;;;28356:79;;;;28262:18;3190:116:281;28059:382:495;12372:184:279;;;;;;:::i;:::-;;:::i;11042:485::-;;;;;;:::i;:::-;;:::i;7972:112::-;;;;;;;;;;;;;:::i;14592:194::-;;;;;;:::i;:::-;;:::i;11559:261::-;;;;;;:::i;:::-;;:::i;3732:207:83:-;;;;;;;;;;-1:-1:-1;3732:207:83;;;;;:::i;:::-;;:::i;6847:243:281:-;;;;;;;;;;-1:-1:-1;6847:243:281;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2317:49:83:-;;;;;;;;;;-1:-1:-1;2317:49:83;2362:4;2317:49;;8274:219:279;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1819:58:87:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:87;;;;;4903:154:281;;;;;;;;;;-1:-1:-1;4903:154:281;;;;;:::i;:::-;;:::i;:::-;;;;;;31810:13:495;;-1:-1:-1;;;;;31806:39:495;31788:58;;31902:4;31890:17;;;31884:24;31862:20;;;31855:54;31965:4;31953:17;;;31947:24;31925:20;;;31918:54;32028:4;32016:17;;;32010:24;31988:20;;;31981:54;;;;31775:3;31760:19;;31577:464;4667:200:281;;;;;;;;;;-1:-1:-1;4667:200:281;;;;;:::i;:::-;;:::i;2302:122::-;;;;;;;;;;-1:-1:-1;2302:122:281;;;;;:::i;:::-;;:::i;16130:300:279:-;;;;;;:::i;:::-;;:::i;10153:214::-;;;;;;:::i;:::-;;:::i;5662:138:83:-;;;;;;;;;;-1:-1:-1;5662:138:83;;;;;:::i;:::-;;:::i;13883:677:279:-;;;;;;:::i;:::-;;:::i;12804:424::-;;;;;;:::i;:::-;;:::i;10747:259::-;;;;;;:::i;:::-;;:::i;2460:161:281:-;;;;;;;;;;-1:-1:-1;2460:161:281;;;;;:::i;:::-;;:::i;5059:661:279:-;;;;;;;;;;-1:-1:-1;5059:661:279;;;;;:::i;:::-;;:::i;12588:184::-;;;;;;:::i;:::-;;:::i;9251:284::-;;;;;;:::i;:::-;;:::i;8741:256::-;;;;;;:::i;:::-;;:::i;13260:251::-;;;;;;:::i;:::-;;:::i;3443:202:83:-;3528:4;-1:-1:-1;;;;;;3551:47:83;;-1:-1:-1;;;3551:47:83;;:87;;-1:-1:-1;;;;;;;;;;1134:40:94;;;3602:36:83;3544:94;3443:202;-1:-1:-1;;3443:202:83:o;6573:238:281:-;6693:46;;:::i;:::-;6762:42;;-1:-1:-1;;;6762:42:281;;:15;;:27;;:42;;6790:5;;6797:6;;6762:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15208:256:279:-;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;15380:34:279::2;::::0;-1:-1:-1;;;15380:34:279;;:26:::2;::::0;::::2;::::0;:34:::2;::::0;:5:::2;::::0;15407:6;;15380:34:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;15424:33:279::2;::::0;-1:-1:-1;;;15424:33:279;;:25:::2;::::0;-1:-1:-1;15424:25:279::2;::::0;-1:-1:-1;15424:33:279::2;::::0;:5:::2;::::0;15450:6;;15424:33:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;3437:20:93::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:93;3860:283;3437:20;15208:256:279;:::o;7146:259::-;2362:4:83;6331:26:279;2362:4:83;6346:10:279;6331:8;:26::i;:::-;6326:115;;6380:50;;-1:-1:-1;;;6380:50:279;;6413:10;6380:50;;;39929:51:495;39996:18;;;39989:34;;;39902:18;;6380:50:279;;;;;;;;6326:115;7321:34:::1;::::0;-1:-1:-1;;;7321:34:279;;:26:::1;::::0;::::1;::::0;:34:::1;::::0;:5:::1;::::0;7348:6;;7321:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7365:33:279::1;::::0;-1:-1:-1;;;7365:33:279;;:25:::1;::::0;-1:-1:-1;7365:25:279::1;::::0;-1:-1:-1;7365:33:279::1;::::0;:5:::1;::::0;7391:6;;7365:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7146:259:::0;;:::o;4431:196:281:-;4511:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4511:27:281;-1:-1:-1;;;;;;4557:43:281;:5;:43;;;:37;:43;;;;;;;;;4550:70;;;;;;;4557:63;;;4550:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4431:196::o;8525:180:279:-;8614:84;8632:65;;;;;;;;8665:6;8632:65;;;;;;;;;;:::i;:::-;;;8685:10;8632:65;;;;;8614:17;:84::i;5577:170:281:-;5667:7;5693:47;5667:7;5726:6;5734:5;5693:32;:47::i;:::-;5686:54;5577:170;-1:-1:-1;;;5577:170:281:o;15766:332:279:-;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;15982:50:279::2;::::0;-1:-1:-1;;;15982:50:279;;:34:::2;::::0;::::2;::::0;:50:::2;::::0;:5:::2;::::0;16017:14;;15982:50:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;16042:49:279::2;::::0;-1:-1:-1;;;16042:49:279;;:33:::2;::::0;-1:-1:-1;16042:33:279::2;::::0;-1:-1:-1;16042:49:279::2;::::0;:5:::2;::::0;16076:14;;16042:49:::2;;;:::i;2657:172:281:-:0;2744:7;2770:52;2744:7;2815:6;2770:44;:52::i;5293:244::-;5394:29;;5345:7;;;;5394:54;;5345:7;;5394:54;:::i;:::-;388:21:294;408:1;-1:-1:-1;;388:21:294;:::i;:::-;5462:31:281;;:58;;;;:::i;:::-;5373:157;;;;5293:244;;:::o;2865:125::-;2909:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2909:32:281;2960:23;;-1:-1:-1;;;2960:23:281;;:5;:23;;;7795:25:495;2960:21:281;;;;7768:18:495;;2960:23:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2953:30;;2865:125;:::o;6289:248::-;6466:64;;-1:-1:-1;;;6466:64:281;;6436:7;6466:64;;;43986:25:495;;;-1:-1:-1;;;;;44085:15:495;;;44065:18;;;44058:43;44117:18;;;44110:34;;;44180:15;;44160:18;;;44153:43;44212:19;;;44205:35;;;6436:7:281;6466:23;;;;43958:19:495;;6466:64:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6459:71;6289:248;-1:-1:-1;;;;;6289:248:281:o;4759:191:83:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:83;;;;;:24;;;;4759:191::o;9029:186:279:-;9122:86;9141:66;;;;;;;;9175:6;9141:66;;;;;;;;;;:::i;:::-;;;9195:10;9141:66;;;;;9122:18;:86::i;5787:178:281:-;5881:7;5907:51;5881:7;5942:8;5952:5;5907:34;:51::i;15496:234:279:-;15613:110;15644:78;;;;;;;;15690:6;15644:78;;;:::i;:::-;;;15710:10;15644:78;;;;;15613:30;:110::i;5246:136:83:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:83;;966:10:90;6441:34:83;6437:102;;6498:30;;-1:-1:-1;;;6498:30:83;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;9567:210:279:-;9672:98;9697:72;;;;;;;;9737:6;9697:72;;;:::i;:::-;;;9757:10;9697:72;;;;;9672:24;:98::i;11856:484::-;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;12064:46:279::2;::::0;-1:-1:-1;;;12064:46:279;;:30:::2;::::0;::::2;::::0;:46:::2;::::0;:5:::2;::::0;12095:14;;12064:46:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;12120:45:279::2;::::0;-1:-1:-1;;;12120:45:279;;:29:::2;::::0;-1:-1:-1;12120:29:279::2;::::0;-1:-1:-1;12120:45:279::2;::::0;:5:::2;::::0;12150:14;;12120:45:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;-1:-1:-1::0;;12179:14:279::2;:21;;;:38;;;:53:::0;12175:159:::2;;12297:25;::::0;::::2;::::0;12248:75:::2;::::0;-1:-1:-1;;;12248:75:279;;:5:::2;:75;::::0;::::2;46201:25:495::0;-1:-1:-1;;;;;46262:32:495;;;46242:18;;;46235:60;12248:48:279::2;::::0;::::2;::::0;46174:18:495;;12248:75:279::2;45993:308:495::0;12175:159:279::2;3437:20:93::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:93;3860:283;14822:354:279;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;15039:25:279::2;::::0;::::2;::::0;6799:33:::2;::::0;-1:-1:-1;;;6799:33:279;;6767:29:::2;6799:33;::::0;::::2;46201:25:495::0;;;-1:-1:-1;;;;;46262:32:495;;46242:18;;;46235:60;6767:29:279;6799:21:::2;::::0;::::2;::::0;46174:18:495;;6799:33:279::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15080:40:::3;::::0;-1:-1:-1;;;15080:40:279;;6767:65;;-1:-1:-1;15080:24:279::3;::::0;::::3;::::0;:40:::3;::::0;:5:::3;::::0;15105:14;;15080:40:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;15130:39:279::3;::::0;-1:-1:-1;;;15130:39:279;;:23:::3;::::0;-1:-1:-1;15130:23:279::3;::::0;-1:-1:-1;15130:39:279::3;::::0;:5:::3;::::0;15154:14;;15130:39:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;6884:33:279::2;::::0;-1:-1:-1;;;6884:33:279;;6853:28:::2;6884:33;::::0;::::2;46201:25:495::0;;;-1:-1:-1;;;;;46262:32:495;;46242:18;;;46235:60;6853:28:279;-1:-1:-1;6884:21:279::2;::::0;-1:-1:-1;6884:21:279::2;::::0;46174:18:495;;6884:33:279::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6853:64;;6955:21;6931:20;:45;6927:176;;6999:93;::::0;-1:-1:-1;;;6999:93:279;;-1:-1:-1;;;;;47137:32:495;;6999:93:279::2;::::0;::::2;47119:51:495::0;47186:18;;;47179:34;;;47229:18;;;47222:34;;;47092:18;;6999:93:279::2;46917:345:495::0;6927:176:279::2;6757:352;;2008:1:92;3437:20:93::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:93;3860:283;8121:116:279;978:24:270;6331:26:279;6340:4;6346:10;6331:8;:26::i;:::-;6326:115;;6380:50;;-1:-1:-1;;;6380:50:279;;6413:10;6380:50;;;39929:51:495;39996:18;;;39989:34;;;39902:18;;6380:50:279;39755:274:495;6326:115:279;8220:10:::1;:8;:10::i;7442:493::-:0;3395:21:93;:19;:21::i;:::-;1048:37:270::1;6331:26:279;6340:4;6346:10;6331:8;:26::i;:::-;6326:115;;6380:50;::::0;-1:-1:-1;;;6380:50:279;;6413:10:::1;6380:50;::::0;::::1;39929:51:495::0;39996:18;;;39989:34;;;39902:18;;6380:50:279::1;39755:274:495::0;6326:115:279::1;7665:35:::0;;;-1:-1:-1;;;;;7710:48:279;;::::2;-1:-1:-1::0;;;;;;7768:70:279;;;;-1:-1:-1;;;7822:15:279::2;-1:-1:-1::0;;;;;7768:70:279::2;;;::::0;;;7853:75:::2;::::0;;7665:35;;;::::2;47494:34:495::0;;;47559:2;47544:18;;47537:43;;;;7890:10:279::2;::::0;7853:75:::2;::::0;47414:18:495;7853:75:279::2;;;;;;;7631:304;3426:1:93::1;3437:20:::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:93;3860:283;4161:214:87;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;10403:312:279:-;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;10609:45:279::2;::::0;-1:-1:-1;;;10609:45:279;;:29:::2;::::0;::::2;::::0;:45:::2;::::0;:5:::2;::::0;10639:14;;10609:45:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;10664:44:279::2;::::0;-1:-1:-1;;;10664:44:279;;:28:::2;::::0;-1:-1:-1;10664:28:279::2;::::0;-1:-1:-1;10664:44:279::2;::::0;:5:::2;::::0;10693:14;;10664:44:::2;;;:::i;16850:190::-:0;16947:86;16966:66;;;;;;;;17000:6;16966:66;;;;;;;;;;:::i;:::-;;;17020:10;16966:66;;;;;16947:18;:86::i;3708:134:87:-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:87;:::o;13547:304:279:-;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;13749:43:279::2;::::0;;-1:-1:-1;;;13749:43:279;;:5:::2;:43;::::0;::::2;49970:25:495::0;50037:13;;50031:20;50011:18;;;50004:48;50026:2;50087:15;;50081:22;-1:-1:-1;;;;;50177:21:495;;;50157:18;;;50150:49;50245:15;;;50239:22;50235:31;;;50215:18;;;50208:59;13749:27:279::2;::::0;::::2;::::0;49942:19:495;;13749:43:279::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;13802:42:279::2;::::0;;-1:-1:-1;;;13802:42:279;;:5:::2;:42;::::0;::::2;49970:25:495::0;50037:13;;50031:20;50011:18;;;50004:48;50026:2;50087:15;;50081:22;-1:-1:-1;;;;;50177:21:495;;;50157:18;;;50150:49;50245:15;;;50239:22;50235:31;;;50215:18;;;50208:59;13802:26:279::2;::::0;-1:-1:-1;13802:26:279::2;::::0;-1:-1:-1;49942:19:495;;13802:42:279::2;49663:610:495::0;9813:308:279;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;10017:44:279::2;::::0;-1:-1:-1;;;10017:44:279;;:28:::2;::::0;::::2;::::0;:44:::2;::::0;:5:::2;::::0;10046:14;;10017:44:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;10071:43:279::2;::::0;-1:-1:-1;;;10071:43:279;;:27:::2;::::0;-1:-1:-1;10071:27:279::2;::::0;-1:-1:-1;10071:43:279::2;::::0;:5:::2;::::0;10099:14;;10071:43:::2;;;:::i;3966:425:281:-:0;4041:15;;:::i;:::-;-1:-1:-1;;;;;;;;;;;4476:9:93;1991:1;4476:20;394:93:278;;446:30;;-1:-1:-1;;;446:30:278;;;;;;;;;;;394:93;4075:309:281::1;::::0;;-1:-1:-1;;;;;4104:22:281;::::1;-1:-1:-1::0;4104:22:281;;;:10:::1;:22;::::0;;;;;;;4075:309;;;;;;;;;;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;4104:22;;4075:309;;;;;;;;;;;;;;;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;4075:309:281;;;;-1:-1:-1;;;4075:309:281;;-1:-1:-1;4075:309:281;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;;;;::::0;;;;;;;;-1:-1:-1;;;;;4075:309:281;;::::1;::::0;;::::1;::::0;;;4191:26;;:42;;-1:-1:-1;;;4191:42:281;;::::1;::::0;::::1;50866:51:495::0;;;;4075:309:281;;;;;4191:26;;::::1;::::0;:36:::1;::::0;50839:18:495;;4191:42:281::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4075:309:::0;;4267:27;;:43:::1;::::0;-1:-1:-1;;;4267:43:281;;-1:-1:-1;;;;;50884:32:495;;;4267:43:281::1;::::0;::::1;50866:51:495::0;4075:309:281::1;::::0;;::::1;::::0;4267:27;;::::1;::::0;:37:::1;::::0;50839:18:495;;4267:43:281::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4075:309:::0;;4337:20;;:36:::1;::::0;-1:-1:-1;;;4337:36:281;;-1:-1:-1;;;;;50884:32:495;;;4337:36:281::1;::::0;::::1;50866:51:495::0;4075:309:281::1;::::0;;::::1;::::0;4337:20;;::::1;::::0;:30:::1;::::0;50839:18:495;;4337:36:281::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4075:309:::0;;4068:316;-1:-1:-1;496:1:278::1;3966:425:281::0;;;:::o;5756:126:279:-;2362:4:83;3191:16;2362:4;3191:10;:16::i;:::-;5832:7:279::1;6355:30:86;6388:26;:24;:26::i;:::-;6429:15:::0;;;;-1:-1:-1;;;;6429:15:86;::::1;;;::::0;:44:::1;;-1:-1:-1::0;6448:14:86;;-1:-1:-1;;;;;6448:25:86;;::::1;:14:::0;::::1;:25;;6429:44;6425:105;;;6496:23;;-1:-1:-1::0;;;6496:23:86::1;;;;;;;;;;;6425:105;6539:24:::0;;-1:-1:-1;;6573:22:86;-1:-1:-1;;;;;6539:24:86;::::1;6573:22:::0;-1:-1:-1;;;6573:22:86::1;::::0;;5851:24:279::2;:22;:24::i;:::-;6616:23:86::0;;-1:-1:-1;;;;6616:23:86::1;::::0;;6654:20:::1;::::0;-1:-1:-1;;;;;51090:31:495;;51072:50;;6654:20:86::1;::::0;51060:2:495;51045:18;6654:20:86::1;;;;;;;6289:392;3217:1:83;5756:126:279::0;:::o;6005:244:281:-;6180:62;;-1:-1:-1;;;6180:62:281;;6150:7;6180:62;;;43986:25:495;;;-1:-1:-1;;;;;44085:15:495;;;44065:18;;;44058:43;44117:18;;;44110:34;;;44180:15;;44160:18;;;44153:43;44212:19;;;44205:35;;;6150:7:281;6180:21;;;;43958:19:495;;6180:62:281;43693:553:495;17076:284:279;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;17268:38:279::2;::::0;-1:-1:-1;;;17268:38:279;;:5:::2;:38;::::0;::::2;51430:25:495::0;51474:13;;51565:9;;-1:-1:-1;;;;;51561:18:495;;;51541;;;51534:46;51556:2;51636:11;;;51630:18;51623:26;51616:34;51596:18;;;51589:62;51697:15;;;51691:22;51687:31;51667:18;;;51660:59;17268:22:279::2;::::0;::::2;::::0;51402:19:495;;17268:38:279::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;17316:37:279::2;::::0;-1:-1:-1;;;17316:37:279;;:5:::2;:37;::::0;::::2;51430:25:495::0;51474:13;;51565:9;;-1:-1:-1;;;;;51561:18:495;;;51541;;;51534:46;51556:2;51636:11;;;51630:18;51623:26;51616:34;51596:18;;;51589:62;51697:15;;;51691:22;51687:31;51667:18;;;51660:59;17316:21:279::2;::::0;-1:-1:-1;17316:21:279::2;::::0;-1:-1:-1;51402:19:495;;17316:37:279::2;51133:592:495::0;5093:164:281;5169:21;;:::i;:::-;5209:41;;-1:-1:-1;;;5209:41:281;;:5;:41;;;10569:25:495;10610:18;;;10603:34;;;5209:23:281;;;;10542:18:495;;5209:41:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5202:48;;;;;;;;;;-1:-1:-1;;;;;5202:48:281;;;;-1:-1:-1;;;5202:48:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5093:164:281:o;16466:348:279:-;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;16690:54:279::2;::::0;-1:-1:-1;;;16690:54:279;;:38:::2;::::0;::::2;::::0;:54:::2;::::0;:5:::2;::::0;16729:14;;16690:54:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;16754:53:279::2;::::0;-1:-1:-1;;;16754:53:279;;:37:::2;::::0;-1:-1:-1;16754:37:279::2;::::0;-1:-1:-1;16754:53:279::2;::::0;:5:::2;::::0;16792:14;;16754:53:::2;;;:::i;3026:128:281:-:0;3071:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3071:33:281;3123:24;;-1:-1:-1;;;3123:24:281;;:5;:24;;;7795:25:495;3123:22:281;;;;7768:18:495;;3123:24:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3190:116::-;-1:-1:-1;;;;;;;;;;;;;;;;;3279:20:281;;-1:-1:-1;;;3279:20:281;;:5;:20;;;7795:25:495;3279:18:281;;;;7768::495;;3279:20:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12372:184:279:-;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;12486:27:279::2;::::0;-1:-1:-1;;;12486:27:279;;:19:::2;::::0;::::2;::::0;:27:::2;::::0;:5:::2;::::0;12506:6;;12486:27:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;12523:26:279::2;::::0;-1:-1:-1;;;12523:26:279;;:18:::2;::::0;-1:-1:-1;12523:18:279::2;::::0;-1:-1:-1;12523:26:279::2;::::0;:5:::2;::::0;12542:6;;12523:26:::2;;;:::i;11042:485::-:0;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;11248:45:279::2;::::0;-1:-1:-1;;;11248:45:279;;:29:::2;::::0;::::2;::::0;:45:::2;::::0;:5:::2;::::0;11278:14;;11248:45:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;11303:44:279::2;::::0;-1:-1:-1;;;11303:44:279;;:28:::2;::::0;-1:-1:-1;11303:28:279::2;::::0;-1:-1:-1;11303:44:279::2;::::0;:5:::2;::::0;11332:14;;11303:44:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;-1:-1:-1::0;;11361:14:279::2;:21;;;:38;;;:53:::0;11357:164:::2;;11479:21:::0;;:30;11430:80:::2;::::0;-1:-1:-1;;;11430:80:279;;:5:::2;:80;::::0;::::2;46201:25:495::0;-1:-1:-1;;;;;46262:32:495;;;46242:18;;;46235:60;11430:48:279::2;::::0;::::2;::::0;46174:18:495;;11430:80:279::2;45993:308:495::0;7972:112:279;978:24:270;6331:26:279;6340:4;6346:10;6331:8;:26::i;:::-;6326:115;;6380:50;;-1:-1:-1;;;6380:50:279;;6413:10;6380:50;;;39929:51:495;39996:18;;;39989:34;;;39902:18;;6380:50:279;39755:274:495;6326:115:279;8069:8:::1;:6;:8::i;14592:194::-:0;14689:90;14710:68;;;;;;;;14746:6;14710:68;;;;;;;;;;:::i;:::-;;;14766:10;14710:68;;;;;14689:20;:90::i;11559:261::-;11666:147;11706:97;;;;;;;;11748:6;11706:97;;;;11768:10;-1:-1:-1;;;;;11706:97:279;;;;;11791:10;-1:-1:-1;;;;;11706:97:279;;;;11666:26;:147::i;3732:207:83:-;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:83;;;;;;;;-1:-1:-1;;;;;3901:31:83;;;;;;;;;;;;;;;3732:207::o;6847:243:281:-;6969:48;;:::i;:::-;7040:43;;-1:-1:-1;;;7040:43:281;;:16;;:28;;:43;;7069:5;;7076:6;;7040:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8274:219:279:-;8416:22;1979:19:92;:17;:19::i;:::-;8464:22:279::1;:5;8480::::0;;8464:15:::1;:22::i;4903:154:281:-:0;4975:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4975:19:281;5013:37;;-1:-1:-1;;;5013:37:281;;:5;:37;;;10569:25:495;10610:18;;;10603:34;;;5013:21:281;;;;10542:18:495;;5013:37:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5006:44;;;;;;;;;;-1:-1:-1;;;;;5006:44:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4903:154;-1:-1:-1;;4903:154:281:o;4667:200::-;4749:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4749:27:281;-1:-1:-1;;;;;;4795:43:281;:5;:43;;;:37;:43;;;;;;;;;4788:72;;;;;;;4795:65;;;4788:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4667:200::o;2302:122::-;2390:27;;-1:-1:-1;;;2390:27:281;;2364:7;2390:27;;;46201:25:495;;;-1:-1:-1;;;;;46262:32:495;;46242:18;;;46235:60;2364:7:281;2390:21;;;;46174:18:495;;2390:27:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;16130:300:279:-;16283:140;16331:82;;;;;;;;16381:6;16331:82;;;;;;;;;;:::i;:::-;;;16401:10;16331:82;;;;;16283:34;:140::i;10153:214::-;10260:100;10286:73;;;;;;;;10327:6;10286:73;;;:::i;:::-;;;10347:10;10286:73;;;;;10260:25;:100::i;5662:138:83:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;13883:677:279:-:0;14132:39;14173:35;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;921:24:270::2;6331:26:279;6340:4;6346:10;6331:8;:26::i;:::-;6326:115;;6380:50;::::0;-1:-1:-1;;;6380:50:279;;6413:10:::2;6380:50;::::0;::::2;39929:51:495::0;39996:18;;;39989:34;;;39902:18;;6380:50:279::2;39755:274:495::0;6326:115:279::2;14224:46:::3;::::0;-1:-1:-1;;;14224:46:279;;:38:::3;::::0;::::3;::::0;:46:::3;::::0;:5:::3;::::0;14263:6;;14224:46:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;14345:45:279::3;::::0;-1:-1:-1;;;14345:45:279;;:37:::3;::::0;-1:-1:-1;14345:37:279::3;::::0;-1:-1:-1;14345:45:279::3;::::0;:5:::3;::::0;14383:6;;14345:45:::3;;;:::i;:::-;;::::0;::::3;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14280:110:::0;;-1:-1:-1;14280:110:279;-1:-1:-1;14400:48:279::3;;:5;14449:15;::::0;;;::::3;::::0;::::3;;:::i;:::-;14400:65;::::0;-1:-1:-1;;;;;;14400:65:279::3;::::0;;;;;;::::3;::::0;::::3;46201:25:495::0;;;;-1:-1:-1;;;;;46262:32:495;46242:18;;;46235:60;46174:18;;14400:65:279::3;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;14475:78:279::3;::::0;-1:-1:-1;;;14475:78:279;;:37:::3;::::0;-1:-1:-1;14475:37:279::3;::::0;-1:-1:-1;14475:78:279::3;::::0;:5:::3;::::0;14513:6;;14521:31;;14475:78:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;2008:1:92::2;3437:20:93::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:93;3860:283;3437:20;13883:677:279;;;:::o;12804:424::-;12973:39;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;13028:31:279::2;::::0;-1:-1:-1;;;13028:31:279;;:23:::2;::::0;::::2;::::0;:31:::2;::::0;:5:::2;::::0;13052:6;;13028:31:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;13103:30:279::2;::::0;-1:-1:-1;;;13103:30:279;;:22:::2;::::0;-1:-1:-1;13103:22:279::2;::::0;-1:-1:-1;13103:30:279::2;::::0;:5:::2;::::0;13126:6;;13103:30:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13143:78;::::0;-1:-1:-1;;;13143:78:279;;13069:64;;-1:-1:-1;13143:37:279::2;::::0;::::2;::::0;:78:::2;::::0;:5:::2;::::0;13181:6;;13069:64;;13143:78:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;3437:20:93::0;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:93;3860:283;10747:259:279;10854:145;10893:96;;;;;;;;10934:6;10893:96;;;;;;;;;;:::i;:::-;;;10954:10;10893:96;;;;;;;;;;;10854:25;:145::i;2460:161:281:-;2566:48;;-1:-1:-1;;;2566:48:281;;2543:4;2566:48;;;10569:25:495;;;10610:18;;;10603:34;;;2543:4:281;2566:32;;;;10542:18:495;;2566:48:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5059:661:279:-;4158:30:86;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:86;-1:-1:-1;;;4302:15:86;;;4301:16;;-1:-1:-1;;;;;4348:14:86;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;-1:-1:-1;;;;;4788:16:86;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:86;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:86;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:86;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:86;-1:-1:-1;;;5011:22:86;;;4977:67;5316:43:279::1;::::0;-1:-1:-1;;;5316:43:279;;:24:::1;::::0;::::1;::::0;:43:::1;::::0;:5:::1;::::0;5341;;5348:1;;5351;;5354;;5357;;5316:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5370:22;:20;:22::i;:::-;5402:17;:15;:17::i;:::-;5429:24;:22;:24::i;:::-;5463;:22;:24::i;:::-;5498:35;::::0;-1:-1:-1;;;5498:35:279;;:23:::1;::::0;::::1;::::0;:35:::1;::::0;:5:::1;::::0;5522:1;;5525;;5528;;5531;;5498:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5543:37;2362:4:83;5554:18:279::0;::::1;5574:5;5543:10;:37::i;:::-;;5590:30;978:24:270;5614:5:279;5590:10;:30::i;:::-;;5630;921:24:270;5654:5:279;5630:10;:30::i;:::-;;5670:43;1048:37:270;5707:5:279;5670:10;:43::i;:::-;;5068:14:86::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:86;;;5140:14;;-1:-1:-1;51072:50:495;;5140:14:86;;51060:2:495;51045:18;5140:14:86;;;;;;;5064:101;4092:1079;;;;;5059:661:279;;;;;:::o;12588:184::-;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;12702:27:279::2;::::0;-1:-1:-1;;;12702:27:279;;:5:::2;:27;::::0;::::2;65352:25:495::0;65413:20;;65393:18;;;65386:48;12702:19:279::2;::::0;::::2;::::0;65325:18:495;;12702:27:279::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;12739:26:279::2;::::0;-1:-1:-1;;;12739:26:279;;:5:::2;:26;::::0;::::2;65352:25:495::0;65413:20;;65393:18;;;65386:48;12739:18:279::2;::::0;-1:-1:-1;12739:18:279::2;::::0;-1:-1:-1;65325:18:495;;12739:26:279::2;65080:360:495::0;9251:284:279;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;9443:38:279::2;::::0;-1:-1:-1;;;9443:38:279;;:22:::2;::::0;::::2;::::0;:38:::2;::::0;:5:::2;::::0;9466:14;;9443:38:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;9491:37:279::2;::::0;-1:-1:-1;;;9491:37:279;;:21:::2;::::0;-1:-1:-1;9491:21:279::2;::::0;-1:-1:-1;9491:37:279::2;::::0;:5:::2;::::0;9513:14;;9491:37:::2;;;:::i;8741:256::-:0;3395:21:93;:19;:21::i;:::-;1979:19:92::1;:17;:19::i;:::-;8923:29:279::2;::::0;-1:-1:-1;;;8923:29:279;;:21:::2;::::0;::::2;::::0;:29:::2;::::0;:5:::2;::::0;8945:6;;8923:29:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;8962:28:279::2;::::0;-1:-1:-1;;;8962:28:279;;:20:::2;::::0;-1:-1:-1;8962:20:279::2;::::0;-1:-1:-1;8962:28:279::2;::::0;:5:::2;::::0;8983:6;;8962:28:::2;;;:::i;13260:251::-:0;13363:141;13400:94;;;;;;;;13439:6;13400:94;;;;;;;;;;:::i;:::-;;;13459:10;13400:94;;;;;;;;;;;13363:23;:141::i;3470:384:93:-;-1:-1:-1;;;;;;;;;;;3670:9:93;;-1:-1:-1;;3670:20:93;3666:88;;3713:30;;-1:-1:-1;;;3713:30:93;;;;;;;;;;;3666:88;1991:1;3828:19;;3470:384::o;2709:128:92:-;-1:-1:-1;;;;;;;;;;;2625:9:92;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:92;;;;;;;;;;;2770:61;2709:128::o;3860:283:93:-;1949:1;-1:-1:-1;;;;;;;;;;;4113:23:93;3860:283::o;5888:370:279:-;5960:4;5980:22;5988:4;5994:7;5980;:22::i;:::-;5976:276;;;-1:-1:-1;6025:4:279;6018:11;;5976:276;6058:22;;-1:-1:-1;;;;;6058:22:279;6046:206;;-1:-1:-1;6118:5:279;6111:12;;6046:206;6194:22;;6161:80;;-1:-1:-1;;;6161:80:279;;;;;46201:25:495;;;-1:-1:-1;;;;;46262:32:495;;;46242:18;;;46235:60;6194:22:279;;;;6161:65;;46174:18:495;;6161:80:279;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6154:87;;;;4925:255:297;-1:-1:-1;;;;;5133:22:297;;5058:11;5133:22;;;:10;;;:22;;;;;;;;5092:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5120:5;;5127:4;;5133:22;5092:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5167:5;5092:27;:81::i;:::-;5085:88;4925:255;-1:-1:-1;;;;4925:255:297:o;1087:477:291:-;1228:29;1297:260;1348:5;:12;;:22;;;;;;;;;;-1:-1:-1;;;;;1348:22:291;-1:-1:-1;;;;;1348:31:291;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1342:39;;:2;:39;:::i;:::-;1324:57;;:15;:57;:::i;:::-;1401:36;;;;:47;;;-1:-1:-1;;;1401:47:291;;;;-1:-1:-1;;;;;1401:36:291;;;;:45;;:47;;;;;;;;;;;;;;;:36;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:53;;:2;:53;:::i;:::-;1504:32;;;;:43;;;-1:-1:-1;;;1504:43:291;;;;-1:-1:-1;;;;;1504:32:291;;;;:41;;:43;;;;;;;;;;;;;;;:32;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1498:49;;:2;:49;:::i;:::-;1462:12;;;:22;:33;;;-1:-1:-1;;;1462:33:291;;;;-1:-1:-1;;;;;1462:22:291;;;;:31;;:33;;;;;;;;;;;;;;;:22;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;1297:13;:260::i;4660:259:297:-;-1:-1:-1;;;;;4870:22:297;;4795:11;4870:22;;;:10;;;:22;;;;;;;;4829:83;;;;;;;4870:34;;;4829:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4857:5;;4864:4;;4829:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4906:5;4829:27;:83::i;4148:103:83:-;4214:30;4225:4;966:10:90;4214::83;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:83;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:83;;;;;;;;;:38;;-1:-1:-1;;7475:38:83;7509:4;7475:38;;;7559:12;966:10:90;;887:96;7559:12:83;-1:-1:-1;;;;;7532:40:83;7550:7;-1:-1:-1;;;;;7532:40:83;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7894:388;7972:4;-1:-1:-1;;;;;;;;;;;8061:22:83;8069:4;8075:7;8061;:22::i;:::-;8057:219;;;8133:5;8099:14;;;;;;;;;;;-1:-1:-1;;;;;8099:31:83;;;;;;;;;;:39;;-1:-1:-1;;8099:39:83;;;8157:40;966:10:90;;8099:14:83;;8157:40;;8133:5;8157:40;8218:4;8211:11;;;;;3478:178:92;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:92;;-1:-1:-1;;3595:17:92::1;::::0;;3627:22:::1;966:10:90::0;3636:12:92::1;3627:22;::::0;-1:-1:-1;;;;;50884:32:495;;;50866:51;;50854:2;50839:18;3627:22:92::1;;;;;;;3526:130;3478:178::o:0;4578:312:87:-;4658:4;-1:-1:-1;;;;;4667:6:87;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:87;:32;-1:-1:-1;;;;;;;;;;;1519:53:110;-1:-1:-1;;;;;1519:53:110;;1441:138;4728:32:87;-1:-1:-1;;;;;4728:42:87;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:87;;;;;;;;;;;6464:151:279;2362:4:83;6331:26:279;2362:4:83;6346:10:279;6331:8;:26::i;:::-;6326:115;;6380:50;;-1:-1:-1;;;6380:50:279;;6413:10;6380:50;;;39929:51:495;39996:18;;;39989:34;;;39902:18;;6380:50:279;39755:274:495;6032:538:87;6149:17;-1:-1:-1;;;;;6131:50:87;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:87;;;;;;;;-1:-1:-1;;6131:52:87;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:87;;-1:-1:-1;;;;;50884:32:495;;6493:60:87;;;50866:51:495;50839:18;;6493:60:87;50720:203:495;6127:437:87;-1:-1:-1;;;;;;;;;;;6225:40:87;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:87;;;;;7795:25:495;;;7768:18;;6292:34:87;7649:177:495;6221:120:87;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:87;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:87;;;;;;;;;;;9071:205:86;9129:30;;3147:66;9186:27;8819:122;2684:111:93;6929:20:86;:18;:20::i;:::-;2754:34:93::1;:32;:34::i;3170:176:92:-:0;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:92;;-1:-1:-1;;3288:16:92::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:90::0;3326:12:92::1;887:96:90::0;1176:291:296;1251:22;1307:4;-1:-1:-1;;;;;1295:24:296;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:34;;1334:9;1329:132;1349:15;;;1329:132;;;1398:52;1435:4;1442;;1447:1;1442:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1398:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1398:28:296;;-1:-1:-1;;;1398:52:296:i;:::-;1385:7;1393:1;1385:10;;;;;;;;:::i;:::-;;;;;;;;;;:65;1366:3;;1329:132;;;;1176:291;;;;;:::o;3231:65:83:-;6929:20:86;:18;:20::i;5186:971:297:-;5350:11;5381:5;5390:1;5381:10;5377:67;;5414:19;;-1:-1:-1;;;5414:19:297;;;;;;;;;;;5377:67;5457:18;5464:10;5457:6;:18::i;:::-;5453:82;;;5498:26;;-1:-1:-1;;;5498:26:297;;-1:-1:-1;;;;;50884:32:495;;5498:26:297;;;50866:51:495;50839:18;;5498:26:297;50720:203:495;5453:82:297;5574:21;;5548:23;5566:5;5548:15;:23;:::i;:::-;:47;5544:174;;;5660:23;5678:5;5660:15;:23;:::i;:::-;5685:21;;5618:89;;-1:-1:-1;;;5618:89:297;;;;;10569:25:495;;;;10610:18;;;10603:34;10542:18;;5618:89:297;10395:248:495;5544:174:297;5772:311;;;;;;;;5839:35;;;;-1:-1:-1;;;;;5839:35:297;;5772:311;;-1:-1:-1;;;;;;;;5921:44:297;;;;5772:311;;;;;;;;-1:-1:-1;;;6020:52:297;;;;5772:311;;;;6100:28;;;:50;;-1:-1:-1;;;6100:50:297;;5772:311;;6100:35;;;;:50;;5772:311;;6144:5;;6100:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6093:57;5186:971;-1:-1:-1;;;;;;5186:971:297:o;618:142:295:-;692:7;718:35;745:1;748;751;718:26;:35::i;4381:197:83:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:83;;-1:-1:-1;;;;;39947:32:495;;4514:47:83;;;39929:51:495;39996:18;;;39989:34;;;39902:18;;4514:47:83;39755:274:495;2909:126:92;-1:-1:-1;;;;;;;;;;;2625:9:92;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:92;;;;;;;;;;;2264:344:110;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:110;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;7082:141:86:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:86;;;;;;;;;;;2801:183:93;6929:20:86;:18;:20::i;3916:253:125:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:125;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;1572:148:297:-;1658:15;;1635:4;;1658:20;:55;;;;;1682:31;:4;:22;;;:29;:31::i;25271:508:175:-;25345:9;25568:1;25564;25560:6;25556:14;25553:1;25550:21;25547:1;25543:29;25536:37;25533:1;25529:45;25519:169;;25607:10;25601:4;25594:24;25669:4;25663;25656:18;25519:169;-1:-1:-1;25749:9:175;;25724:17;;;25717:25;25710:33;25745:17;;;25706:57;;25271:508::o;1671:281:110:-;1748:17;-1:-1:-1;;;;;1748:29:110;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:110;;-1:-1:-1;;;;;50884:32:495;;1805:47:110;;;50866:51:495;50839:18;;1805:47:110;50720:203:495;1744:119:110;-1:-1:-1;;;;;;;;;;;1872:73:110;;-1:-1:-1;;;;;;1872:73:110;-1:-1:-1;;;;;1872:73:110;;;;;;;;;;1671:281::o;6113:122::-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:110;;;;;;;;;;;8485:120:86;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:86;;;;;;-1:-1:-1;8485:120:86:o;4437:582:125:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:125;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:125;;-1:-1:-1;;;;;50884:32:495;;4933:24:125;;;50866:51:495;50839:18;;4933:24:125;50720:203:495;4853:119:125;-1:-1:-1;4992:10:125;4985:17;;1495:183:299;1581:11;;:18;1558:4;;1581:23;:48;;;;-1:-1:-1;1608:9:299;;;;:16;:21;1581:48;:90;;;;-1:-1:-1;;1633:26:299;;;:33;:38;;1495:183::o;5559:487:125:-;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:125;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:495:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:495;;209:43;;199:71;;266:1;263;256:12;497:127;558:10;553:3;549:20;546:1;539:31;589:4;586:1;579:15;613:4;610:1;603:15;629:255;701:2;695:9;743:6;731:19;;-1:-1:-1;;;;;765:34:495;;801:22;;;762:62;759:88;;;827:18;;:::i;:::-;863:2;856:22;629:255;:::o;889:253::-;961:2;955:9;1003:4;991:17;;-1:-1:-1;;;;;1023:34:495;;1059:22;;;1020:62;1017:88;;;1085:18;;:::i;1147:257::-;1219:4;1213:11;;;1251:17;;-1:-1:-1;;;;;1283:34:495;;1319:22;;;1280:62;1277:88;;;1345:18;;:::i;1409:253::-;1481:2;1475:9;1523:4;1511:17;;-1:-1:-1;;;;;1543:34:495;;1579:22;;;1540:62;1537:88;;;1605:18;;:::i;1667:253::-;1739:2;1733:9;1781:4;1769:17;;-1:-1:-1;;;;;1801:34:495;;1837:22;;;1798:62;1795:88;;;1863:18;;:::i;1925:252::-;1997:2;1991:9;2039:3;2027:16;;-1:-1:-1;;;;;2058:34:495;;2094:22;;;2055:62;2052:88;;;2120:18;;:::i;2182:275::-;2253:2;2247:9;2318:2;2299:13;;-1:-1:-1;;2295:27:495;2283:40;;-1:-1:-1;;;;;2338:34:495;;2374:22;;;2335:62;2332:88;;;2400:18;;:::i;:::-;2436:2;2429:22;2182:275;;-1:-1:-1;2182:275:495:o;2462:131::-;-1:-1:-1;;;;;2537:31:495;;2527:42;;2517:70;;2583:1;2580;2573:12;2598:134;2666:20;;2695:31;2666:20;2695:31;:::i;2737:118::-;2823:5;2816:13;2809:21;2802:5;2799:32;2789:60;;2845:1;2842;2835:12;2860:128;2925:20;;2954:28;2925:20;2954:28;:::i;2993:798::-;3061:5;3109:6;3097:9;3092:3;3088:19;3084:32;3081:52;;;3129:1;3126;3119:12;3081:52;3151:22;;:::i;:::-;3142:31;;3196:29;3215:9;3196:29;:::i;:::-;3189:5;3182:44;3286:2;3275:9;3271:18;3258:32;3253:2;3246:5;3242:14;3235:56;3351:2;3340:9;3336:18;3323:32;3318:2;3311:5;3307:14;3300:56;3416:2;3405:9;3401:18;3388:32;3383:2;3376:5;3372:14;3365:56;3482:3;3471:9;3467:19;3454:33;3448:3;3441:5;3437:15;3430:58;3549:3;3538:9;3534:19;3521:33;3515:3;3508:5;3504:15;3497:58;3588:36;3619:3;3608:9;3604:19;3588:36;:::i;:::-;3582:3;3575:5;3571:15;3564:61;3686:3;3675:9;3671:19;3658:33;3652:3;3645:5;3641:15;3634:58;3711:3;3746:38;3780:2;3769:9;3765:18;3746:38;:::i;:::-;3730:14;;;3723:62;3734:5;2993:798;-1:-1:-1;;2993:798:495:o;3796:258::-;3896:6;3949:3;3937:9;3928:7;3924:23;3920:33;3917:53;;;3966:1;3963;3956:12;3917:53;3989:59;4040:7;4029:9;3989:59;:::i;4168:309::-;4252:12;;-1:-1:-1;;;;;4248:38:495;4236:51;;4350:4;4339:16;;;4333:23;4326:31;4319:39;4303:14;;;4296:63;4408:4;4397:16;;;4391:23;4375:14;;;4368:47;4464:4;4453:16;;;4447:23;4431:14;;4424:47;4168:309::o;4482:705::-;4660:4;4702:3;4691:9;4687:19;4679:27;;4715:58;4763:9;4754:6;4748:13;4715:58;:::i;:::-;4858:1;4854;4849:3;4845:11;4841:19;4833:4;4825:6;4821:17;4815:24;4811:50;4804:4;4793:9;4789:20;4782:80;4918:4;4910:6;4906:17;4900:24;4893:4;4882:9;4878:20;4871:54;4981:4;4973:6;4969:17;4963:24;4956:4;4945:9;4941:20;4934:54;5044:4;5036:6;5032:17;5026:24;5019:4;5008:9;5004:20;4997:54;5109:4;5101:6;5097:17;5091:24;5082:6;5071:9;5067:22;5060:56;5174:4;5166:6;5162:17;5156:24;5147:6;5136:9;5132:22;5125:56;4482:705;;;;:::o;5192:166::-;5263:5;5308:2;5299:6;5294:3;5290:16;5286:25;5283:45;;;5324:1;5321;5314:12;5283:45;-1:-1:-1;5346:6:495;5192:166;-1:-1:-1;5192:166:495:o;5363:262::-;5462:6;5515:2;5503:9;5494:7;5490:23;5486:32;5483:52;;;5531:1;5528;5521:12;5483:52;5554:65;5611:7;5600:9;5554:65;:::i;5630:166::-;5701:5;5746:2;5737:6;5732:3;5728:16;5724:25;5721:45;;;5762:1;5759;5752:12;5801:380;5900:6;5953:2;5941:9;5932:7;5928:23;5924:32;5921:52;;;5969:1;5966;5959:12;5921:52;6009:9;5996:23;-1:-1:-1;;;;;6034:6:495;6031:30;6028:50;;;6074:1;6071;6064:12;6028:50;6097:78;6167:7;6158:6;6147:9;6143:22;6097:78;:::i;6186:247::-;6245:6;6298:2;6286:9;6277:7;6273:23;6269:32;6266:52;;;6314:1;6311;6304:12;6266:52;6353:9;6340:23;6372:31;6397:5;6372:31;:::i;6772:290::-;6986:3;6971:19;;6999:57;6975:9;7038:6;6530:5;6524:12;6519:3;6512:25;6586:4;6579:5;6575:16;6569:23;6562:4;6557:3;6553:14;6546:47;6642:4;6635:5;6631:16;6625:23;6618:4;6613:3;6609:14;6602:47;6698:4;6691:5;6687:16;6681:23;6674:4;6669:3;6665:14;6658:47;6754:4;6747:5;6743:16;6737:23;6730:4;6725:3;6721:14;6714:47;;;6438:329;7329:315;7397:6;7405;7458:2;7446:9;7437:7;7433:23;7429:32;7426:52;;;7474:1;7471;7464:12;7426:52;7513:9;7500:23;7532:31;7557:5;7532:31;:::i;:::-;7582:5;7634:2;7619:18;;;;7606:32;;-1:-1:-1;;;7329:315:495:o;7831:183::-;7891:4;-1:-1:-1;;;;;7916:6:495;7913:30;7910:56;;;7946:18;;:::i;:::-;-1:-1:-1;7991:1:495;7987:14;8003:4;7983:25;;7831:183::o;8019:668::-;8073:5;8126:3;8119:4;8111:6;8107:17;8103:27;8093:55;;8144:1;8141;8134:12;8093:55;8180:6;8167:20;8206:4;8230:60;8246:43;8286:2;8246:43;:::i;:::-;8230:60;:::i;:::-;8312:3;8336:2;8331:3;8324:15;8364:4;8359:3;8355:14;8348:21;;8421:4;8415:2;8412:1;8408:10;8400:6;8396:23;8392:34;8378:48;;8449:3;8441:6;8438:15;8435:35;;;8466:1;8463;8456:12;8435:35;8502:4;8494:6;8490:17;8516:142;8532:6;8527:3;8524:15;8516:142;;;8598:17;;8586:30;;8636:12;;;;8549;;8516:142;;;-1:-1:-1;8676:5:495;8019:668;-1:-1:-1;;;;;;8019:668:495:o;8692:710::-;8765:5;8813:4;8801:9;8796:3;8792:19;8788:30;8785:50;;;8831:1;8828;8821:12;8785:50;8853:22;;:::i;:::-;8844:31;;8911:9;8898:23;8891:5;8884:38;8974:2;8963:9;8959:18;8946:32;8987:30;9009:7;8987:30;:::i;:::-;9044:2;9033:14;;9026:31;9109:2;9094:18;;9081:32;9122:30;9081:32;9122:30;:::i;:::-;9179:2;9168:14;;9161:31;9243:2;9228:18;;9215:32;-1:-1:-1;;;;;9259:30:495;;9256:50;;;9302:1;9299;9292:12;9256:50;9338:57;9391:3;9382:6;9371:9;9367:22;9338:57;:::i;:::-;9333:2;9326:5;9322:14;9315:81;;8692:710;;;;:::o;9407:798::-;9522:6;9575:2;9563:9;9554:7;9550:23;9546:32;9543:52;;;9591:1;9588;9581:12;9543:52;9631:9;9618:23;-1:-1:-1;;;;;9701:2:495;9693:6;9690:14;9687:34;;;9717:1;9714;9707:12;9687:34;9740:22;;;;9796:4;9778:16;;;9774:27;9771:47;;;9814:1;9811;9804:12;9771:47;9840:22;;:::i;:::-;9900:2;9887:16;9928:2;9918:8;9915:16;9912:36;;;9944:1;9941;9934:12;9912:36;9971:72;10035:7;10024:8;10020:2;10016:17;9971:72;:::i;:::-;9964:5;9957:87;;10089:2;10085;10081:11;10068:25;10053:40;;10102:33;10127:7;10102:33;:::i;:::-;10162:2;10151:14;;10144:31;;;;-1:-1:-1;10155:5:495;9407:798;-1:-1:-1;;;9407:798:495:o;10210:180::-;10269:6;10322:2;10310:9;10301:7;10297:23;10293:32;10290:52;;;10338:1;10335;10328:12;10290:52;-1:-1:-1;10361:23:495;;10210:180;-1:-1:-1;10210:180:495:o;11269:525::-;11355:6;11363;11371;11379;11432:3;11420:9;11411:7;11407:23;11403:33;11400:53;;;11449:1;11446;11439:12;11400:53;11488:9;11475:23;11507:31;11532:5;11507:31;:::i;:::-;11557:5;-1:-1:-1;11609:2:495;11594:18;;11581:32;;-1:-1:-1;11665:2:495;11650:18;;11637:32;11678:33;11637:32;11678:33;:::i;:::-;11269:525;;;;-1:-1:-1;11730:7:495;;11784:2;11769:18;11756:32;;-1:-1:-1;;11269:525:495:o;12429:408::-;12536:6;12589:2;12577:9;12568:7;12564:23;12560:32;12557:52;;;12605:1;12602;12595:12;12557:52;12645:9;12632:23;-1:-1:-1;;;;;12670:6:495;12667:30;12664:50;;;12710:1;12707;12700:12;12664:50;12733:22;;12789:3;12771:16;;;12767:26;12764:46;;;12806:1;12803;12796:12;12842:315;12910:6;12918;12971:2;12959:9;12950:7;12946:23;12942:32;12939:52;;;12987:1;12984;12977:12;12939:52;13023:9;13010:23;13000:33;;13083:2;13072:9;13068:18;13055:32;13096:31;13121:5;13096:31;:::i;:::-;13146:5;13136:15;;;12842:315;;;;;:::o;13549:558::-;13628:5;13676:6;13664:9;13659:3;13655:19;13651:32;13648:52;;;13696:1;13693;13686:12;13648:52;13718:22;;:::i;:::-;13709:31;;13763:55;13814:3;13803:9;13763:55;:::i;:::-;13756:5;13749:70;13871:3;13860:9;13856:19;13843:33;13885;13910:7;13885:33;:::i;:::-;13945:4;13934:16;;13927:33;14012:3;13997:19;;13984:33;14026;13984;14026;:::i;:::-;14086:4;14075:16;;14068:33;14079:5;13549:558;-1:-1:-1;;13549:558:495:o;14112:280::-;14223:6;14276:3;14264:9;14255:7;14251:23;14247:33;14244:53;;;14293:1;14290;14283:12;14244:53;14316:70;14378:7;14367:9;14316:70;:::i;14397:356::-;14460:5;14508:4;14496:9;14491:3;14487:19;14483:30;14480:50;;;14526:1;14523;14516:12;14480:50;14548:22;;:::i;:::-;14539:31;;14606:9;14593:23;14586:5;14579:38;14677:2;14666:9;14662:18;14649:32;14644:2;14637:5;14633:14;14626:56;14742:2;14731:9;14727:18;14714:32;14709:2;14702:5;14698:14;14691:56;14397:356;;;;:::o;14758:471::-;14863:6;14916:3;14904:9;14895:7;14891:23;14887:33;14884:53;;;14933:1;14930;14923:12;14884:53;14959:22;;:::i;:::-;15004:54;15050:7;15039:9;15004:54;:::i;:::-;14997:5;14990:69;15111:2;15100:9;15096:18;15083:32;15124:33;15149:7;15124:33;:::i;:::-;15184:4;15173:16;;15166:33;15177:5;14758:471;-1:-1:-1;;;14758:471:495:o;15234:301::-;15293:6;15346:2;15334:9;15325:7;15321:23;15317:32;15314:52;;;15362:1;15359;15352:12;15314:52;15401:9;15388:23;-1:-1:-1;;;;;15444:5:495;15440:46;15433:5;15430:57;15420:85;;15501:1;15498;15491:12;15540:898;15617:6;15625;15678:2;15666:9;15657:7;15653:23;15649:32;15646:52;;;15694:1;15691;15684:12;15646:52;15733:9;15720:23;15752:31;15777:5;15752:31;:::i;:::-;15802:5;-1:-1:-1;15826:2:495;15864:18;;;15851:32;-1:-1:-1;;;;;15932:14:495;;;15929:34;;;15959:1;15956;15949:12;15929:34;15997:6;15986:9;15982:22;15972:32;;16042:7;16035:4;16031:2;16027:13;16023:27;16013:55;;16064:1;16061;16054:12;16013:55;16100:2;16087:16;16122:2;16118;16115:10;16112:36;;;16128:18;;:::i;:::-;16170:53;16213:2;16194:13;;-1:-1:-1;;16190:27:495;16186:36;;16170:53;:::i;:::-;16157:66;;16246:2;16239:5;16232:17;16286:7;16281:2;16276;16272;16268:11;16264:20;16261:33;16258:53;;;16307:1;16304;16297:12;16258:53;16362:2;16357;16353;16349:11;16344:2;16337:5;16333:14;16320:45;16406:1;16401:2;16396;16389:5;16385:14;16381:23;16374:34;;16427:5;16417:15;;;;;15540:898;;;;;:::o;16443:1616::-;16511:5;16559:4;16547:9;16542:3;16538:19;16534:30;16531:50;;;16577:1;16574;16567:12;16531:50;16599:22;;:::i;:::-;16590:31;;16657:9;16644:23;16637:5;16630:38;16687:2;16740;16729:9;16725:18;16712:32;-1:-1:-1;;;;;16804:2:495;16796:6;16793:14;16790:34;;;16820:1;16817;16810:12;16790:34;16843:22;;;;16895:4;16881:12;;;16877:23;16874:43;;;16913:1;16910;16903:12;16874:43;16941:22;;:::i;:::-;17001:2;16988:16;17029:2;17019:8;17016:16;17013:36;;;17045:1;17042;17035:12;17013:36;17074:52;17122:3;17111:8;17107:2;17103:17;17074:52;:::i;:::-;17065:7;17058:69;;17173:2;17169;17165:11;17152:25;17202:2;17192:8;17189:16;17186:36;;;17218:1;17215;17208:12;17186:36;17241:17;;17289:4;17281:13;;17277:23;-1:-1:-1;17267:51:495;;17314:1;17311;17304:12;17267:51;17350:2;17337:16;17373:60;17389:43;17429:2;17389:43;:::i;17373:60::-;17467:15;;;17549:1;17545:10;;;;17537:19;;17533:28;;;17498:12;;;;17573:15;;;17570:35;;;17601:1;17598;17591:12;17570:35;17625:11;;;;17645:142;17661:6;17656:3;17653:15;17645:142;;;17727:17;;17715:30;;17678:12;;;;17765;;;;17645:142;;;17803:16;;;17796:31;-1:-1:-1;;;17873:4:495;17865:13;;17852:27;17891:16;;;17888:36;;;17920:1;17917;17910:12;17888:36;17960:52;18008:3;17997:8;17993:2;17989:17;17960:52;:::i;:::-;17953:4;17944:7;17940:18;17933:80;;18045:7;18040:2;18033:5;18029:14;18022:31;;;;;16443:1616;;;;:::o;18064:529::-;18142:5;18190:4;18178:9;18173:3;18169:19;18165:30;18162:50;;;18208:1;18205;18198:12;18162:50;18230:22;;:::i;:::-;18221:31;;18288:9;18275:23;-1:-1:-1;;;;;18313:6:495;18310:30;18307:50;;;18353:1;18350;18343:12;18307:50;18380:68;18444:3;18435:6;18424:9;18420:22;18380:68;:::i;:::-;18373:5;18366:83;;18501:2;18490:9;18486:18;18473:32;18514:33;18539:7;18514:33;:::i;:::-;18574:2;18563:14;;18556:31;18567:5;18064:529;-1:-1:-1;;18064:529:495:o;18598:395::-;18708:6;18761:2;18749:9;18740:7;18736:23;18732:32;18729:52;;;18777:1;18774;18767:12;18729:52;18817:9;18804:23;-1:-1:-1;;;;;18842:6:495;18839:30;18836:50;;;18882:1;18879;18872:12;18836:50;18905:82;18979:7;18970:6;18959:9;18955:22;18905:82;:::i;18998:258::-;19093:6;19146:2;19134:9;19125:7;19121:23;19117:32;19114:52;;;19162:1;19159;19152:12;19114:52;19185:65;19242:7;19231:9;19185:65;:::i;19261:418::-;19327:5;19375:4;19363:9;19358:3;19354:19;19350:30;19347:50;;;19393:1;19390;19383:12;19347:50;19426:2;19420:9;19468:4;19460:6;19456:17;19539:6;19527:10;19524:22;-1:-1:-1;;;;;19491:10:495;19488:34;19485:62;19482:88;;;19550:18;;:::i;:::-;19586:2;19579:22;19649:23;;19634:39;;-1:-1:-1;19619:6:495;19261:418;-1:-1:-1;19261:418:495:o;19684:612::-;19792:6;19845:2;19833:9;19824:7;19820:23;19816:32;19813:52;;;19861:1;19858;19851:12;19813:52;19887:22;;:::i;:::-;19932:57;19981:7;19970:9;19932:57;:::i;:::-;19925:5;19918:72;20042:2;20031:9;20027:18;20014:32;20055:33;20080:7;20055:33;:::i;:::-;20115:2;20104:14;;20097:31;20180:2;20165:18;;20152:32;20193:33;20152:32;20193:33;:::i;:::-;20253:2;20242:14;;20235:31;20246:5;19684:612;-1:-1:-1;;;19684:612:495:o;20700:250::-;20785:1;20795:113;20809:6;20806:1;20803:13;20795:113;;;20885:11;;;20879:18;20866:11;;;20859:39;20831:2;20824:10;20795:113;;;-1:-1:-1;;20942:1:495;20924:16;;20917:27;20700:250::o;20955:271::-;20997:3;21035:5;21029:12;21062:6;21057:3;21050:19;21078:76;21147:6;21140:4;21135:3;21131:14;21124:4;21117:5;21113:16;21078:76;:::i;:::-;21208:2;21187:15;-1:-1:-1;;21183:29:495;21174:39;;;;21215:4;21170:50;;20955:271;-1:-1:-1;;20955:271:495:o;21231:220::-;21380:2;21369:9;21362:21;21343:4;21400:45;21441:2;21430:9;21426:18;21418:6;21400:45;:::i;21456:439::-;21509:3;21547:5;21541:12;21574:6;21569:3;21562:19;21600:4;21629;21624:3;21620:14;21613:21;;21668:4;21661:5;21657:16;21691:1;21701:169;21715:6;21712:1;21709:13;21701:169;;;21776:13;;21764:26;;21810:12;;;;21845:15;;;;21737:1;21730:9;21701:169;;;-1:-1:-1;21886:3:495;;21456:439;-1:-1:-1;;;;;21456:439:495:o;21900:1081::-;21989:5;21983:12;21978:3;21971:25;21953:3;22015:4;22065:2;22058:5;22054:14;22048:21;22099:4;22094:2;22089:3;22085:12;22078:26;22141:12;22135:19;22186:4;22179;22174:3;22170:14;22163:28;22212:59;22266:3;22261;22257:13;22241:14;22212:59;:::i;:::-;22308:21;;;22302:28;-1:-1:-1;;22392:14:495;;;22388:23;;22381:4;22372:14;;22365:47;22461:21;;22491:20;;;22565:23;;;;-1:-1:-1;22606:1:495;;22349:7;;22529:13;;;;22616:175;22630:6;22627:1;22624:13;22616:175;;;22693:13;;22679:28;;22766:15;;;;22652:1;22645:9;;;;;22729:14;;;;22616:175;;;22620:3;22846:4;22832:12;22828:23;22822:30;22800:52;;22904:2;22898:3;22891:5;22887:15;22883:24;22877:3;22872;22868:13;22861:47;22924:51;22969:5;22953:14;22924:51;:::i;:::-;22917:58;21900:1081;-1:-1:-1;;;;;;;;;21900:1081:495:o;22986:1148::-;23171:2;23160:9;23153:21;23134:4;23209:6;23203:13;23252:4;23247:2;23236:9;23232:18;23225:32;23294:12;23288:19;23344:4;23338:3;23327:9;23323:19;23316:33;23372:65;23432:3;23421:9;23417:19;23401:14;23372:65;:::i;:::-;23358:79;;23492:2;23478:12;23474:21;23468:28;23565:3;23561:8;23549:9;23541:6;23537:22;23533:37;23527:3;23516:9;23512:19;23505:66;23594:52;23639:6;23623:14;23594:52;:::i;:::-;23580:66;;;23707:4;23693:12;23689:23;23683:30;23677:3;23666:9;23662:19;23655:59;23789:4;23775:12;23771:23;23765:30;23758:38;23751:46;23745:3;23734:9;23730:19;23723:75;23847:2;23839:6;23835:15;23829:22;23807:44;;23860:56;23910:4;23899:9;23895:20;23879:14;-1:-1:-1;;;;;4125:31:495;4113:44;;4059:104;23860:56;23972:4;23964:6;23960:17;23954:24;23947:4;23936:9;23932:20;23925:54;24035:4;24027:6;24023:17;24017:24;24010:4;23999:9;23995:20;23988:54;24098:4;24090:6;24086:17;24080:24;24073:4;24062:9;24058:20;24051:54;24122:6;24114:14;;;;22986:1148;;;;:::o;24959:432::-;25020:5;25068:4;25056:9;25051:3;25047:19;25043:30;25040:50;;;25086:1;25083;25076:12;25040:50;25108:22;;:::i;:::-;25099:31;;25167:9;25154:23;25186:33;25211:7;25186:33;:::i;:::-;25228:22;;25302:2;25287:18;;25274:32;25315:30;25274:32;25315:30;:::i;25396:468::-;25499:6;25552:2;25540:9;25531:7;25527:23;25523:32;25520:52;;;25568:1;25565;25558:12;25520:52;25594:22;;:::i;:::-;25639:52;25683:7;25672:9;25639:52;:::i;:::-;25632:5;25625:67;25744:4;25733:9;25729:20;25716:34;25759:33;25784:7;25759:33;:::i;25869:272::-;26071:3;26056:19;;26084:51;26060:9;26117:6;26084:51;:::i;26146:492::-;26213:5;26261:4;26249:9;26244:3;26240:19;26236:30;26233:50;;;26279:1;26276;26269:12;26233:50;26301:22;;:::i;:::-;26292:31;;26359:9;26346:23;26339:5;26332:38;26430:2;26419:9;26415:18;26402:32;26397:2;26390:5;26386:14;26379:56;26495:2;26484:9;26480:18;26467:32;26462:2;26455:5;26451:14;26444:56;26560:2;26549:9;26545:18;26532:32;26527:2;26520:5;26516:14;26509:56;26626:3;26615:9;26611:19;26598:33;26592:3;26585:5;26581:15;26574:58;26146:492;;;;:::o;26643:372::-;26720:5;26768:6;26756:9;26751:3;26747:19;26743:32;26740:52;;;26788:1;26785;26778:12;26740:52;26810:22;;:::i;:::-;26801:31;;26855:54;26905:3;26894:9;26855:54;:::i;:::-;26848:5;26841:69;26944:64;27004:3;26998;26987:9;26983:19;26944:64;:::i;27020:500::-;27139:6;27192:3;27180:9;27171:7;27167:23;27163:33;27160:53;;;27209:1;27206;27199:12;27160:53;27235:22;;:::i;:::-;27280:68;27340:7;27329:9;27280:68;:::i;:::-;27273:5;27266:83;27401:3;27390:9;27386:19;27373:33;27415;27440:7;27415:33;:::i;29519:616::-;29699:4;29741:3;29730:9;29726:19;29718:27;;29754:58;29802:9;29793:6;29787:13;29754:58;:::i;:::-;29868:4;29860:6;29856:17;29850:24;29843:4;29832:9;29828:20;29821:54;29931:4;29923:6;29919:17;29913:24;29906:4;29895:9;29891:20;29884:54;29994:4;29986:6;29982:17;29976:24;29969:4;29958:9;29954:20;29947:54;30057:4;30049:6;30045:17;30039:24;30032:4;30021:9;30017:20;30010:54;30122:4;30114:6;30110:17;30104:24;30095:6;30084:9;30080:22;30073:56;29519:616;;;;:::o;30140:626::-;30237:6;30245;30298:2;30286:9;30277:7;30273:23;30269:32;30266:52;;;30314:1;30311;30304:12;30266:52;30354:9;30341:23;-1:-1:-1;;;;;30424:2:495;30416:6;30413:14;30410:34;;;30440:1;30437;30430:12;30410:34;30478:6;30467:9;30463:22;30453:32;;30523:7;30516:4;30512:2;30508:13;30504:27;30494:55;;30545:1;30542;30535:12;30494:55;30585:2;30572:16;30611:2;30603:6;30600:14;30597:34;;;30627:1;30624;30617:12;30597:34;30680:7;30675:2;30665:6;30662:1;30658:14;30654:2;30650:23;30646:32;30643:45;30640:65;;;30701:1;30698;30691:12;30640:65;30732:2;30724:11;;;;;30754:6;;-1:-1:-1;30140:626:495;;-1:-1:-1;;;;30140:626:495:o;30771:801::-;30931:4;30960:2;31000;30989:9;30985:18;31030:2;31019:9;31012:21;31053:6;31088;31082:13;31119:6;31111;31104:22;31157:2;31146:9;31142:18;31135:25;;31219:2;31209:6;31206:1;31202:14;31191:9;31187:30;31183:39;31169:53;;31257:2;31249:6;31245:15;31278:1;31288:255;31302:6;31299:1;31296:13;31288:255;;;31395:2;31391:7;31379:9;31371:6;31367:22;31363:36;31358:3;31351:49;31423:40;31456:6;31447;31441:13;31423:40;:::i;:::-;31413:50;-1:-1:-1;31521:12:495;;;;31486:15;;;;31324:1;31317:9;31288:255;;;-1:-1:-1;31560:6:495;;30771:801;-1:-1:-1;;;;;;;30771:801:495:o;32046:219::-;32157:6;32210:3;32198:9;32189:7;32185:23;32181:33;32178:53;;;32227:1;32224;32217:12;32658:219;32769:6;32822:3;32810:9;32801:7;32797:23;32793:33;32790:53;;;32839:1;32836;32829:12;33146:210;33248:6;33301:3;33289:9;33280:7;33276:23;33272:33;33269:53;;;33318:1;33315;33308:12;33361:174;33439:5;33484:3;33475:6;33470:3;33466:16;33462:26;33459:46;;;33501:1;33498;33491:12;33540:907;33816:6;33824;33832;33840;33848;33892:9;33883:7;33879:23;33922:3;33918:2;33914:12;33911:32;;;33939:1;33936;33929:12;33911:32;33978:9;33965:23;33997:31;34022:5;33997:31;:::i;:::-;34047:5;-1:-1:-1;34071:81:495;34144:7;34139:2;34124:18;;34071:81;:::i;:::-;34061:91;-1:-1:-1;34187:3:495;-1:-1:-1;;34168:17:495;;34164:27;34161:47;;;34204:1;34201;34194:12;34161:47;;34242:3;34231:9;34227:19;34217:29;;34265:75;34332:7;34326:3;34315:9;34311:19;34265:75;:::i;:::-;34255:85;;34359:82;34433:7;34427:3;34416:9;34412:19;34359:82;:::i;:::-;34349:92;;33540:907;;;;;;;;:::o;34452:159::-;34516:5;34561:2;34552:6;34547:3;34543:16;34539:25;34536:45;;;34577:1;34574;34567:12;34616:248;34708:6;34761:2;34749:9;34740:7;34736:23;34732:32;34729:52;;;34777:1;34774;34767:12;34729:52;34800:58;34850:7;34839:9;34800:58;:::i;34869:500::-;34930:5;34978:4;34966:9;34961:3;34957:19;34953:30;34950:50;;;34996:1;34993;34986:12;34950:50;35018:22;;:::i;:::-;35009:31;;35077:9;35064:23;35096:33;35121:7;35096:33;:::i;:::-;35138:22;;35220:2;35205:18;;;35192:32;35176:14;;;35169:56;35277:2;35262:18;;35249:32;35290:33;35249:32;35290:33;:::i;35374:399::-;35445:5;35493:4;35481:9;35476:3;35472:19;35468:30;35465:50;;;35511:1;35508;35501:12;35465:50;35533:22;;:::i;:::-;35524:31;;35578:48;35622:3;35611:9;35578:48;:::i;:::-;35571:5;35564:63;35679:2;35668:9;35664:18;35651:32;35692:33;35717:7;35692:33;:::i;35778:264::-;35881:6;35934:3;35922:9;35913:7;35909:23;35905:33;35902:53;;;35951:1;35948;35941:12;35902:53;35974:62;36028:7;36017:9;35974:62;:::i;36576:670::-;36698:1;36694;36689:3;36685:11;36681:19;36673:5;36667:12;36663:38;36658:3;36651:51;36751:4;36744:5;36740:16;36734:23;36727:4;36722:3;36718:14;36711:47;36807:4;36800:5;36796:16;36790:23;36783:4;36778:3;36774:14;36767:47;36863:4;36856:5;36852:16;36846:23;36839:4;36834:3;36830:14;36823:47;36919:4;36912:5;36908:16;36902:23;36895:4;36890:3;36886:14;36879:47;36975:4;36968:5;36964:16;36958:23;36951:4;36946:3;36942:14;36935:47;37045:4;37038:5;37034:16;37028:23;37021:31;37014:39;37007:4;37002:3;36998:14;36991:63;37103:4;37096:5;37092:16;37086:23;37079:4;37074:3;37070:14;37063:47;37129:6;37181:2;37174:5;37170:14;37164:21;37194:46;37236:2;37231:3;37227:12;37213;-1:-1:-1;;;;;4125:31:495;4113:44;;4059:104;37251:394;37538:25;;;37525:3;37510:19;;37572:67;37635:2;37620:18;;37612:6;37572:67;:::i;37650:545::-;37722:5;37770:4;37758:9;37753:3;37749:19;37745:30;37742:50;;;37788:1;37785;37778:12;37742:50;37810:22;;:::i;:::-;37801:31;;37862:9;37856:16;37881:33;37906:7;37881:33;:::i;:::-;37923:22;;37990:2;37975:18;;37969:25;38003:30;37969:25;38003:30;:::i;:::-;38065:7;38060:2;38053:5;38049:14;38042:31;;38126:2;38115:9;38111:18;38105:25;38100:2;38093:5;38089:14;38082:49;38184:2;38173:9;38169:18;38163:25;38158:2;38151:5;38147:14;38140:49;37650:545;;;;:::o;38200:945::-;38313:6;38366:3;38354:9;38345:7;38341:23;38337:33;38334:53;;;38383:1;38380;38373:12;38334:53;38416:2;38410:9;38458:4;38450:6;38446:17;38529:6;38517:10;38514:22;-1:-1:-1;;;;;38481:10:495;38478:34;38475:62;38472:88;;;38540:18;;:::i;:::-;38576:2;38569:22;38615:63;38670:7;38659:9;38615:63;:::i;:::-;38607:6;38600:79;38722:3;38711:9;38707:19;38701:26;38736:31;38761:5;38736:31;:::i;:::-;38802:5;38795:4;38787:6;38783:17;38776:32;;38862:3;38851:9;38847:19;38841:26;38836:2;38828:6;38824:15;38817:51;38924:3;38913:9;38909:19;38903:26;38896:4;38888:6;38884:17;38877:53;38985:4;38974:9;38970:20;38964:27;38958:3;38950:6;38946:16;38939:53;39047:3;39036:9;39032:19;39026:26;39020:3;39012:6;39008:16;39001:52;39108:3;39097:9;39093:19;39087:26;39081:3;39073:6;39069:16;39062:52;39133:6;39123:16;;;38200:945;;;;:::o;39150:600::-;39382:4;39424:3;39413:9;39409:19;39401:27;;39455:6;39444:9;39437:25;39511:6;39498:20;39493:2;39482:9;39478:18;39471:48;39580:2;39572:6;39568:15;39555:29;39550:2;39539:9;39535:18;39528:57;39632:2;39624:6;39620:15;39607:29;39645:31;39670:5;39645:31;:::i;:::-;-1:-1:-1;;;;;39712:31:495;39707:2;39692:18;;;;39685:59;;;;39150:600;;-1:-1:-1;;39150:600:495:o;40034:1073::-;40303:6;40292:9;40285:25;40346:2;40341;40330:9;40326:18;40319:30;40266:4;40397:6;40384:20;40484:2;40480:7;40471:6;40455:14;40451:27;40447:41;40427:18;40423:66;40413:94;;40503:1;40500;40493:12;40413:94;40529:31;;40637:2;40626:14;;;40583:19;-1:-1:-1;;;;;40652:30:495;;40649:50;;;40695:1;40692;40685:12;40649:50;40744:6;40728:14;40724:27;40715:7;40711:41;40708:61;;;40765:1;40762;40755:12;40708:61;40805:2;40800;40789:9;40785:18;40778:30;40845:6;40839:3;40828:9;40824:19;40817:35;40904:6;40895:7;40889:3;40878:9;40874:19;40861:50;40961:1;40955:3;40946:6;40935:9;40931:22;40927:32;40920:43;41024:2;41016:6;41012:15;40999:29;40994:2;40983:9;40979:18;40972:57;41097:3;41090:2;41086:7;41081:2;41073:6;41069:15;41065:29;41054:9;41050:45;41046:55;41038:63;;;;40034:1073;;;;;:::o;41112:242::-;41204:6;41257:2;41245:9;41236:7;41232:23;41228:32;41225:52;;;41273:1;41270;41263:12;41225:52;41296;41340:7;41329:9;41296:52;:::i;41359:951::-;41662:6;41651:9;41644:25;41705:2;41700;41689:9;41685:18;41678:30;41625:4;41743:6;41737:13;41786:2;41781;41770:9;41766:18;41759:30;41832:12;41826:19;41820:3;41809:9;41805:19;41798:48;41921:2;41907:12;41903:21;41897:28;41890:36;41883:44;41877:3;41866:9;41862:19;41855:73;42003:2;41989:12;41985:21;41979:28;41972:36;41965:44;41959:3;41948:9;41944:19;41937:73;42065:4;42051:12;42047:23;42041:30;42019:52;;42108:3;42102;42091:9;42087:19;42080:32;42132:65;42192:3;42181:9;42177:19;42161:14;42132:65;:::i;:::-;42257:2;42245:15;;;;42239:22;-1:-1:-1;;;;;42235:48:495;42228:4;42213:20;;;;42206:78;;;;-1:-1:-1;42121:76:495;;41359:951;-1:-1:-1;;41359:951:495:o;42315:127::-;42376:10;42371:3;42367:20;42364:1;42357:31;42407:4;42404:1;42397:15;42431:4;42428:1;42421:15;42447:128;42514:9;;;42535:11;;;42532:37;;;42549:18;;:::i;42580:217::-;42620:1;42646;42636:132;;42690:10;42685:3;42681:20;42678:1;42671:31;42725:4;42722:1;42715:15;42753:4;42750:1;42743:15;42636:132;-1:-1:-1;42782:9:495;;42580:217::o;43018:670::-;43133:6;43186:3;43174:9;43165:7;43161:23;43157:33;43154:53;;;43203:1;43200;43193:12;43154:53;43229:22;;:::i;:::-;43280:9;43274:16;43267:5;43260:31;43344:2;43333:9;43329:18;43323:25;43318:2;43311:5;43307:14;43300:49;43402:2;43391:9;43387:18;43381:25;43376:2;43369:5;43365:14;43358:49;43460:2;43449:9;43445:18;43439:25;43434:2;43427:5;43423:14;43416:49;43519:3;43508:9;43504:19;43498:26;43492:3;43485:5;43481:15;43474:51;43570:3;43559:9;43555:19;43549:26;43584:33;43609:7;43584:33;:::i;:::-;43644:3;43633:15;;43626:32;43637:5;43018:670;-1:-1:-1;;;43018:670:495:o;44251:184::-;44321:6;44374:2;44362:9;44353:7;44349:23;44345:32;44342:52;;;44390:1;44387;44380:12;44342:52;-1:-1:-1;44413:16:495;;44251:184;-1:-1:-1;44251:184:495:o;44688:254::-;44832:9;44869:67;44921:14;44914:5;44869:67;:::i;44947:237::-;45079:9;45116:62;45163:14;45156:5;45116:62;:::i;45189:363::-;45275:58;45329:3;45321:5;45315:12;45275:58;:::i;:::-;45379:4;45368:16;;45362:23;-1:-1:-1;;;;;45457:21:495;;;45448:6;45439:16;;45432:47;45534:4;45523:16;;;45517:23;45513:32;45504:6;45495:16;;;45488:58;45189:363::o;45557:431::-;45870:25;;;45857:3;45842:19;;45904:78;45978:2;45963:18;;45955:6;45904:78;:::i;46306:606::-;46607:25;;;46651:13;;46700:9;;46695:2;46680:18;;;46673:37;;;;46752:11;;;46746:18;46741:2;46726:18;;;46719:46;;;;46807:11;;;46801:18;46796:2;46781:18;;46774:46;46867:15;46861:22;-1:-1:-1;;;;;46857:48:495;46851:3;46836:19;;46829:77;46594:3;46579:19;;46306:606::o;47591:882::-;47644:3;47688:5;47682:12;47715:4;47710:3;47703:17;47741:58;47793:4;47788:3;47784:14;47770:12;47741:58;:::i;:::-;47818:4;47859:14;;;47853:21;47904:14;;;47890:12;;;47883:36;47968:21;;47998:20;;;48072:23;;;;-1:-1:-1;47818:4:495;;-1:-1:-1;;48036:13:495;;;;48123:175;48137:6;48134:1;48131:13;48123:175;;;48200:13;;48186:28;;48273:15;;;;48159:1;48152:9;;;;;48236:14;;;;48123:175;;;48127:3;48346:4;48339:5;48335:16;48329:23;48307:45;;48395:3;48388:5;48384:15;48377:4;48372:3;48368:14;48361:39;48416:51;48461:5;48445:14;48416:51;:::i;:::-;48409:58;47591:882;-1:-1:-1;;;;;;;47591:882:495:o;48478:488::-;48552:3;48596:5;48590:12;48623:4;48618:3;48611:17;48666:12;48660:19;48653:4;48648:3;48644:14;48637:43;48735:4;48721:12;48717:23;48711:30;48689:52;;48771:4;48766:2;48761:3;48757:12;48750:26;48798:59;48852:3;48847;48843:13;48827:14;48798:59;:::i;:::-;48910:4;48899:16;;;48893:23;-1:-1:-1;;;;;48889:49:495;48873:14;;;;48866:73;;;;-1:-1:-1;48785:72:495;48478:488;-1:-1:-1;48478:488:495:o;48971:439::-;49264:6;49253:9;49246:25;49307:2;49302;49291:9;49287:18;49280:30;49227:4;49327:77;49400:2;49389:9;49385:18;49377:6;49327:77;:::i;49415:243::-;49508:6;49561:2;49549:9;49540:7;49536:23;49532:32;49529:52;;;49577:1;49574;49567:12;49529:52;49600;49644:7;49633:9;49600:52;:::i;52241:685::-;52515:4;52557:3;52546:9;52542:19;52534:27;;52588:6;52577:9;52570:25;52620:6;52614:13;52636:69;52701:2;52690:9;52686:18;52681:2;52675:9;6530:5;6524:12;6519:3;6512:25;6586:4;6579:5;6575:16;6569:23;6562:4;6557:3;6553:14;6546:47;6642:4;6635:5;6631:16;6625:23;6618:4;6613:3;6609:14;6602:47;6698:4;6691:5;6687:16;6681:23;6674:4;6669:3;6665:14;6658:47;6754:4;6747:5;6743:16;6737:23;6730:4;6725:3;6721:14;6714:47;;;6438:329;52636:69;52748:2;52740:11;;;52734:18;6524:12;;52829:3;52814:19;;6512:25;6575:16;;;6569:23;6553:14;;;6546:47;6642:4;6631:16;;6625:23;6609:14;;;6602:47;6698:4;6687:16;;6681:23;6665:14;;;6658:47;6754:4;6743:16;6737:23;6721:14;;;6714:47;52881:15;;;;52875:22;-1:-1:-1;;;;;52871:48:495;52865:3;52850:19;;;52843:77;52881:15;52241:685;-1:-1:-1;52241:685:495:o;52931:538::-;53047:6;53100:3;53088:9;53079:7;53075:23;53071:33;53068:53;;;53117:1;53114;53107:12;53068:53;53143:22;;:::i;:::-;53194:9;53188:16;53181:5;53174:31;53258:2;53247:9;53243:18;53237:25;53232:2;53225:5;53221:14;53214:49;53316:2;53305:9;53301:18;53295:25;53290:2;53283:5;53279:14;53272:49;53374:2;53363:9;53359:18;53353:25;53348:2;53341:5;53337:14;53330:49;53433:3;53422:9;53418:19;53412:26;53406:3;53399:5;53395:15;53388:51;53458:5;53448:15;;;52931:538;;;;:::o;53474:129::-;-1:-1:-1;;;;;53552:5:495;53548:30;53541:5;53538:41;53528:69;;53593:1;53590;53583:12;53608:502;53720:6;53773:2;53761:9;53752:7;53748:23;53744:32;53741:52;;;53789:1;53786;53779:12;53741:52;53815:22;;:::i;:::-;53867:9;53861:16;53886:33;53911:7;53886:33;:::i;:::-;53928:22;;53995:2;53980:18;;53974:25;54008:32;53974:25;54008:32;:::i;54115:519::-;54333:4;54375:2;54364:9;54360:18;54352:26;;54405:6;54394:9;54387:25;54461:6;54448:20;54443:2;54432:9;54428:18;54421:48;54516:2;54508:6;54504:15;54491:29;54529:31;54554:5;54529:31;:::i;:::-;-1:-1:-1;;;;;54596:31:495;54591:2;54576:18;;;;54569:59;;;;54115:519;;-1:-1:-1;;54115:519:495:o;55073:247::-;55168:6;55221:2;55209:9;55200:7;55196:23;55192:32;55189:52;;;55237:1;55234;55227:12;55189:52;55260:54;55306:7;55295:9;55260:54;:::i;55726:653::-;55840:6;55893:3;55881:9;55872:7;55868:23;55864:33;55861:53;;;55910:1;55907;55900:12;55861:53;55936:22;;:::i;:::-;55981:63;56036:7;56025:9;55981:63;:::i;:::-;55974:5;55967:78;56100:3;56089:9;56085:19;56079:26;56072:4;56065:5;56061:16;56054:52;56161:3;56150:9;56146:19;56140:26;56133:4;56126:5;56122:16;56115:52;56222:4;56211:9;56207:20;56201:27;56194:4;56187:5;56183:16;56176:53;56283:3;56272:9;56268:19;56262:26;56256:3;56249:5;56245:15;56238:51;56343:3;56332:9;56328:19;56322:26;56316:3;56309:5;56305:15;56298:51;56368:5;56358:15;;;55726:653;;;;:::o;56606:276::-;56715:6;56768:3;56756:9;56747:7;56743:23;56739:33;56736:53;;;56785:1;56782;56775:12;56736:53;56808:68;56868:7;56857:9;56808:68;:::i;57131:711::-;57249:5;57236:19;57231:3;57224:32;57304:4;57297:5;57293:16;57280:30;57319:33;57344:7;57319:33;:::i;:::-;-1:-1:-1;;;;;57422:16:495;;;57415:4;57406:14;;57399:40;57495:4;57484:16;;;57471:30;57455:14;;;57448:54;57558:4;57547:16;;;57534:30;57518:14;;;57511:54;57621:4;57610:16;;;57597:30;57581:14;;;57574:54;57379:3;57673:16;;;57660:30;57644:14;;;57637:54;57739:4;57728:16;;57715:30;;57754:33;57715:30;57754:33;:::i;:::-;57832:2;57823:7;57819:16;57812:4;57807:3;57803:14;57796:40;;;57131:711;;:::o;57847:436::-;58158:25;;;58145:3;58130:19;;58192:85;58273:2;58258:18;;58250:6;58192:85;:::i;58288:245::-;58367:6;58375;58428:2;58416:9;58407:7;58403:23;58399:32;58396:52;;;58444:1;58441;58434:12;58396:52;-1:-1:-1;;58467:16:495;;58523:2;58508:18;;;58502:25;58467:16;;58502:25;;-1:-1:-1;58288:245:495:o;58538:508::-;58877:25;;;58864:3;58849:19;;58911:85;58992:2;58977:18;;58969:6;58911:85;:::i;:::-;59033:6;59027:3;59016:9;59012:19;59005:35;58538:508;;;;;;:::o;59298:391::-;59579:25;;;59566:3;59551:19;;59613:70;59679:2;59664:18;;59656:6;59141:19;;59129:32;;59217:4;59206:16;;;59193:30;59177:14;;;59170:54;59280:4;59269:16;;;59256:30;59240:14;;59233:54;59051:242;59694:463;60003:25;;;59990:3;59975:19;;60037:70;60103:2;60088:18;;60080:6;59141:19;;59129:32;;59217:4;59206:16;;;59193:30;59177:14;;;59170:54;59280:4;59269:16;;;59256:30;59240:14;;59233:54;59051:242;60037:70;60144:6;60138:3;60127:9;60123:19;60116:35;59694:463;;;;;;:::o;60162:245::-;60229:6;60282:2;60270:9;60261:7;60257:23;60253:32;60250:52;;;60298:1;60295;60288:12;60250:52;60330:9;60324:16;60349:28;60371:5;60349:28;:::i;60412:540::-;60525:5;60512:19;60507:3;60500:32;60588:4;60581:5;60577:16;60564:30;60557:4;60552:3;60548:14;60541:54;60651:4;60644:5;60640:16;60627:30;60620:4;60615:3;60611:14;60604:54;60714:4;60707:5;60703:16;60690:30;60683:4;60678:3;60674:14;60667:54;60777:4;60770:5;60766:16;60753:30;60746:4;60741:3;60737:14;60730:54;60832:4;60825:5;60821:16;60808:30;60847:33;60872:7;60847:33;:::i;:::-;-1:-1:-1;;;;;60912:33:495;60933:3;60896:14;;;;60889:57;;;;-1:-1:-1;60412:540:495:o;61341:382::-;61454:5;61441:19;61469:33;61494:7;61469:33;:::i;:::-;-1:-1:-1;;;;;61523:33:495;61511:46;;61605:4;61594:16;;61581:30;61620:32;61581:30;61620:32;:::i;:::-;-1:-1:-1;;;;;61688:7:495;61684:32;61677:4;61672:3;61668:14;61661:56;;61341:382;;:::o;61728:966::-;61839:5;61826:19;61854:33;61879:7;61854:33;:::i;:::-;-1:-1:-1;;;;;61946:16:495;;;61934:29;;62011:4;62000:16;;61987:30;;62026:33;61987:30;62026:33;:::i;:::-;62091:16;;;62084:4;62075:14;;62068:40;62156:4;62145:16;;62132:30;;62171:33;62132:30;62171:33;:::i;:::-;62236:16;;;62229:4;62220:14;;62213:40;62301:4;62290:16;;62277:30;;62316:33;62277:30;62316:33;:::i;:::-;62381:16;;;62374:4;62365:14;;62358:40;62446:4;62435:16;;62422:30;;62461:33;62422:30;62461:33;:::i;:::-;62526:16;;;62519:4;62510:14;;62503:40;62591:4;62580:16;;62567:30;;62606:33;62567:30;62606:33;:::i;:::-;62684:2;62675:7;62671:16;62664:4;62659:3;62655:14;62648:40;;;61728:966;;:::o;62699:1127::-;63374:25;;;-1:-1:-1;;;;;63435:32:495;;63430:2;63415:18;;63408:60;63361:3;63346:19;;63477:80;63553:2;63538:18;;63530:6;63477:80;:::i;:::-;61058:19;;63643:3;63628:19;;61046:32;61134:4;61123:16;;61110:30;61094:14;;;61087:54;61197:4;61186:16;;61173:30;61157:14;;;61150:54;61260:4;61249:16;;61236:30;61220:14;;;61213:54;61323:4;61312:16;;61299:30;61283:14;;;61276:54;63657:78;63730:3;63719:9;63715:19;63707:6;63657:78;:::i;:::-;63744:76;63815:3;63804:9;63800:19;63792:6;63744:76;:::i;63831:1030::-;64478:25;;;64465:3;64450:19;;64512:80;64588:2;64573:18;;64565:6;64512:80;:::i;:::-;61058:19;;64678:3;64663:19;;61046:32;61134:4;61123:16;;61110:30;61094:14;;;61087:54;61197:4;61186:16;;61173:30;61157:14;;;61150:54;61260:4;61249:16;;61236:30;61220:14;;;61213:54;61323:4;61312:16;;61299:30;61283:14;;;61276:54;64692:78;64765:3;64754:9;64750:19;64742:6;64692:78;:::i;:::-;64779:76;64850:3;64839:9;64835:19;64827:6;64779:76;:::i;65814:407::-;66111:25;;;66098:3;66083:19;;66145:70;66211:2;66196:18;;66188:6;65533:12;;65608:9;;-1:-1:-1;;;;;65604:18:495;;;65592:31;;65669:4;65661:13;;;65655:20;65639:14;;;65632:44;65726:4;65718:13;;;65712:20;65708:29;;65692:14;;;65685:53;;;;65780:16;;65774:23;65770:32;65763:4;65754:14;;;65747:56;65445:364;66636:253;66734:6;66787:2;66775:9;66766:7;66762:23;66758:32;66755:52;;;66803:1;66800;66793:12;66755:52;66826:57;66875:7;66864:9;66826:57;:::i;67173:416::-;67262:1;67299:5;67262:1;67313:270;67334:7;67324:8;67321:21;67313:270;;;67393:4;67389:1;67385:6;67381:17;67375:4;67372:27;67369:53;;;67402:18;;:::i;:::-;67452:7;67442:8;67438:22;67435:55;;;67472:16;;;;67435:55;67551:22;;;;67511:15;;;;67313:270;;;67317:3;67173:416;;;;;:::o;67594:806::-;67643:5;67673:8;67663:80;;-1:-1:-1;67714:1:495;67728:5;;67663:80;67762:4;67752:76;;-1:-1:-1;67799:1:495;67813:5;;67752:76;67844:4;67862:1;67857:59;;;;67930:1;67925:130;;;;67837:218;;67857:59;67887:1;67878:10;;67901:5;;;67925:130;67962:3;67952:8;67949:17;67946:43;;;67969:18;;:::i;:::-;-1:-1:-1;;68025:1:495;68011:16;;68040:5;;67837:218;;68139:2;68129:8;68126:16;68120:3;68114:4;68111:13;68107:36;68101:2;68091:8;68088:16;68083:2;68077:4;68074:12;68070:35;68067:77;68064:159;;;-1:-1:-1;68176:19:495;;;68208:5;;68064:159;68255:34;68280:8;68274:4;68255:34;:::i;:::-;68325:6;68321:1;68317:6;68313:19;68304:7;68301:32;68298:58;;;68336:18;;:::i;:::-;68374:20;;67594:806;-1:-1:-1;;;67594:806:495:o;68405:131::-;68465:5;68494:36;68521:8;68515:4;68494:36;:::i;68541:168::-;68614:9;;;68645;;68662:15;;;68656:22;;68642:37;68632:71;;68683:18;;:::i;68714:273::-;68782:6;68835:2;68823:9;68814:7;68810:23;68806:32;68803:52;;;68851:1;68848;68841:12;68803:52;68883:9;68877:16;68933:4;68926:5;68922:16;68915:5;68912:27;68902:55;;68953:1;68950;68943:12;68992:140;69050:5;69079:47;69120:4;69110:8;69106:19;69100:4;69079:47;:::i;69326:127::-;69387:10;69382:3;69378:20;69375:1;69368:31;69418:4;69415:1;69408:15;69442:4;69439:1;69432:15;69458:521;69535:4;69541:6;69601:11;69588:25;69695:2;69691:7;69680:8;69664:14;69660:29;69656:43;69636:18;69632:68;69622:96;;69714:1;69711;69704:12;69622:96;69741:33;;69793:20;;;-1:-1:-1;;;;;;69825:30:495;;69822:50;;;69868:1;69865;69858:12;69822:50;69901:4;69889:17;;-1:-1:-1;69932:14:495;69928:27;;;69918:38;;69915:58;;;69969:1;69966;69959:12;69915:58;69458:521;;;;;:::o;69984:125::-;70049:9;;;70070:10;;;70067:36;;;70083:18;;:::i;70114:782::-;70463:3;70452:9;70445:22;70426:4;70484:57;70536:3;70525:9;70521:19;70513:6;70484:57;:::i;:::-;70476:65;;-1:-1:-1;;;;;70587:6:495;70581:13;70577:54;70572:2;70561:9;70557:18;70550:82;70679:2;70671:6;70667:15;70661:22;-1:-1:-1;;;;;70774:2:495;70760:12;70756:21;70751:2;70740:9;70736:18;70729:49;70842:2;70836;70828:6;70824:15;70818:22;70814:31;70809:2;70798:9;70794:18;70787:59;;;70883:6;70877:3;70866:9;70862:19;70855:35;70114:782;;;;;;:::o;70901:287::-;71030:3;71068:6;71062:13;71084:66;71143:6;71138:3;71131:4;71123:6;71119:17;71084:66;:::i;:::-;71166:16;;;;;70901:287;-1:-1:-1;;70901:287:495:o",
    "linkReferences": {
      "src/market/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 8532, "length": 20 },
          { "start": 10103, "length": 20 }
        ]
      },
      "src/market/libraries/OfferLibrary.sol": {
        "OfferLibrary": [
          { "start": 4579, "length": 20 },
          { "start": 8213, "length": 20 }
        ]
      },
      "src/market/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 5211, "length": 20 },
          { "start": 5327, "length": 20 },
          { "start": 5662, "length": 20 },
          { "start": 9602, "length": 20 },
          { "start": 10431, "length": 20 },
          { "start": 10960, "length": 20 },
          { "start": 11670, "length": 20 }
        ]
      },
      "src/market/libraries/YieldCurveLibrary.sol": {
        "YieldCurveLibrary": [{ "start": 15896, "length": 20 }]
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 6710, "length": 20 },
          { "start": 6809, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 3296, "length": 20 },
          { "start": 9360, "length": 20 },
          { "start": 9459, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 12438, "length": 20 },
          { "start": 12537, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 5437, "length": 20 },
          { "start": 5536, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 12778, "length": 20 },
          { "start": 12877, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 11937, "length": 20 },
          { "start": 12078, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 11253, "length": 20 },
          { "start": 11352, "length": 20 },
          { "start": 11477, "length": 20 }
        ]
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 10748, "length": 20 },
          { "start": 10847, "length": 20 },
          { "start": 11103, "length": 20 }
        ]
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "PartialRepay": [
          { "start": 3433, "length": 20 },
          { "start": 3532, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 9187, "length": 20 },
          { "start": 9285, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 6509, "length": 20 },
          { "start": 6643, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 6215, "length": 20 },
          { "start": 6314, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 4967, "length": 20 },
          { "start": 5066, "length": 20 },
          { "start": 9900, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetCopyLimitOrderConfigs.sol": {
        "SetCopyLimitOrderConfigs": [
          { "start": 8725, "length": 20 },
          { "start": 8824, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 4135, "length": 20 },
          { "start": 4234, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetVault.sol": {
        "SetVault": [
          { "start": 8326, "length": 20 },
          { "start": 8460, "length": 20 }
        ]
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3714, "length": 20 },
          { "start": 3813, "length": 20 },
          { "start": 4421, "length": 20 },
          { "start": 8934, "length": 20 },
          { "start": 9066, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 12604, "length": 20 },
          { "start": 12703, "length": 20 }
        ]
      }
    },
    "immutableReferences": {
      "52969": [
        { "start": 14834, "length": 32 },
        { "start": 14875, "length": 32 },
        { "start": 15235, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": "3746f858",
    "buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": "53e043d4",
    "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": "e236052b",
    "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))": "834dafb5",
    "claim((uint256))": "f45bf01c",
    "collateralRatio(address)": "ca40742c",
    "compensate((uint256,uint256,uint256))": "8e572776",
    "compensateOnBehalfOf(((uint256,uint256,uint256),address))": "3ae6d7c3",
    "data()": "73d4a13a",
    "debtTokenAmountToCollateralTokenAmount(uint256)": "1970e5ea",
    "deposit((address,uint256,address))": "0cf8542f",
    "depositOnBehalfOf(((address,uint256,address),address))": "fa823af5",
    "feeConfig()": "1e5eb1d0",
    "getBorrowOfferAPR(address,uint256,address,uint256)": "1ff75b0b",
    "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": "02088c51",
    "getCreditPosition(uint256)": "76c1b82f",
    "getDebtPosition(uint256)": "b5ec7487",
    "getLoanOfferAPR(address,uint256,address,uint256)": "73b683be",
    "getPositionsCount()": "1ca3b0cb",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": "9ab80115",
    "getUserDefinedBorrowOfferAPR(address,uint256)": "2b59bd99",
    "getUserDefinedCopyBorrowOfferConfig(address)": "c421a759",
    "getUserDefinedCopyLoanOfferConfig(address)": "04c84222",
    "getUserDefinedLoanOfferAPR(address,uint256)": "0d37ab00",
    "getUserView(address)": "5cbc51eb",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,(uint256,uint256,uint256,uint256,uint256,address),(uint256,uint256,uint256,uint256,uint256),(address,uint64),(address,address,address,address,address,address))": "f1bf35c3",
    "isDebtPositionLiquidatable(uint256)": "e5af06ce",
    "liquidate((uint256,uint256,uint256))": "e05001f5",
    "liquidateWithReplacement((uint256,address,uint256,uint256,uint256,uint256,address))": "d927acef",
    "multicall(bytes[])": "ac9650d8",
    "oracle()": "7dc0d1d0",
    "partialRepay((uint256,uint256,address))": "02f2855a",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proxiableUUID()": "52d1902d",
    "reinitialize()": "6c2eb350",
    "renounceRole(bytes32,address)": "36568abe",
    "repay((uint256,address))": "7f417c06",
    "revokeRole(bytes32,address)": "d547741f",
    "riskConfig()": "7c90a6ca",
    "selfLiquidate((uint256))": "fd17174a",
    "selfLiquidateOnBehalfOf(((uint256),address,address))": "536b9c79",
    "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": "ccd8d4d1",
    "sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": "4fd9a8a5",
    "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": "8ea68d7e",
    "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))": "3962a686",
    "setCopyLimitOrderConfigs(((uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": "cb2e9bdc",
    "setCopyLimitOrderConfigsOnBehalfOf((((uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))": "7a32376a",
    "setUserConfiguration((uint256,bool,bool,uint256[]))": "2e106f21",
    "setUserConfigurationOnBehalfOf(((uint256,bool,bool,uint256[]),address))": "134f3f96",
    "setVariablePoolBorrowRate(uint128)": "4cbd882c",
    "setVault((address,bool))": "510aeb39",
    "setVaultOnBehalfOf(((address,bool),address))": "75829a36",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpause()": "3f4ba83a",
    "updateConfig((string,uint256))": "0317b9df",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "version()": "54fd4d50",
    "withdraw((address,uint256,address))": "2b4c9a20",
    "withdrawOnBehalfOf(((address,uint256,address),address))": "f54ae18b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"}],\"name\":\"DUE_DATE_GREATER_THAN_MAX_DUE_DATE\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"INVALID_OFFER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"crBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crAfter\",\"type\":\"uint256\"}],\"name\":\"MUST_IMPROVE_COLLATERAL_RATIO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_TENOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldBorrowRate\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newBorrowRate\",\"type\":\"uint128\"}],\"name\":\"VariablePoolBorrowRateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditLimitOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimitOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditMarketOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarketOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"compensate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct CompensateOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"compensateOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nextDebtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextCreditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableRebasingTokenVault\",\"name\":\"borrowTokenVault\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"debtToken\",\"type\":\"address\"},{\"internalType\":\"contract IPool\",\"name\":\"variablePool\",\"type\":\"address\"}],\"internalType\":\"struct DataView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"debtTokenAmountToCollateralTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct DepositOnBehalfOfParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"depositOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getBorrowOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getBuyCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCreditMarket.SwapDataBuyCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"getCreditPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"futureValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndexAtRepayment\",\"type\":\"uint256\"}],\"internalType\":\"struct DebtPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getLoanOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPositionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getSellCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct SellCreditMarket.SwapDataSellCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getUserDefinedBorrowOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDefinedCopyBorrowOfferConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrderConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDefinedCopyLoanOfferConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrderConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getUserDefinedLoanOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserView\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"loanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"borrowOffer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"}],\"internalType\":\"struct User\",\"name\":\"user\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct UserView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"f\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"r\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variablePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowTokenVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sizeFactory\",\"type\":\"address\"}],\"internalType\":\"struct InitializeDataParams\",\"name\":\"d\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionLiquidatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"}],\"internalType\":\"struct LiquidateWithReplacementParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidateWithReplacement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitBorrowToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct PartialRepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"partialRepay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct RepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"selfLiquidate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct SelfLiquidateOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"selfLiquidateOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditLimitOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimitOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collectionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditMarketOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarketOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrderConfig\",\"name\":\"copyLoanOfferConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrderConfig\",\"name\":\"copyBorrowOfferConfig\",\"type\":\"tuple\"}],\"internalType\":\"struct SetCopyLimitOrderConfigsParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setCopyLimitOrderConfigs\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrderConfig\",\"name\":\"copyLoanOfferConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrderConfig\",\"name\":\"copyBorrowOfferConfig\",\"type\":\"tuple\"}],\"internalType\":\"struct SetCopyLimitOrderConfigsParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SetCopyLimitOrderConfigsOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"setCopyLimitOrderConfigsOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setUserConfiguration\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SetUserConfigurationOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"setUserConfigurationOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"}],\"name\":\"setVariablePoolBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forfeitOldShares\",\"type\":\"bool\"}],\"internalType\":\"struct SetVaultParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forfeitOldShares\",\"type\":\"bool\"}],\"internalType\":\"struct SetVaultParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SetVaultOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"setVaultOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct UpdateConfigParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"withdrawOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Size (https://size.credit/)\",\"custom:security-contact\":\"security@size.credit\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)\"}},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))\":{\"params\":{\"params\":\"BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"}},\"buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))\":{\"details\":\"When emitting the `SwapData` event, the recipient is set as the `lender` param, which is inconsistent with the `BuyCreditMarket` event emitted just before,        where `lender` is passed as `onBehalfOf`. The reason is that `SwapData` emits only debt/credit recipients, while `BuyCreditMarket` emits both and also `onBehalfOf`.\"},\"claim((uint256))\":{\"details\":\"Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before\",\"params\":{\"params\":\"ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim\"}},\"collateralRatio(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The collateral ratio of the user\"}},\"compensate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"data()\":{\"returns\":{\"_0\":\"The data view\"}},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"params\":{\"amount\":\"The amount of debt tokens\"},\"returns\":{\"_0\":\"The equivalent amount of collateral tokens\"}},\"deposit((address,uint256,address))\":{\"details\":\"The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens\",\"params\":{\"params\":\"DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit\"}},\"feeConfig()\":{\"returns\":{\"_0\":\"The fee configuration parameters\"}},\"getBorrowOfferAPR(address,uint256,address,uint256)\":{\"params\":{\"collectionId\":\"The ID of the collection\",\"rateProvider\":\"The address of the rate provider\",\"tenor\":\"The tenor of the loan\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"apr The APR\"}},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))\":{\"params\":{\"params\":\"The input parameters for buying credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for buying credit as a market order\"}},\"getCreditPosition(uint256)\":{\"params\":{\"creditPositionId\":\"The ID of the credit position\"},\"returns\":{\"_0\":\"The CreditPosition struct containing the details of the credit position\"}},\"getDebtPosition(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The DebtPosition struct containing the details of the debt position\"}},\"getLoanOfferAPR(address,uint256,address,uint256)\":{\"params\":{\"collectionId\":\"The ID of the collection\",\"rateProvider\":\"The address of the rate provider\",\"tenor\":\"The tenor of the loan\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"apr The APR\"}},\"getPositionsCount()\":{\"returns\":{\"_0\":\"The count of debt positions and credit positions\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))\":{\"params\":{\"params\":\"The input parameters for selling credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for selling credit as a market order\"}},\"getUserDefinedBorrowOfferAPR(address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"apr The APR\"}},\"getUserDefinedCopyBorrowOfferConfig(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user copy borrow offer\"}},\"getUserDefinedCopyLoanOfferConfig(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user copy loan offer\"}},\"getUserDefinedLoanOfferAPR(address,uint256)\":{\"params\":{\"lender\":\"The address of the lender\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"apr The APR\"}},\"getUserView(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user view\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isDebtPositionLiquidatable(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"True if the debt position is liquidatable, false otherwise\"}},\"liquidate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)\"},\"returns\":{\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens the the fee recipient received from the liquidation\"}},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256,uint256,address))\":{\"details\":\"This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned\",\"params\":{\"params\":\"LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"},\"returns\":{\"liquidatorProfitBorrowToken\":\"The amount of borrow tokens liquidator received from the liquidation\",\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens liquidator received from the liquidation\"}},\"multicall(bytes[])\":{\"details\":\"This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.\",\"params\":{\"data\":\"An array of bytes encoded function calls to be executed in sequence.\"},\"returns\":{\"results\":\"An array of bytes representing the return data from each function call executed.\"}},\"oracle()\":{\"returns\":{\"_0\":\"The oracle parameters\"}},\"partialRepay((uint256,uint256,address))\":{\"details\":\"The partial repay amount should be less than the debt position future value\",\"params\":{\"params\":\"PartialRepayParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position with debt to repay     - uint256 amount: The amount of tokens to repay (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - address borrower: The address of the borrower\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"reinitialize()\":{\"details\":\"Initializes the reentrancy guard\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"repay((uint256,address))\":{\"details\":\"The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim\",\"params\":{\"params\":\"RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"riskConfig()\":{\"returns\":{\"_0\":\"The risk configuration parameters\"}},\"selfLiquidate((uint256))\":{\"details\":\"The user is prevented to self liquidate if a regular liquidation would be profitable\",\"params\":{\"params\":\"SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate\"}},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)\"}},\"sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))\":{\"params\":{\"params\":\"SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)     - uint256 collectionId: The collection id. If collectionId is RESERVED_ID, selects the user-defined yield curve     - address rateProvider: The rate provider. If collectionId is RESERVED_ID, selects the user-defined yield curve\"}},\"sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))\":{\"details\":\"When emitting the `SwapData` event, the `recipient` parameter is left out. The reason is that `SwapData` emits only debt/credit recipients,      while `SellCreditMarket` emits both and also the cash recipient.\"},\"setCopyLimitOrderConfigs(((uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"details\":\"Does not erase the user's loan offer and borrow offer      To specify \\\"no copy\\\", pass a null CopyLimitOrderConfig except for offsetAPR, since a completely null CopyLimitOrderConfig        will default to the curator-defined CopyLimitOrderConfig for that market.\",\"params\":{\"params\":\"SetCopyLimitOrderConfigsParams struct containing the following fields:     - CopyLimitOrderConfig copyLoanOfferConfig: The loan offer copy parameters       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied loan offer     - CopyLimitOrderConfig copyBorrowOfferConfig: The borrow offer copy parameters       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied borrow offer\"}},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"details\":\"By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.      Note: this function was updated in v1.8 to accept a `vault` parameter.        Although this function is market-specific, it will change a NonTransferrableRebasingTokenVault state that will be reflected on all markets.\",\"params\":{\"params\":\"SetUserConfigurationParams struct containing the following fields:     - address vault: The address of the user vault     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions\"}},\"setVariablePoolBorrowRate(uint128)\":{\"details\":\"The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero\",\"params\":{\"borrowRate\":\"The new borrow rate\"}},\"setVault((address,bool))\":{\"params\":{\"params\":\"SetVaultParams struct containing the following fields:     - address vault: The address of the vault to set     - bool forfeitOldShares: Whether to forfeit old shares. WARNING: This will reset the user's balance to 0.\"}},\"setVaultOnBehalfOf(((address,bool),address))\":{\"params\":{\"params\":\"SetVaultOnBehalfOfParams struct containing the following fields:     - address onBehalfOf: The address of the user to set the vault for     - address vault: The address of the vault to set     - bool forfeitOldShares: Whether to forfeit old shares. WARNING: This will reset the user's balance to 0.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateConfig((string,uint256))\":{\"details\":\"For `address` parameters, the `value` is converted to `uint160` and then to `address`\",\"params\":{\"params\":\"UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"version()\":{\"returns\":{\"_0\":\"The version of the Size protocol\"}},\"withdraw((address,uint256,address))\":{\"details\":\"This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens\",\"params\":{\"params\":\"WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal\"}}},\"title\":\"Size\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new loan offer in the orderbook\"},\"buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))\":{\"notice\":\"Same as `buyCreditLimit` but `onBehalfOf`\"},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))\":{\"notice\":\"Obtains credit via lending or buying existing credit\"},\"buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))\":{\"notice\":\"Same as `buyCreditMarket` but `onBehalfOf`\"},\"claim((uint256))\":{\"notice\":\"Claim the repayment of a loan with accrued interest from the Variable Pool\"},\"collateralRatio(address)\":{\"notice\":\"Get the collateral ratio of a user\"},\"compensateOnBehalfOf(((uint256,uint256,uint256),address))\":{\"notice\":\"Same as `compensate` but `onBehalfOf`\"},\"data()\":{\"notice\":\"Get the data view\"},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"notice\":\"Convert debt token amount to collateral token amount\"},\"deposit((address,uint256,address))\":{\"notice\":\"Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Aave Variable Pool or User Vault         Collateral tokens are deposited into the Size contract\"},\"depositOnBehalfOf(((address,uint256,address),address))\":{\"notice\":\"Same as `deposit` but `onBehalfOf`\"},\"feeConfig()\":{\"notice\":\"Get the fee configuration parameters\"},\"getBorrowOfferAPR(address,uint256,address,uint256)\":{\"notice\":\"Get the APR for a borrow offer in a collection from a rate provider\"},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))\":{\"notice\":\"Gets the swap data for buying credit as a market order\"},\"getCreditPosition(uint256)\":{\"notice\":\"Get the details of a credit position\"},\"getDebtPosition(uint256)\":{\"notice\":\"Get the details of a debt position\"},\"getLoanOfferAPR(address,uint256,address,uint256)\":{\"notice\":\"Get the APR for a loan offer in a collection from a rate provider\"},\"getPositionsCount()\":{\"notice\":\"Get the count of debt and credit positions\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))\":{\"notice\":\"Returns the swap data for selling credit as a market order\"},\"getUserDefinedBorrowOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a user-defined borrow offer\"},\"getUserDefinedCopyBorrowOfferConfig(address)\":{\"notice\":\"Get the user copy borrow offer for a given user\"},\"getUserDefinedCopyLoanOfferConfig(address)\":{\"notice\":\"Get the user copy loan offer for a given user\"},\"getUserDefinedLoanOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a user-defined loan offer\"},\"getUserView(address)\":{\"notice\":\"Get the user view for a given user\"},\"isDebtPositionLiquidatable(uint256)\":{\"notice\":\"Check if a debt position is liquidatable\"},\"liquidate((uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower\"},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256,uint256,address))\":{\"notice\":\"Liquidate a debt position with a replacement borrower\"},\"multicall(bytes[])\":{\"notice\":\"Executes multiple calls in a single transaction\"},\"oracle()\":{\"notice\":\"Get the oracle parameters\"},\"partialRepay((uint256,uint256,address))\":{\"notice\":\"Partial repay a debt position by selecting a specific CreditPosition\"},\"pause()\":{\"notice\":\"Pauses the protocol         Only callable by the PAUSER_ROLE\"},\"reinitialize()\":{\"notice\":\"Reinitialize the contract\"},\"repay((uint256,address))\":{\"notice\":\"Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported\"},\"riskConfig()\":{\"notice\":\"Get the risk configuration parameters\"},\"selfLiquidate((uint256))\":{\"notice\":\"Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees\"},\"selfLiquidateOnBehalfOf(((uint256),address,address))\":{\"notice\":\"Same as `selfLiquidate` but `onBehalfOf`\"},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new borrow offer in the orderbook\"},\"sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))\":{\"notice\":\"Same as `sellCreditLimit` but `onBehalfOf`\"},\"sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))\":{\"notice\":\"Same as `sellCreditMarket` but `onBehalfOf`\"},\"setCopyLimitOrderConfigs(((uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"notice\":\"Set the copy limit order configs for a user\"},\"setCopyLimitOrderConfigsOnBehalfOf((((uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))\":{\"notice\":\"Same as `setCopyLimitOrderConfigs` but `onBehalfOf`\"},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"notice\":\"Set the credit positions for sale\"},\"setUserConfigurationOnBehalfOf(((uint256,bool,bool,uint256[]),address))\":{\"notice\":\"Same as `setUserConfiguration` but `onBehalfOf`\"},\"setVariablePoolBorrowRate(uint128)\":{\"notice\":\"Sets the variable borrow rate         Only callable by the BORROW_RATE_UPDATER_ROLE\"},\"setVault((address,bool))\":{\"notice\":\"Set the vault for a user\"},\"setVaultOnBehalfOf(((address,bool),address))\":{\"notice\":\"Set the vault for a user on behalf of another user\"},\"unpause()\":{\"notice\":\"Unpauses the protocol         Only callable by the UNPAUSER_ROLE\"},\"updateConfig((string,uint256))\":{\"notice\":\"Updates the configuration of the protocol         Only callable by the DEFAULT_ADMIN_ROLE\"},\"version()\":{\"notice\":\"Get the version of the Size protocol\"},\"withdraw((address,uint256,address))\":{\"notice\":\"Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Aave Variable Pool or User Vault         Collateral tokens are withdrawn from the Size contract\"},\"withdrawOnBehalfOf(((address,uint256,address),address))\":{\"notice\":\"Same as `withdraw` but `onBehalfOf`\"}},\"notice\":\"See the documentation in {ISize}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/market/Size.sol\":\"Size\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC-7540-Reference/=lib/ERC-7540-Reference/\",\":@aave/=lib/aave-v3-core/contracts/\",\":@chainlink/=lib/chainlink/\",\":@chimera/=lib/chimera/src/\",\":@crytic/properties/=lib/properties/\",\":@deprecated/=deprecated/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pendle/=lib/pendle-core-v2-public/\",\":@safe-utils/=lib/safe-utils/src/\",\":@script/=script/\",\":@solady/=lib/solady/\",\":@solidity-http/=lib/solidity-http/src/\",\":@solmate/=lib/solmate/\",\":@src/=src/\",\":@tenderly-utils/=lib/tenderly-utils/src/\",\":@test/=test/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ERC-7540-Reference/=lib/ERC-7540-Reference/src/\",\":ERC4626/=lib/properties/lib/ERC4626/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":chainlink/=lib/chainlink/contracts/\",\":chimera/=lib/chimera/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\",\":properties/=lib/properties/contracts/\",\":safe-smart-account/=lib/safe-utils/lib/safe-smart-account/\",\":safe-utils/=lib/safe-utils/src/\",\":solady/=lib/solady/\",\":solidity-http/=lib/solidity-http/src/\",\":solidity-stringutils/=lib/solidity-http/lib/solidity-stringutils/\",\":solmate/auth/=lib/solmate/src/auth/\",\":solmate/mixins/=lib/solmate/src/tokens/\",\":solmate/tokens/=lib/solmate/src/tokens/\",\":solmate/utils/=lib/solmate/src/utils/\",\":tenderly-utils/=lib/tenderly-utils/src/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"lib/aave-v3-core/contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa\",\"dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf\"]},\"lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol\":{\"keccak256\":\"0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0\",\"dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7\"]},\"lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol\":{\"keccak256\":\"0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87\",\"dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3\"]},\"lib/aave-v3-core/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d\",\"dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM\"]},\"lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06\",\"dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx\"]},\"lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23\",\"dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da\",\"dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x7b6690c21e94a45b825631a12581b40a753ea827de5ac9127a6b5833411317f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00045f2c18d7866618c65819fe180a9a9dab25c1974fab35069bdac9cf624b6b\",\"dweb:/ipfs/QmYk62QRqGHJ3rjqfEtbfEGFHWsenv5tNMbeMfq5HkTP44\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5d0c69ef32eae686acc22acfb1a54df9c91356e69adec593aa69eba83ae8f6f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7a9fca2cb3d802c4f8a2d0fda84ccc7f880264885801c7df08373501dd22282\",\"dweb:/ipfs/QmdtM2Loz9NzNTuQ3RXNQCPBjoPUJw35Ukpt1MSM9XH3cD\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260\",\"dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df\",\"dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E\"]},\"src/collections/interfaces/ICollectionsManager.sol\":{\"keccak256\":\"0xf36eb32c1cf333628338639e1ffb9cad9cf8996a859a352af8cb6b2b781725a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77af02b46b40c96119a68de47edb7fb86bb040bfef2f0cd9d3b430bd10d34ff9\",\"dweb:/ipfs/QmXgH3jDkSK7EGjSQbgYGq1a8ozneEs4gBfvvoQxGVABHZ\"]},\"src/collections/interfaces/ICollectionsManagerCuratorActions.sol\":{\"keccak256\":\"0x6708ad93239594105c63f7da068a6ec32ce1758b997d797ac9a33ad0f4a0d201\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdbb974f4a3de9d48c5f464ffc8dff0b4fab51b4eb0095084df035eddc46e645\",\"dweb:/ipfs/Qma52cMxmWqBrve2ZWhoPfTbkHriAWLtr3rfJrYe4hk9GL\"]},\"src/collections/interfaces/ICollectionsManagerUserActions.sol\":{\"keccak256\":\"0x552b44f8d5735c65ecf42884d51257087bbfcd2c3feccf1f63fa5adc53984ff8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e4ec097f1e67e2c36117eaff4bb5de858a6f08c7dccacf25453df673eccde9\",\"dweb:/ipfs/Qmdmw2dJzKFdBmATxhtCAsLqHN7igEmVQGTBuonRXHm5K9\"]},\"src/collections/interfaces/ICollectionsManagerView.sol\":{\"keccak256\":\"0x3122f5f96caf4125f5841e2c38339ef3589d956c44bdf3028a0f083fc8719dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d6fe2a9b4f75c2a0bab02559c1e298f75154a91706595a3988f72ae893c09d8\",\"dweb:/ipfs/QmaKAc7aR4nvwtbBy5U6kxDF9zHeisEYVfeHxzMcuLy6py\"]},\"src/factory/interfaces/ISizeFactory.sol\":{\"keccak256\":\"0x0c7ee30a3e26cab285f78810a3684c8d91ea4d3c839f023b839144ec69d58780\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6f58c02477567655a64a0106153a70fd8e20a42c572554c2d8768ec93ee74a5\",\"dweb:/ipfs/QmUZ9aNgjWMVKBk5B4LRwJmSUWZNpDcBsEw3AhYa1UffUV\"]},\"src/factory/interfaces/ISizeFactoryOffchainGetters.sol\":{\"keccak256\":\"0x01193f70622dd06fa303e488c255bf9b86f4fd2150ded107df75eabb1c200403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81f74325395f6f3c01d55991aa3e8b2e26c3bd8d80b3e061f3c3d90bea81603d\",\"dweb:/ipfs/QmWKW2CQdeYgK1x5L6i9k43wJVYxu9Qy6QUJD5aFoykQ8p\"]},\"src/factory/interfaces/ISizeFactoryV1_7.sol\":{\"keccak256\":\"0x88d8fee7f821de312741e741fcd2867e55905159002ba4d8ced827778bebde29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d42df9dfc39ad1b6812bb10c74d1398d3882e207e9611cb2e857187d7c79e09a\",\"dweb:/ipfs/QmTcbh5pZjV2S6zj5x3nzvRJBBsyy5DuNLRD4Dvg5Ydydq\"]},\"src/factory/interfaces/ISizeFactoryV1_8.sol\":{\"keccak256\":\"0x091167e33623c408b45abff264938404b8faf35c81601f8946e7b97ba1f50a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://222eaf2047375c90123f02884ca4cf84c0b354389da4c607abdbefa325bc343e\",\"dweb:/ipfs/QmWmMeKpSEeMjEBBaTSPAPWVZJeqPyRutk2tj7GD6ZXwS4\"]},\"src/factory/libraries/Authorization.sol\":{\"keccak256\":\"0xd0759b2d19d649ede38497e36b8569cc49518a8f70927476e0713971306ab304\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79f301289c5908529bcaddcf4e1c18da9625460315462d9eca21192e1d26468d\",\"dweb:/ipfs/QmZZSLLP9hxdAVAqDhrqcdjPFL6evNKMvxEzcWUCfJmAn5\"]},\"src/helpers/ReentrancyGuardUpgradeableWithViewModifier.sol\":{\"keccak256\":\"0x44e0afa8b79734db3eb0278c752f0c74daf37e21b342ef7963ad28cfa6eddef6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c08003c5aaa58665815eba32b562db37d98eee0df1478bde70d3cdea490d02d\",\"dweb:/ipfs/QmQTPFYN7RMHRtBW2StZQX6c1QmK9gZH3msxsDo1makpBz\"]},\"src/market/Size.sol\":{\"keccak256\":\"0xc0514933bc7e3bc946eb49a6437c31496bd3efc782d33f0facaaa29d52717e26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7267656c00c12b7ebc01eebdacb1983deebac408f9d3823622a41e4d73ba630a\",\"dweb:/ipfs/QmdbVGrRnxLwHMuwWcTARYrDsaYkYiZWN1UX3sZG3KXBfo\"]},\"src/market/SizeStorage.sol\":{\"keccak256\":\"0xcbb653a667ff847b25dedcdefd77ceeb73539e58f1d3a3c5e0235f4f7027d7b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de6d2642e9cfcf23e2161d90c9a446f38dad849ed5405a52b6e829a63b45caf9\",\"dweb:/ipfs/QmRY4FeZ7kUQLUx9DYX9vCWmZzAzD95keSCeVZUf7tALHi\"]},\"src/market/SizeView.sol\":{\"keccak256\":\"0x9378ba3acccaa95f2c22b65407770d7b94ec002d7d6c52f6036abc6adf424c22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02de9ce70f3d3c3087aaac619e4469c4d40a352558ca8d52c12626be922e633e\",\"dweb:/ipfs/QmNfSrAfBtSZA93McLSiUXXvnp2yV8NEMsf88DfiQrxWuJ\"]},\"src/market/SizeViewData.sol\":{\"keccak256\":\"0x4fbd20e43987c211e0f8ab6ce467b4d017092a881ad544aa44a5d2f1d555df2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04f4ada02248e1224356a5e1b4fce02c60e4f14c414052a09363e9803317eacf\",\"dweb:/ipfs/QmZ69LGdEoZWajqVWiHrDfctYmArkt9ZWMYARwX6htQQ7x\"]},\"src/market/interfaces/IMulticall.sol\":{\"keccak256\":\"0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989\",\"dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R\"]},\"src/market/interfaces/ISize.sol\":{\"keccak256\":\"0x1e6e27921076b80ac11d39898f986d4ba68efc43b1a56ce7a47ad620774beb0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c9200b7136891144e42186773d0f967d09ac4ef96104f679530621791d8282\",\"dweb:/ipfs/QmVeU8h4rUykppSz6rNjmnotPRwBUSVphNnkfQAwqkV7yT\"]},\"src/market/interfaces/ISizeAdmin.sol\":{\"keccak256\":\"0x1f2fda9cf43a960e920186ce0414d596f0c73e20e0ab262a047ffcab5b8a4a9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://092faa4adc6268f096580faebcf426c87def65e02525abfecd04aa1acfceaa88\",\"dweb:/ipfs/QmWtjocrjvMRqKH47XiP7GKPRPKPCX3ApnpgpFjt3X9eRf\"]},\"src/market/interfaces/ISizeView.sol\":{\"keccak256\":\"0xf0df7ab138a3bbe12ae09fc44d9507ab66865e30a2ddcf4734cc3f373bdc314b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03922dee9f2f895d627a74162752b40df160d1aefa766067583cff055ce8b793\",\"dweb:/ipfs/QmTfCg5Bh4y4vwGEv5smTWjPrsrsBLizJ3xSbZqejgvW7Q\"]},\"src/market/interfaces/IWETH.sol\":{\"keccak256\":\"0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e\",\"dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t\"]},\"src/market/interfaces/v1.7/ISizeV1_7.sol\":{\"keccak256\":\"0xf6dcf99539326bae7e1465eac7857f1a62d1d148d065510acea1a3f9a7e9d572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87776d27879eb9e715f0b56ce5deb97f726b8018df831f2538563c3a8aa743c9\",\"dweb:/ipfs/QmdUwAo4orzYFXSogwjuZqnXGyrA3bZhpMVV4962E8ciSR\"]},\"src/market/interfaces/v1.8/ISizeV1_8.sol\":{\"keccak256\":\"0x539e339de13cfb2778f0b88e0962e72a0953f7ed41306815ba6da72f308ecbff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e5b98cdd5bc9107f4e890fd0c5ea6bfde4b5ffa803c72390a13579f4f81b114\",\"dweb:/ipfs/QmSQ7jXfUbhoScWLPwCkSaerqHxeBWmz6H1VVKtR8rYHhP\"]},\"src/market/interfaces/v1.8/ISizeViewV1_8.sol\":{\"keccak256\":\"0xd44b700b471fcdd6dab74676eca4a3d2ab7435c478cdc83c09ff3426c3eec9b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://440c6ab93d7bf25b47885feb522e0f71963a2bb3247ba820c0f5ce6c3274feb7\",\"dweb:/ipfs/QmV4cAiAb16rMZeKWqtDe69Z9NKWHcuxvGJ6pqxbBa9GUu\"]},\"src/market/libraries/AccountingLibrary.sol\":{\"keccak256\":\"0x7951928ccae855e9fabc380ad88075fee1822e00dadeeb969c5add0e7b1e9a53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b895fa756fd379def6e9cb674a9618beeb7e7cc2f9708816cbafe36a56acd769\",\"dweb:/ipfs/QmbAg4HReEqmoJ23JrJpy7Rp2cgZA87VUgMrBFW3yr6Cp8\"]},\"src/market/libraries/Errors.sol\":{\"keccak256\":\"0xed73df3f39ba612c526ea09234b730cfdfa5ed399b279bb738fbfd5696b38bd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c0c78ee291a63f618a99ef99dfd2e6d2ff973f38a2b6fb92001a0a9c6329702\",\"dweb:/ipfs/QmQfuhKVMKebzmFYAN6EEDCWr7PpG884Xbqc6VL5XwVmuM\"]},\"src/market/libraries/Events.sol\":{\"keccak256\":\"0xce181000a07927aa14c59bc6d514b9829386610f4f6e8e987e7b577301707d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfa93b9e1ea3b94e298657b38c8ded2f180296a8054d9593b37695644b075908\",\"dweb:/ipfs/QmZ2kyGivGEo5smxeHZ4BZsFNEuy2WanW6PFbJaLrFcFMo\"]},\"src/market/libraries/LoanLibrary.sol\":{\"keccak256\":\"0x40dcae0ebbfff42282a5ceb00b5698c882242e028740099bc5828a08fa7e77e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb877878b973bb6e8913cc3c4f4948ca7a43d0036dc243862cc8de7a3e92384\",\"dweb:/ipfs/QmYt8p1H7gAyTExvnKV1Anhfnjk5o774yi4ibHGUxByExv\"]},\"src/market/libraries/Math.sol\":{\"keccak256\":\"0xa270b1631b8b469d0e4bfddfaa0bf87ee285fa7532e1ed31f28674356fce0e65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f0d027e9af0e81111d0b573c836502f94f5f0e5a3b5c0fc8ff025060e78bb53\",\"dweb:/ipfs/QmbS7Wnub3nmeo7yfeQht68MzWwMrQ3Ef7bUtiNtDMtXDx\"]},\"src/market/libraries/Multicall.sol\":{\"keccak256\":\"0xaf98fced0f94fce8f0c27d1f5160019eeb17e3eb67316ca245f52c39df257fa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://852c668a4f10a61c2ceba43aac27993869ae591b8479c88d5c71bd4760cab1b6\",\"dweb:/ipfs/Qmer5YE99KsLeSKXf1QLxeDcUcLNgYkjFRwHzvBuG7JtUp\"]},\"src/market/libraries/OfferLibrary.sol\":{\"keccak256\":\"0x55b32a6221d79312c857fa936342e229a74e440197e87603dfda8c57335c9401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9b3e4a528f8360c5ca36d66cfe1d60749613ccb722d1f7af91398bfbf397b9a\",\"dweb:/ipfs/QmRzh239xa5YHMrEWtAt4oCbzFdwNDqDgtz8EGZGiFqZW3\"]},\"src/market/libraries/RiskLibrary.sol\":{\"keccak256\":\"0xc639312f28fb460000aff9c0869ffb2c3bdaab5e6d5aff6895df6bc2d3461b7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eb18a5f3fc5ecacc2a166e0f5c456246bcff32284d29fa14d819f7616c7718d\",\"dweb:/ipfs/QmR9aSvd6G1qmqTKvT21fHk8EVeKGjKysn34qpCFTXhKXz\"]},\"src/market/libraries/YieldCurveLibrary.sol\":{\"keccak256\":\"0x8d4b1f45d67387169c3b38cc034305eba91ad306dac7021d4658e3b8bbc9a135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://438376203571e01cbb26ea58c192d3036a1e623c0c5897c52aeafaa90e281cd3\",\"dweb:/ipfs/QmcRNJKsudM9bZvCPCSEQWxPHvVEfQD1u2MPf8S33fh3o3\"]},\"src/market/libraries/actions/BuyCreditLimit.sol\":{\"keccak256\":\"0xccb77182ce62b7ea147ee65ad7e32076f9e565a2605c18842087103e471f79f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571a3265ef2664d9fea268e229af1bc0e430f458efe6898a03532de799d959ef\",\"dweb:/ipfs/QmSA1hphKNeRdqKtKpbfM3yof9TTd13r9X5ei7jNiuhcwQ\"]},\"src/market/libraries/actions/BuyCreditMarket.sol\":{\"keccak256\":\"0x8bc8b7c8c274648d666d0e83e3605f1cbc02b63f283fb72485e32cb2c9fdb1d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfd2009d13f1cd03d1eff41195c66617b51390d65d7c805c0bd3ef288b9a5925\",\"dweb:/ipfs/QmczwzFqX7vugWArcsLvjzGzCkBsRyyrv5s8nUkq2iAnHx\"]},\"src/market/libraries/actions/Claim.sol\":{\"keccak256\":\"0x0145b5a2bef3cb5b6348c0826a020eaaf8db1880bb7aa2804bf03cc16eaf2adf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de61cb5c77a1be1cc00990f8b21e1ad41005c811309244acb314d3e3f2324427\",\"dweb:/ipfs/QmVJJ8RgFXtNg3KLcevf99ZyhXQQtAH32i7MZXM1VLrbyd\"]},\"src/market/libraries/actions/Compensate.sol\":{\"keccak256\":\"0x5fa7ce8b74eeea09d12b78e3b31dbc7b37fca58b235299ad5d9f8e99ea400719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fbeff16ba76d1e3735f4d067ba16da7b0f35176ff9ea501a99f94063936bc5d\",\"dweb:/ipfs/QmYyogfmQmrpEksBc9uSjVQvYAWdaq31pJ3j6aAnc8D1rA\"]},\"src/market/libraries/actions/Deposit.sol\":{\"keccak256\":\"0x75e2039804c341b06705e712a8403350bf3860207178872eba02b12acc1a55e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76f871e1a3b6e9accffffac39be2a51d90cb16028511f0f54597bdb8e8c2c6fe\",\"dweb:/ipfs/QmNzQiqWUiVnqpL9EhyG9tbF36nksZJ3YeT3hNioQLCpwG\"]},\"src/market/libraries/actions/Initialize.sol\":{\"keccak256\":\"0xbad2d5f92aaeee28a87c1feda397f787cf1a2f8432bf05371f79b2309e9858f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c6959ee090add484fe99aa21bb8e879c36a97a1d00b4d49dfade775c4813a63\",\"dweb:/ipfs/QmZycV28jdCXWHy7QV7uqtqxaiReZaTYtvvgECuHb3gwJQ\"]},\"src/market/libraries/actions/Liquidate.sol\":{\"keccak256\":\"0x20e7ccfb443548a7325a592034bcfb6f474c313f9cf0453fafc45777a280d85f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec7a9075a20c68b7ca70c6b283692724d2e42faf0596187bd1075d8d7b6c03b1\",\"dweb:/ipfs/QmbHMZ2EmbhY4w51vWUkuEvr2r8XEkJkYvM56Tk5h1yr9G\"]},\"src/market/libraries/actions/LiquidateWithReplacement.sol\":{\"keccak256\":\"0xbf8028638ffc6a29e6b93a8f795ddbdfb5cb119c95c8c7bc0c446b3681514fca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f4db7ddad5d0e210fd133073ec80d63bdc7a6026ff74744fdc4aa83918b1230\",\"dweb:/ipfs/QmXSYimeiJRTx4sdBKZsPdY4HSDhK7gbsjB3bm596j7oT5\"]},\"src/market/libraries/actions/PartialRepay.sol\":{\"keccak256\":\"0xcca168dab87cf6c5a383340443041194ea3ca272aa48cdbe7ffcb263be767900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd4a81eeab2fbb3ac34e21fdfe3acf4cbae5802984ddd0eabcc4b5dcf5b80315\",\"dweb:/ipfs/QmVZ9wKB1vjGghXfCE3AFNGTiGLekqbLEELSdJ26eeXy3F\"]},\"src/market/libraries/actions/Repay.sol\":{\"keccak256\":\"0x8ce3d2f0cf14efb0489f509f244c05d8045ea5eecffceb2d932321d4f62a5474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://773030fd26b7cd147d3c1c745a858e541dee98331c362de19e7c7f021be7c44e\",\"dweb:/ipfs/QmZ8Du3qDSdpM64JCD6PqfqQ4DtpcfaVX6ujiCEJhgUhX5\"]},\"src/market/libraries/actions/SelfLiquidate.sol\":{\"keccak256\":\"0x2d71cff942efc93fb7aa3a0a636e44562e0fa44ba4d503f323c6d08e7fdd8af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdc43c74a42cffbf3844939df1d21a2b392ad3596ece8f1e9a6ebe08c2ec64be\",\"dweb:/ipfs/QmRUScCkvE4EADEUEvdwrsnzfLsq7xjFt1xsSZ4PZfs6J7\"]},\"src/market/libraries/actions/SellCreditLimit.sol\":{\"keccak256\":\"0xe8fe9ab69faccffa8539167973d13c5afe04ca8358316a092540171d084654b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c626cb1ad9347b0eabd162f590c61175cdc687958bc6684843201713c5efa89\",\"dweb:/ipfs/QmNqZc3Zh2Nvj6exvG89XShBY4WtBJSh6iKWr7gZB8sQ3k\"]},\"src/market/libraries/actions/SellCreditMarket.sol\":{\"keccak256\":\"0xf4bd799bb7cf51c565d530ff42cebf0a3b1d2b01a783f484c3ffda112eca962d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a7d0d213d6c00b09f7508887541968939a960a86160f6812143bff9c07ecf86\",\"dweb:/ipfs/QmRafSq5sVAsmpttMGWM1FJJz9Gg1bTrVthP6k2Jppe9gr\"]},\"src/market/libraries/actions/SetCopyLimitOrderConfigs.sol\":{\"keccak256\":\"0x8f6f00418e9f62d99e316097724d50ae10369fc9049b1c5caff7d219410cc79e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36222343f8752b105bd7414e53281f30cdd1aa3ca45539dcfb5fe22d6eb5fdde\",\"dweb:/ipfs/QmRCpmVtGTXnRUUR5wPGjW1oSPg8PRcP39Sigfyt4YkXyG\"]},\"src/market/libraries/actions/SetUserConfiguration.sol\":{\"keccak256\":\"0x914026fea966b75688fe25a3ac2782a426134ebceb3f1b1719e650f2317dd04e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb5a25ca819ecf4137af74c23829aaf2d784b868e710f4b563378481426dd4a\",\"dweb:/ipfs/QmUTdYB2zr3gDaJ9Qj8ma8RypzdKDAeKWj1UwCS8MmnRrP\"]},\"src/market/libraries/actions/SetVault.sol\":{\"keccak256\":\"0xa9fd4994702f7dc36369fbfb3f7a3ed767b36619bf28471d7d7098aabca62dab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7eb78f54189a5ab0247264303eea0e576d9aa8a1ea3d81e3e4aefe1baef13a0\",\"dweb:/ipfs/Qmf7DVjjGGRDC4UY1tzLztwG6pEsutWGxiZ2ve1czCE93S\"]},\"src/market/libraries/actions/UpdateConfig.sol\":{\"keccak256\":\"0x040b1b2b4dfb446b50bce809c070a3b977e7c614f2bfdf632b10f9c89ec8d80e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://067a98624ca328a30debcd8d09adb675ad3ebeafe0829269ca5f42574babcca3\",\"dweb:/ipfs/QmU3K7oJnmknBtCyVNR6d2fLsUFCPvozr1DvY9W42cw1Eu\"]},\"src/market/libraries/actions/Withdraw.sol\":{\"keccak256\":\"0x1c0692507acd9052c4831b4a78fd6a7d54b7ab9743bf49e170441abdd5694247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1de43235c6ac35a2a752173ab67346feb750948d2091efd20053f051d7baa9\",\"dweb:/ipfs/QmXtbxAzykvnBSRuDWSFYybL6V7pqGwhjCGhkKQhSeb59i\"]},\"src/market/token/NonTransferrableRebasingTokenVault.sol\":{\"keccak256\":\"0x9270ebc18028e353a18b58b3cc51c90529d18c7ac04b579e84df31f48ad883bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bffde31cb27e6f25019588e4807879de70b3cecb934c03b92a5cd663da153da4\",\"dweb:/ipfs/QmXHCi4Ggucp2Q4EAhFgrwi616WB993Ha82uw9bzyUM5Na\"]},\"src/market/token/NonTransferrableToken.sol\":{\"keccak256\":\"0xf82118604ddbcd5d9ff708d739396e993d9621cff7b07f22a519141ca39a9e17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f371fb37a2ac76630302b1284d62e8657f038b504ce9884723574c2a3de32ec\",\"dweb:/ipfs/QmRsjmBirftC8Jih4jBG2BoJmpe4RRAAsEwsmtLjWicTVf\"]},\"src/market/token/adapters/IAaveAdapter.sol\":{\"keccak256\":\"0xd88333fa5a565a78d2fbdf408f2ff89b69f900bd13ae84e1b102f1a1527c1777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1890c9632e9fa607c74524da6049080fe42bde8fdc6117136e12e2277dbac02e\",\"dweb:/ipfs/QmSD6udpnnRsXoqk6yHxjKpDxiQgmoxQTj3CoXrP64bxKd\"]},\"src/market/token/adapters/IAdapter.sol\":{\"keccak256\":\"0x579f476cae67f70982f6d158f90490ccacb37c88d4c9e4318ccee9be0d3ff692\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80e9fc7d1fa0dfa85846e80a7ba766c68a39310c604d326f547f9278c2943574\",\"dweb:/ipfs/QmS1fNU7hrH21a2ZusfxMqaQvtzAgbdJkcbfw8ps3QB5oQ\"]},\"src/oracle/IPriceFeed.sol\":{\"keccak256\":\"0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48\",\"dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ\"]},\"src/oracle/adapters/ChainlinkPriceFeed.sol\":{\"keccak256\":\"0x71a4ccb7d9469f4d7a914a81c754b1278152a387f8154e0f9793e0e3d010a599\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d953653f6481b344d0d00a677a8301f3006a50c3b90744c39cd3eda6f508818b\",\"dweb:/ipfs/QmYR1RvdMboMpH9ykJN5WwuC3AabSvPS2JA4t4afxa7gyh\"]},\"src/oracle/adapters/ChainlinkSequencerUptimeFeed.sol\":{\"keccak256\":\"0x3d200d7fcc7c457a201f2bb32a0b68ea13b2b697cb300bbd587828bff5ffe8b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d72923e346e73eb0d42d055437dc6df059c3a8f27b08ff5aacd7cf7fdf90eec5\",\"dweb:/ipfs/QmPYENtSCwseMxYtQeKAkVe8DuCJYzRGpFRxDgw85xf2g8\"]},\"src/oracle/adapters/UniswapV3PriceFeed.sol\":{\"keccak256\":\"0x84027f9673163df8f7dcbd7c828cf5bada6a9c7de1986d3821ec75004a11f639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0caf13ef11f4ad681f395ee48145d72fcd3a1eae5b439efb132be9cccd8f1243\",\"dweb:/ipfs/QmdrnR1auzKaQhZ7AqWRKHnajw1Y6oLmdNFYJzKLzb5E72\"]},\"src/oracle/v1.5.1/PriceFeed.sol\":{\"keccak256\":\"0x36473f98f23968eaab386e44c1404652c7ef88c09db9772ab3195d8305829762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5db471c144f3a43e9e07391890e7b29e39b64ae3fb0e73b66dd313801b03542a\",\"dweb:/ipfs/Qmf5GMB6SdKNCUPCbV4nYmxUjg6z3iKiweYU2ajY9BrGbC\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "dueDate", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "maxDueDate",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "DUE_DATE_GREATER_THAN_MAX_DUE_DATE"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "EnforcedPause" },
        { "inputs": [], "type": "error", "name": "ExpectedPause" },
        { "inputs": [], "type": "error", "name": "FailedCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "INVALID_OFFER"
        },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "uint256",
              "name": "crBefore",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "crAfter", "type": "uint256" }
          ],
          "type": "error",
          "name": "MUST_IMPROVE_COLLATERAL_RATIO"
        },
        { "inputs": [], "type": "error", "name": "NULL_TENOR" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "oldBorrowRate",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "newBorrowRate",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VariablePoolBorrowRateUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BuyCreditLimitParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxDueDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct YieldCurve",
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256[]",
                          "name": "tenors",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "int256[]",
                          "name": "aprs",
                          "type": "int256[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "marketRateMultipliers",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimitOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "collectionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BuyCreditMarketParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "borrower",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "exactAmountIn",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collectionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "rateProvider",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarketOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct ClaimParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralRatio",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionToCompensateId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensate"
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CompensateParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "creditPositionWithDebtToRepayId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionToCompensateId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensateOnBehalfOf"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "data",
          "outputs": [
            {
              "internalType": "struct DataView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nextDebtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextCreditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableRebasingTokenVault",
                  "name": "borrowTokenVault",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "debtToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IPool",
                  "name": "variablePool",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "debtTokenAmountToCollateralTokenAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositOnBehalfOfParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DepositParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositOnBehalfOf"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeConfig",
          "outputs": [
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" },
            {
              "internalType": "uint256",
              "name": "collectionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rateProvider",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "collectionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBuyCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCreditPosition",
          "outputs": [
            {
              "internalType": "struct CreditPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                { "internalType": "bool", "name": "forSale", "type": "bool" },
                {
                  "internalType": "uint256",
                  "name": "credit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPosition",
          "outputs": [
            {
              "internalType": "struct DebtPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "futureValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidityIndexAtRepayment",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" },
            {
              "internalType": "uint256",
              "name": "collectionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rateProvider",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionsCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "collectionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSellCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserDefinedBorrowOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserDefinedCopyBorrowOfferConfig",
          "outputs": [
            {
              "internalType": "struct CopyLimitOrderConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "offsetAPR",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserDefinedCopyLoanOfferConfig",
          "outputs": [
            {
              "internalType": "struct CopyLimitOrderConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "offsetAPR",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "lender", "type": "address" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserDefinedLoanOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserView",
          "outputs": [
            {
              "internalType": "struct UserView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct User",
                  "name": "user",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct LimitOrder",
                      "name": "loanOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct LimitOrder",
                      "name": "borrowOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralTokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowTokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtBalance",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "f",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "r",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct InitializeOracleParams",
              "name": "o",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            },
            {
              "internalType": "struct InitializeDataParams",
              "name": "d",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "weth",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "variablePool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "borrowTokenVault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sizeFactory",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionLiquidatable",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateWithReplacementParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collectionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidateWithReplacement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidatorProfitBorrowToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes[]", "name": "_data", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            { "internalType": "bytes[]", "name": "results", "type": "bytes[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "struct InitializeOracleParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PartialRepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "partialRepay"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reinitialize"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct RepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "riskConfig",
          "outputs": [
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidate"
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SelfLiquidateParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidateOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SellCreditLimitParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxDueDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct YieldCurve",
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256[]",
                          "name": "tenors",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "int256[]",
                          "name": "aprs",
                          "type": "int256[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "marketRateMultipliers",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimitOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "collectionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "rateProvider",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SellCreditMarketParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "exactAmountIn",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collectionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "rateProvider",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarketOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetCopyLimitOrderConfigsParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CopyLimitOrderConfig",
                  "name": "copyLoanOfferConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "struct CopyLimitOrderConfig",
                  "name": "copyBorrowOfferConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setCopyLimitOrderConfigs"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetCopyLimitOrderConfigsOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SetCopyLimitOrderConfigsParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct CopyLimitOrderConfig",
                      "name": "copyLoanOfferConfig",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "minTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "int256",
                          "name": "offsetAPR",
                          "type": "int256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct CopyLimitOrderConfig",
                      "name": "copyBorrowOfferConfig",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "minTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "int256",
                          "name": "offsetAPR",
                          "type": "int256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setCopyLimitOrderConfigsOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "openingLimitBorrowCR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "creditPositionIdsForSale",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "creditPositionIds",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfiguration"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SetUserConfigurationParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "creditPositionIdsForSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "creditPositionIds",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfigurationOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVariablePoolBorrowRate"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetVaultParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "forfeitOldShares",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setVault"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetVaultOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SetVaultParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forfeitOldShares",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setVaultOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "struct UpdateConfigParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "string", "name": "key", "type": "string" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct WithdrawParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawOnBehalfOf"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)"
            }
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": {
            "params": {
              "params": "BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            }
          },
          "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))": {
            "details": "When emitting the `SwapData` event, the recipient is set as the `lender` param, which is inconsistent with the `BuyCreditMarket` event emitted just before,        where `lender` is passed as `onBehalfOf`. The reason is that `SwapData` emits only debt/credit recipients, while `BuyCreditMarket` emits both and also `onBehalfOf`."
          },
          "claim((uint256))": {
            "details": "Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before",
            "params": {
              "params": "ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim"
            }
          },
          "collateralRatio(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The collateral ratio of the user" }
          },
          "compensate((uint256,uint256,uint256))": {
            "params": {
              "params": "CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)"
            }
          },
          "constructor": { "custom:oz-upgrades-unsafe-allow": "constructor" },
          "data()": { "returns": { "_0": "The data view" } },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "params": { "amount": "The amount of debt tokens" },
            "returns": { "_0": "The equivalent amount of collateral tokens" }
          },
          "deposit((address,uint256,address))": {
            "details": "The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens",
            "params": {
              "params": "DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit"
            }
          },
          "feeConfig()": {
            "returns": { "_0": "The fee configuration parameters" }
          },
          "getBorrowOfferAPR(address,uint256,address,uint256)": {
            "params": {
              "collectionId": "The ID of the collection",
              "rateProvider": "The address of the rate provider",
              "tenor": "The tenor of the loan",
              "user": "The address of the user"
            },
            "returns": { "_0": "apr The APR" }
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": {
            "params": {
              "params": "The input parameters for buying credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for buying credit as a market order"
            }
          },
          "getCreditPosition(uint256)": {
            "params": { "creditPositionId": "The ID of the credit position" },
            "returns": {
              "_0": "The CreditPosition struct containing the details of the credit position"
            }
          },
          "getDebtPosition(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "The DebtPosition struct containing the details of the debt position"
            }
          },
          "getLoanOfferAPR(address,uint256,address,uint256)": {
            "params": {
              "collectionId": "The ID of the collection",
              "rateProvider": "The address of the rate provider",
              "tenor": "The tenor of the loan",
              "user": "The address of the user"
            },
            "returns": { "_0": "apr The APR" }
          },
          "getPositionsCount()": {
            "returns": {
              "_0": "The count of debt positions and credit positions"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": {
            "params": {
              "params": "The input parameters for selling credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for selling credit as a market order"
            }
          },
          "getUserDefinedBorrowOfferAPR(address,uint256)": {
            "params": {
              "borrower": "The address of the borrower",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "apr The APR" }
          },
          "getUserDefinedCopyBorrowOfferConfig(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user copy borrow offer" }
          },
          "getUserDefinedCopyLoanOfferConfig(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user copy loan offer" }
          },
          "getUserDefinedLoanOfferAPR(address,uint256)": {
            "params": {
              "lender": "The address of the lender",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "apr The APR" }
          },
          "getUserView(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user view" }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isDebtPositionLiquidatable(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "True if the debt position is liquidatable, false otherwise"
            }
          },
          "liquidate((uint256,uint256,uint256))": {
            "params": {
              "params": "LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)"
            },
            "returns": {
              "liquidatorProfitCollateralToken": "The amount of collateral tokens the the fee recipient received from the liquidation"
            }
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256,uint256,address))": {
            "details": "This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned",
            "params": {
              "params": "LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            },
            "returns": {
              "liquidatorProfitBorrowToken": "The amount of borrow tokens liquidator received from the liquidation",
              "liquidatorProfitCollateralToken": "The amount of collateral tokens liquidator received from the liquidation"
            }
          },
          "multicall(bytes[])": {
            "details": "This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.",
            "params": {
              "data": "An array of bytes encoded function calls to be executed in sequence."
            },
            "returns": {
              "results": "An array of bytes representing the return data from each function call executed."
            }
          },
          "oracle()": { "returns": { "_0": "The oracle parameters" } },
          "partialRepay((uint256,uint256,address))": {
            "details": "The partial repay amount should be less than the debt position future value",
            "params": {
              "params": "PartialRepayParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position with debt to repay     - uint256 amount: The amount of tokens to repay (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - address borrower: The address of the borrower"
            }
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "reinitialize()": { "details": "Initializes the reentrancy guard" },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "repay((uint256,address))": {
            "details": "The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim",
            "params": {
              "params": "RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "riskConfig()": {
            "returns": { "_0": "The risk configuration parameters" }
          },
          "selfLiquidate((uint256))": {
            "details": "The user is prevented to self liquidate if a regular liquidation would be profitable",
            "params": {
              "params": "SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate"
            }
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)"
            }
          },
          "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": {
            "params": {
              "params": "SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)     - uint256 collectionId: The collection id. If collectionId is RESERVED_ID, selects the user-defined yield curve     - address rateProvider: The rate provider. If collectionId is RESERVED_ID, selects the user-defined yield curve"
            }
          },
          "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))": {
            "details": "When emitting the `SwapData` event, the `recipient` parameter is left out. The reason is that `SwapData` emits only debt/credit recipients,      while `SellCreditMarket` emits both and also the cash recipient."
          },
          "setCopyLimitOrderConfigs(((uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "details": "Does not erase the user's loan offer and borrow offer      To specify \"no copy\", pass a null CopyLimitOrderConfig except for offsetAPR, since a completely null CopyLimitOrderConfig        will default to the curator-defined CopyLimitOrderConfig for that market.",
            "params": {
              "params": "SetCopyLimitOrderConfigsParams struct containing the following fields:     - CopyLimitOrderConfig copyLoanOfferConfig: The loan offer copy parameters       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied loan offer     - CopyLimitOrderConfig copyBorrowOfferConfig: The borrow offer copy parameters       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied borrow offer"
            }
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "details": "By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.      Note: this function was updated in v1.8 to accept a `vault` parameter.        Although this function is market-specific, it will change a NonTransferrableRebasingTokenVault state that will be reflected on all markets.",
            "params": {
              "params": "SetUserConfigurationParams struct containing the following fields:     - address vault: The address of the user vault     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions"
            }
          },
          "setVariablePoolBorrowRate(uint128)": {
            "details": "The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero",
            "params": { "borrowRate": "The new borrow rate" }
          },
          "setVault((address,bool))": {
            "params": {
              "params": "SetVaultParams struct containing the following fields:     - address vault: The address of the vault to set     - bool forfeitOldShares: Whether to forfeit old shares. WARNING: This will reset the user's balance to 0."
            }
          },
          "setVaultOnBehalfOf(((address,bool),address))": {
            "params": {
              "params": "SetVaultOnBehalfOfParams struct containing the following fields:     - address onBehalfOf: The address of the user to set the vault for     - address vault: The address of the vault to set     - bool forfeitOldShares: Whether to forfeit old shares. WARNING: This will reset the user's balance to 0."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "updateConfig((string,uint256))": {
            "details": "For `address` parameters, the `value` is converted to `uint160` and then to `address`",
            "params": {
              "params": "UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update"
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "version()": {
            "returns": { "_0": "The version of the Size protocol" }
          },
          "withdraw((address,uint256,address))": {
            "details": "This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens",
            "params": {
              "params": "WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new loan offer in the orderbook"
          },
          "buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": {
            "notice": "Same as `buyCreditLimit` but `onBehalfOf`"
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": {
            "notice": "Obtains credit via lending or buying existing credit"
          },
          "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))": {
            "notice": "Same as `buyCreditMarket` but `onBehalfOf`"
          },
          "claim((uint256))": {
            "notice": "Claim the repayment of a loan with accrued interest from the Variable Pool"
          },
          "collateralRatio(address)": {
            "notice": "Get the collateral ratio of a user"
          },
          "compensateOnBehalfOf(((uint256,uint256,uint256),address))": {
            "notice": "Same as `compensate` but `onBehalfOf`"
          },
          "data()": { "notice": "Get the data view" },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "notice": "Convert debt token amount to collateral token amount"
          },
          "deposit((address,uint256,address))": {
            "notice": "Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Aave Variable Pool or User Vault         Collateral tokens are deposited into the Size contract"
          },
          "depositOnBehalfOf(((address,uint256,address),address))": {
            "notice": "Same as `deposit` but `onBehalfOf`"
          },
          "feeConfig()": { "notice": "Get the fee configuration parameters" },
          "getBorrowOfferAPR(address,uint256,address,uint256)": {
            "notice": "Get the APR for a borrow offer in a collection from a rate provider"
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": {
            "notice": "Gets the swap data for buying credit as a market order"
          },
          "getCreditPosition(uint256)": {
            "notice": "Get the details of a credit position"
          },
          "getDebtPosition(uint256)": {
            "notice": "Get the details of a debt position"
          },
          "getLoanOfferAPR(address,uint256,address,uint256)": {
            "notice": "Get the APR for a loan offer in a collection from a rate provider"
          },
          "getPositionsCount()": {
            "notice": "Get the count of debt and credit positions"
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address))": {
            "notice": "Returns the swap data for selling credit as a market order"
          },
          "getUserDefinedBorrowOfferAPR(address,uint256)": {
            "notice": "Get the APR for a user-defined borrow offer"
          },
          "getUserDefinedCopyBorrowOfferConfig(address)": {
            "notice": "Get the user copy borrow offer for a given user"
          },
          "getUserDefinedCopyLoanOfferConfig(address)": {
            "notice": "Get the user copy loan offer for a given user"
          },
          "getUserDefinedLoanOfferAPR(address,uint256)": {
            "notice": "Get the APR for a user-defined loan offer"
          },
          "getUserView(address)": {
            "notice": "Get the user view for a given user"
          },
          "isDebtPositionLiquidatable(uint256)": {
            "notice": "Check if a debt position is liquidatable"
          },
          "liquidate((uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower"
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256,uint256,address))": {
            "notice": "Liquidate a debt position with a replacement borrower"
          },
          "multicall(bytes[])": {
            "notice": "Executes multiple calls in a single transaction"
          },
          "oracle()": { "notice": "Get the oracle parameters" },
          "partialRepay((uint256,uint256,address))": {
            "notice": "Partial repay a debt position by selecting a specific CreditPosition"
          },
          "pause()": {
            "notice": "Pauses the protocol         Only callable by the PAUSER_ROLE"
          },
          "reinitialize()": { "notice": "Reinitialize the contract" },
          "repay((uint256,address))": {
            "notice": "Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported"
          },
          "riskConfig()": { "notice": "Get the risk configuration parameters" },
          "selfLiquidate((uint256))": {
            "notice": "Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees"
          },
          "selfLiquidateOnBehalfOf(((uint256),address,address))": {
            "notice": "Same as `selfLiquidate` but `onBehalfOf`"
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new borrow offer in the orderbook"
          },
          "sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": {
            "notice": "Same as `sellCreditLimit` but `onBehalfOf`"
          },
          "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,address),address,address))": {
            "notice": "Same as `sellCreditMarket` but `onBehalfOf`"
          },
          "setCopyLimitOrderConfigs(((uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "notice": "Set the copy limit order configs for a user"
          },
          "setCopyLimitOrderConfigsOnBehalfOf((((uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))": {
            "notice": "Same as `setCopyLimitOrderConfigs` but `onBehalfOf`"
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "notice": "Set the credit positions for sale"
          },
          "setUserConfigurationOnBehalfOf(((uint256,bool,bool,uint256[]),address))": {
            "notice": "Same as `setUserConfiguration` but `onBehalfOf`"
          },
          "setVariablePoolBorrowRate(uint128)": {
            "notice": "Sets the variable borrow rate         Only callable by the BORROW_RATE_UPDATER_ROLE"
          },
          "setVault((address,bool))": { "notice": "Set the vault for a user" },
          "setVaultOnBehalfOf(((address,bool),address))": {
            "notice": "Set the vault for a user on behalf of another user"
          },
          "unpause()": {
            "notice": "Unpauses the protocol         Only callable by the UNPAUSER_ROLE"
          },
          "updateConfig((string,uint256))": {
            "notice": "Updates the configuration of the protocol         Only callable by the DEFAULT_ADMIN_ROLE"
          },
          "version()": { "notice": "Get the version of the Size protocol" },
          "withdraw((address,uint256,address))": {
            "notice": "Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Aave Variable Pool or User Vault         Collateral tokens are withdrawn from the Size contract"
          },
          "withdrawOnBehalfOf(((address,uint256,address),address))": {
            "notice": "Same as `withdraw` but `onBehalfOf`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC-7540-Reference/=lib/ERC-7540-Reference/",
        "@aave/=lib/aave-v3-core/contracts/",
        "@chainlink/=lib/chainlink/",
        "@chimera/=lib/chimera/src/",
        "@crytic/properties/=lib/properties/",
        "@deprecated/=deprecated/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@pendle/=lib/pendle-core-v2-public/",
        "@safe-utils/=lib/safe-utils/src/",
        "@script/=script/",
        "@solady/=lib/solady/",
        "@solidity-http/=lib/solidity-http/src/",
        "@solmate/=lib/solmate/",
        "@src/=src/",
        "@tenderly-utils/=lib/tenderly-utils/src/",
        "@test/=test/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "ERC-7540-Reference/=lib/ERC-7540-Reference/src/",
        "ERC4626/=lib/properties/lib/ERC4626/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "chainlink/=lib/chainlink/contracts/",
        "chimera/=lib/chimera/src/",
        "ds-test/=lib/solmate/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/",
        "properties/=lib/properties/contracts/",
        "safe-smart-account/=lib/safe-utils/lib/safe-smart-account/",
        "safe-utils/=lib/safe-utils/src/",
        "solady/=lib/solady/",
        "solidity-http/=lib/solidity-http/src/",
        "solidity-stringutils/=lib/solidity-http/lib/solidity-stringutils/",
        "solmate/auth/=lib/solmate/src/auth/",
        "solmate/mixins/=lib/solmate/src/tokens/",
        "solmate/tokens/=lib/solmate/src/tokens/",
        "solmate/utils/=lib/solmate/src/utils/",
        "tenderly-utils/=lib/tenderly-utils/src/",
        "v3-core/=lib/v3-core/contracts/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/market/Size.sol": "Size" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
        "keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
        "urls": [
          "bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
          "dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAToken.sol": {
        "keccak256": "0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417",
        "urls": [
          "bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa",
          "dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol": {
        "keccak256": "0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd",
        "urls": [
          "bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0",
          "dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol": {
        "keccak256": "0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee",
        "urls": [
          "bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87",
          "dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPool.sol": {
        "keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
        "urls": [
          "bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
          "dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol": {
        "keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
        "urls": [
          "bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
          "dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol": {
        "keccak256": "0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4",
        "urls": [
          "bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d",
          "dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol": {
        "keccak256": "0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07",
        "urls": [
          "bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06",
          "dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol": {
        "keccak256": "0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88",
        "urls": [
          "bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828",
          "dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534",
        "urls": [
          "bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da",
          "dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716",
        "urls": [
          "bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23",
          "dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63",
        "urls": [
          "bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec",
          "dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
        "keccak256": "0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5",
        "urls": [
          "bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb",
          "dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866",
        "urls": [
          "bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf",
          "dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3",
        "urls": [
          "bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da",
          "dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x7b6690c21e94a45b825631a12581b40a753ea827de5ac9127a6b5833411317f0",
        "urls": [
          "bzz-raw://00045f2c18d7866618c65819fe180a9a9dab25c1974fab35069bdac9cf624b6b",
          "dweb:/ipfs/QmYk62QRqGHJ3rjqfEtbfEGFHWsenv5tNMbeMfq5HkTP44"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
        "urls": [
          "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
          "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898",
        "urls": [
          "bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70",
          "dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a",
        "urls": [
          "bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a",
          "dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c",
        "urls": [
          "bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e",
          "dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
        "keccak256": "0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6",
        "urls": [
          "bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd",
          "dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol": {
        "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
        "urls": [
          "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
          "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae",
        "urls": [
          "bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6",
          "dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0x5d0c69ef32eae686acc22acfb1a54df9c91356e69adec593aa69eba83ae8f6f4",
        "urls": [
          "bzz-raw://f7a9fca2cb3d802c4f8a2d0fda84ccc7f880264885801c7df08373501dd22282",
          "dweb:/ipfs/QmdtM2Loz9NzNTuQ3RXNQCPBjoPUJw35Ukpt1MSM9XH3cD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06",
        "urls": [
          "bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231",
          "dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160",
        "urls": [
          "bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260",
          "dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f",
        "urls": [
          "bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df",
          "dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/collections/interfaces/ICollectionsManager.sol": {
        "keccak256": "0xf36eb32c1cf333628338639e1ffb9cad9cf8996a859a352af8cb6b2b781725a4",
        "urls": [
          "bzz-raw://77af02b46b40c96119a68de47edb7fb86bb040bfef2f0cd9d3b430bd10d34ff9",
          "dweb:/ipfs/QmXgH3jDkSK7EGjSQbgYGq1a8ozneEs4gBfvvoQxGVABHZ"
        ],
        "license": "MIT"
      },
      "src/collections/interfaces/ICollectionsManagerCuratorActions.sol": {
        "keccak256": "0x6708ad93239594105c63f7da068a6ec32ce1758b997d797ac9a33ad0f4a0d201",
        "urls": [
          "bzz-raw://bdbb974f4a3de9d48c5f464ffc8dff0b4fab51b4eb0095084df035eddc46e645",
          "dweb:/ipfs/Qma52cMxmWqBrve2ZWhoPfTbkHriAWLtr3rfJrYe4hk9GL"
        ],
        "license": "MIT"
      },
      "src/collections/interfaces/ICollectionsManagerUserActions.sol": {
        "keccak256": "0x552b44f8d5735c65ecf42884d51257087bbfcd2c3feccf1f63fa5adc53984ff8",
        "urls": [
          "bzz-raw://66e4ec097f1e67e2c36117eaff4bb5de858a6f08c7dccacf25453df673eccde9",
          "dweb:/ipfs/Qmdmw2dJzKFdBmATxhtCAsLqHN7igEmVQGTBuonRXHm5K9"
        ],
        "license": "MIT"
      },
      "src/collections/interfaces/ICollectionsManagerView.sol": {
        "keccak256": "0x3122f5f96caf4125f5841e2c38339ef3589d956c44bdf3028a0f083fc8719dce",
        "urls": [
          "bzz-raw://4d6fe2a9b4f75c2a0bab02559c1e298f75154a91706595a3988f72ae893c09d8",
          "dweb:/ipfs/QmaKAc7aR4nvwtbBy5U6kxDF9zHeisEYVfeHxzMcuLy6py"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactory.sol": {
        "keccak256": "0x0c7ee30a3e26cab285f78810a3684c8d91ea4d3c839f023b839144ec69d58780",
        "urls": [
          "bzz-raw://f6f58c02477567655a64a0106153a70fd8e20a42c572554c2d8768ec93ee74a5",
          "dweb:/ipfs/QmUZ9aNgjWMVKBk5B4LRwJmSUWZNpDcBsEw3AhYa1UffUV"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactoryOffchainGetters.sol": {
        "keccak256": "0x01193f70622dd06fa303e488c255bf9b86f4fd2150ded107df75eabb1c200403",
        "urls": [
          "bzz-raw://81f74325395f6f3c01d55991aa3e8b2e26c3bd8d80b3e061f3c3d90bea81603d",
          "dweb:/ipfs/QmWKW2CQdeYgK1x5L6i9k43wJVYxu9Qy6QUJD5aFoykQ8p"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactoryV1_7.sol": {
        "keccak256": "0x88d8fee7f821de312741e741fcd2867e55905159002ba4d8ced827778bebde29",
        "urls": [
          "bzz-raw://d42df9dfc39ad1b6812bb10c74d1398d3882e207e9611cb2e857187d7c79e09a",
          "dweb:/ipfs/QmTcbh5pZjV2S6zj5x3nzvRJBBsyy5DuNLRD4Dvg5Ydydq"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactoryV1_8.sol": {
        "keccak256": "0x091167e33623c408b45abff264938404b8faf35c81601f8946e7b97ba1f50a3e",
        "urls": [
          "bzz-raw://222eaf2047375c90123f02884ca4cf84c0b354389da4c607abdbefa325bc343e",
          "dweb:/ipfs/QmWmMeKpSEeMjEBBaTSPAPWVZJeqPyRutk2tj7GD6ZXwS4"
        ],
        "license": "MIT"
      },
      "src/factory/libraries/Authorization.sol": {
        "keccak256": "0xd0759b2d19d649ede38497e36b8569cc49518a8f70927476e0713971306ab304",
        "urls": [
          "bzz-raw://79f301289c5908529bcaddcf4e1c18da9625460315462d9eca21192e1d26468d",
          "dweb:/ipfs/QmZZSLLP9hxdAVAqDhrqcdjPFL6evNKMvxEzcWUCfJmAn5"
        ],
        "license": "MIT"
      },
      "src/helpers/ReentrancyGuardUpgradeableWithViewModifier.sol": {
        "keccak256": "0x44e0afa8b79734db3eb0278c752f0c74daf37e21b342ef7963ad28cfa6eddef6",
        "urls": [
          "bzz-raw://8c08003c5aaa58665815eba32b562db37d98eee0df1478bde70d3cdea490d02d",
          "dweb:/ipfs/QmQTPFYN7RMHRtBW2StZQX6c1QmK9gZH3msxsDo1makpBz"
        ],
        "license": "MIT"
      },
      "src/market/Size.sol": {
        "keccak256": "0xc0514933bc7e3bc946eb49a6437c31496bd3efc782d33f0facaaa29d52717e26",
        "urls": [
          "bzz-raw://7267656c00c12b7ebc01eebdacb1983deebac408f9d3823622a41e4d73ba630a",
          "dweb:/ipfs/QmdbVGrRnxLwHMuwWcTARYrDsaYkYiZWN1UX3sZG3KXBfo"
        ],
        "license": "MIT"
      },
      "src/market/SizeStorage.sol": {
        "keccak256": "0xcbb653a667ff847b25dedcdefd77ceeb73539e58f1d3a3c5e0235f4f7027d7b6",
        "urls": [
          "bzz-raw://de6d2642e9cfcf23e2161d90c9a446f38dad849ed5405a52b6e829a63b45caf9",
          "dweb:/ipfs/QmRY4FeZ7kUQLUx9DYX9vCWmZzAzD95keSCeVZUf7tALHi"
        ],
        "license": "MIT"
      },
      "src/market/SizeView.sol": {
        "keccak256": "0x9378ba3acccaa95f2c22b65407770d7b94ec002d7d6c52f6036abc6adf424c22",
        "urls": [
          "bzz-raw://02de9ce70f3d3c3087aaac619e4469c4d40a352558ca8d52c12626be922e633e",
          "dweb:/ipfs/QmNfSrAfBtSZA93McLSiUXXvnp2yV8NEMsf88DfiQrxWuJ"
        ],
        "license": "MIT"
      },
      "src/market/SizeViewData.sol": {
        "keccak256": "0x4fbd20e43987c211e0f8ab6ce467b4d017092a881ad544aa44a5d2f1d555df2b",
        "urls": [
          "bzz-raw://04f4ada02248e1224356a5e1b4fce02c60e4f14c414052a09363e9803317eacf",
          "dweb:/ipfs/QmZ69LGdEoZWajqVWiHrDfctYmArkt9ZWMYARwX6htQQ7x"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/IMulticall.sol": {
        "keccak256": "0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41",
        "urls": [
          "bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989",
          "dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISize.sol": {
        "keccak256": "0x1e6e27921076b80ac11d39898f986d4ba68efc43b1a56ce7a47ad620774beb0c",
        "urls": [
          "bzz-raw://c3c9200b7136891144e42186773d0f967d09ac4ef96104f679530621791d8282",
          "dweb:/ipfs/QmVeU8h4rUykppSz6rNjmnotPRwBUSVphNnkfQAwqkV7yT"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISizeAdmin.sol": {
        "keccak256": "0x1f2fda9cf43a960e920186ce0414d596f0c73e20e0ab262a047ffcab5b8a4a9c",
        "urls": [
          "bzz-raw://092faa4adc6268f096580faebcf426c87def65e02525abfecd04aa1acfceaa88",
          "dweb:/ipfs/QmWtjocrjvMRqKH47XiP7GKPRPKPCX3ApnpgpFjt3X9eRf"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISizeView.sol": {
        "keccak256": "0xf0df7ab138a3bbe12ae09fc44d9507ab66865e30a2ddcf4734cc3f373bdc314b",
        "urls": [
          "bzz-raw://03922dee9f2f895d627a74162752b40df160d1aefa766067583cff055ce8b793",
          "dweb:/ipfs/QmTfCg5Bh4y4vwGEv5smTWjPrsrsBLizJ3xSbZqejgvW7Q"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/IWETH.sol": {
        "keccak256": "0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c",
        "urls": [
          "bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e",
          "dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/v1.7/ISizeV1_7.sol": {
        "keccak256": "0xf6dcf99539326bae7e1465eac7857f1a62d1d148d065510acea1a3f9a7e9d572",
        "urls": [
          "bzz-raw://87776d27879eb9e715f0b56ce5deb97f726b8018df831f2538563c3a8aa743c9",
          "dweb:/ipfs/QmdUwAo4orzYFXSogwjuZqnXGyrA3bZhpMVV4962E8ciSR"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/v1.8/ISizeV1_8.sol": {
        "keccak256": "0x539e339de13cfb2778f0b88e0962e72a0953f7ed41306815ba6da72f308ecbff",
        "urls": [
          "bzz-raw://0e5b98cdd5bc9107f4e890fd0c5ea6bfde4b5ffa803c72390a13579f4f81b114",
          "dweb:/ipfs/QmSQ7jXfUbhoScWLPwCkSaerqHxeBWmz6H1VVKtR8rYHhP"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/v1.8/ISizeViewV1_8.sol": {
        "keccak256": "0xd44b700b471fcdd6dab74676eca4a3d2ab7435c478cdc83c09ff3426c3eec9b1",
        "urls": [
          "bzz-raw://440c6ab93d7bf25b47885feb522e0f71963a2bb3247ba820c0f5ce6c3274feb7",
          "dweb:/ipfs/QmV4cAiAb16rMZeKWqtDe69Z9NKWHcuxvGJ6pqxbBa9GUu"
        ],
        "license": "MIT"
      },
      "src/market/libraries/AccountingLibrary.sol": {
        "keccak256": "0x7951928ccae855e9fabc380ad88075fee1822e00dadeeb969c5add0e7b1e9a53",
        "urls": [
          "bzz-raw://b895fa756fd379def6e9cb674a9618beeb7e7cc2f9708816cbafe36a56acd769",
          "dweb:/ipfs/QmbAg4HReEqmoJ23JrJpy7Rp2cgZA87VUgMrBFW3yr6Cp8"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Errors.sol": {
        "keccak256": "0xed73df3f39ba612c526ea09234b730cfdfa5ed399b279bb738fbfd5696b38bd0",
        "urls": [
          "bzz-raw://2c0c78ee291a63f618a99ef99dfd2e6d2ff973f38a2b6fb92001a0a9c6329702",
          "dweb:/ipfs/QmQfuhKVMKebzmFYAN6EEDCWr7PpG884Xbqc6VL5XwVmuM"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Events.sol": {
        "keccak256": "0xce181000a07927aa14c59bc6d514b9829386610f4f6e8e987e7b577301707d60",
        "urls": [
          "bzz-raw://cfa93b9e1ea3b94e298657b38c8ded2f180296a8054d9593b37695644b075908",
          "dweb:/ipfs/QmZ2kyGivGEo5smxeHZ4BZsFNEuy2WanW6PFbJaLrFcFMo"
        ],
        "license": "MIT"
      },
      "src/market/libraries/LoanLibrary.sol": {
        "keccak256": "0x40dcae0ebbfff42282a5ceb00b5698c882242e028740099bc5828a08fa7e77e6",
        "urls": [
          "bzz-raw://efb877878b973bb6e8913cc3c4f4948ca7a43d0036dc243862cc8de7a3e92384",
          "dweb:/ipfs/QmYt8p1H7gAyTExvnKV1Anhfnjk5o774yi4ibHGUxByExv"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Math.sol": {
        "keccak256": "0xa270b1631b8b469d0e4bfddfaa0bf87ee285fa7532e1ed31f28674356fce0e65",
        "urls": [
          "bzz-raw://7f0d027e9af0e81111d0b573c836502f94f5f0e5a3b5c0fc8ff025060e78bb53",
          "dweb:/ipfs/QmbS7Wnub3nmeo7yfeQht68MzWwMrQ3Ef7bUtiNtDMtXDx"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Multicall.sol": {
        "keccak256": "0xaf98fced0f94fce8f0c27d1f5160019eeb17e3eb67316ca245f52c39df257fa3",
        "urls": [
          "bzz-raw://852c668a4f10a61c2ceba43aac27993869ae591b8479c88d5c71bd4760cab1b6",
          "dweb:/ipfs/Qmer5YE99KsLeSKXf1QLxeDcUcLNgYkjFRwHzvBuG7JtUp"
        ],
        "license": "MIT"
      },
      "src/market/libraries/OfferLibrary.sol": {
        "keccak256": "0x55b32a6221d79312c857fa936342e229a74e440197e87603dfda8c57335c9401",
        "urls": [
          "bzz-raw://d9b3e4a528f8360c5ca36d66cfe1d60749613ccb722d1f7af91398bfbf397b9a",
          "dweb:/ipfs/QmRzh239xa5YHMrEWtAt4oCbzFdwNDqDgtz8EGZGiFqZW3"
        ],
        "license": "MIT"
      },
      "src/market/libraries/RiskLibrary.sol": {
        "keccak256": "0xc639312f28fb460000aff9c0869ffb2c3bdaab5e6d5aff6895df6bc2d3461b7e",
        "urls": [
          "bzz-raw://4eb18a5f3fc5ecacc2a166e0f5c456246bcff32284d29fa14d819f7616c7718d",
          "dweb:/ipfs/QmR9aSvd6G1qmqTKvT21fHk8EVeKGjKysn34qpCFTXhKXz"
        ],
        "license": "MIT"
      },
      "src/market/libraries/YieldCurveLibrary.sol": {
        "keccak256": "0x8d4b1f45d67387169c3b38cc034305eba91ad306dac7021d4658e3b8bbc9a135",
        "urls": [
          "bzz-raw://438376203571e01cbb26ea58c192d3036a1e623c0c5897c52aeafaa90e281cd3",
          "dweb:/ipfs/QmcRNJKsudM9bZvCPCSEQWxPHvVEfQD1u2MPf8S33fh3o3"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "keccak256": "0xccb77182ce62b7ea147ee65ad7e32076f9e565a2605c18842087103e471f79f1",
        "urls": [
          "bzz-raw://571a3265ef2664d9fea268e229af1bc0e430f458efe6898a03532de799d959ef",
          "dweb:/ipfs/QmSA1hphKNeRdqKtKpbfM3yof9TTd13r9X5ei7jNiuhcwQ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "keccak256": "0x8bc8b7c8c274648d666d0e83e3605f1cbc02b63f283fb72485e32cb2c9fdb1d6",
        "urls": [
          "bzz-raw://dfd2009d13f1cd03d1eff41195c66617b51390d65d7c805c0bd3ef288b9a5925",
          "dweb:/ipfs/QmczwzFqX7vugWArcsLvjzGzCkBsRyyrv5s8nUkq2iAnHx"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Claim.sol": {
        "keccak256": "0x0145b5a2bef3cb5b6348c0826a020eaaf8db1880bb7aa2804bf03cc16eaf2adf",
        "urls": [
          "bzz-raw://de61cb5c77a1be1cc00990f8b21e1ad41005c811309244acb314d3e3f2324427",
          "dweb:/ipfs/QmVJJ8RgFXtNg3KLcevf99ZyhXQQtAH32i7MZXM1VLrbyd"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Compensate.sol": {
        "keccak256": "0x5fa7ce8b74eeea09d12b78e3b31dbc7b37fca58b235299ad5d9f8e99ea400719",
        "urls": [
          "bzz-raw://4fbeff16ba76d1e3735f4d067ba16da7b0f35176ff9ea501a99f94063936bc5d",
          "dweb:/ipfs/QmYyogfmQmrpEksBc9uSjVQvYAWdaq31pJ3j6aAnc8D1rA"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Deposit.sol": {
        "keccak256": "0x75e2039804c341b06705e712a8403350bf3860207178872eba02b12acc1a55e0",
        "urls": [
          "bzz-raw://76f871e1a3b6e9accffffac39be2a51d90cb16028511f0f54597bdb8e8c2c6fe",
          "dweb:/ipfs/QmNzQiqWUiVnqpL9EhyG9tbF36nksZJ3YeT3hNioQLCpwG"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Initialize.sol": {
        "keccak256": "0xbad2d5f92aaeee28a87c1feda397f787cf1a2f8432bf05371f79b2309e9858f9",
        "urls": [
          "bzz-raw://5c6959ee090add484fe99aa21bb8e879c36a97a1d00b4d49dfade775c4813a63",
          "dweb:/ipfs/QmZycV28jdCXWHy7QV7uqtqxaiReZaTYtvvgECuHb3gwJQ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "keccak256": "0x20e7ccfb443548a7325a592034bcfb6f474c313f9cf0453fafc45777a280d85f",
        "urls": [
          "bzz-raw://ec7a9075a20c68b7ca70c6b283692724d2e42faf0596187bd1075d8d7b6c03b1",
          "dweb:/ipfs/QmbHMZ2EmbhY4w51vWUkuEvr2r8XEkJkYvM56Tk5h1yr9G"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "keccak256": "0xbf8028638ffc6a29e6b93a8f795ddbdfb5cb119c95c8c7bc0c446b3681514fca",
        "urls": [
          "bzz-raw://9f4db7ddad5d0e210fd133073ec80d63bdc7a6026ff74744fdc4aa83918b1230",
          "dweb:/ipfs/QmXSYimeiJRTx4sdBKZsPdY4HSDhK7gbsjB3bm596j7oT5"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "keccak256": "0xcca168dab87cf6c5a383340443041194ea3ca272aa48cdbe7ffcb263be767900",
        "urls": [
          "bzz-raw://fd4a81eeab2fbb3ac34e21fdfe3acf4cbae5802984ddd0eabcc4b5dcf5b80315",
          "dweb:/ipfs/QmVZ9wKB1vjGghXfCE3AFNGTiGLekqbLEELSdJ26eeXy3F"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Repay.sol": {
        "keccak256": "0x8ce3d2f0cf14efb0489f509f244c05d8045ea5eecffceb2d932321d4f62a5474",
        "urls": [
          "bzz-raw://773030fd26b7cd147d3c1c745a858e541dee98331c362de19e7c7f021be7c44e",
          "dweb:/ipfs/QmZ8Du3qDSdpM64JCD6PqfqQ4DtpcfaVX6ujiCEJhgUhX5"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "keccak256": "0x2d71cff942efc93fb7aa3a0a636e44562e0fa44ba4d503f323c6d08e7fdd8af3",
        "urls": [
          "bzz-raw://cdc43c74a42cffbf3844939df1d21a2b392ad3596ece8f1e9a6ebe08c2ec64be",
          "dweb:/ipfs/QmRUScCkvE4EADEUEvdwrsnzfLsq7xjFt1xsSZ4PZfs6J7"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "keccak256": "0xe8fe9ab69faccffa8539167973d13c5afe04ca8358316a092540171d084654b9",
        "urls": [
          "bzz-raw://0c626cb1ad9347b0eabd162f590c61175cdc687958bc6684843201713c5efa89",
          "dweb:/ipfs/QmNqZc3Zh2Nvj6exvG89XShBY4WtBJSh6iKWr7gZB8sQ3k"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "keccak256": "0xf4bd799bb7cf51c565d530ff42cebf0a3b1d2b01a783f484c3ffda112eca962d",
        "urls": [
          "bzz-raw://1a7d0d213d6c00b09f7508887541968939a960a86160f6812143bff9c07ecf86",
          "dweb:/ipfs/QmRafSq5sVAsmpttMGWM1FJJz9Gg1bTrVthP6k2Jppe9gr"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SetCopyLimitOrderConfigs.sol": {
        "keccak256": "0x8f6f00418e9f62d99e316097724d50ae10369fc9049b1c5caff7d219410cc79e",
        "urls": [
          "bzz-raw://36222343f8752b105bd7414e53281f30cdd1aa3ca45539dcfb5fe22d6eb5fdde",
          "dweb:/ipfs/QmRCpmVtGTXnRUUR5wPGjW1oSPg8PRcP39Sigfyt4YkXyG"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "keccak256": "0x914026fea966b75688fe25a3ac2782a426134ebceb3f1b1719e650f2317dd04e",
        "urls": [
          "bzz-raw://7bb5a25ca819ecf4137af74c23829aaf2d784b868e710f4b563378481426dd4a",
          "dweb:/ipfs/QmUTdYB2zr3gDaJ9Qj8ma8RypzdKDAeKWj1UwCS8MmnRrP"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SetVault.sol": {
        "keccak256": "0xa9fd4994702f7dc36369fbfb3f7a3ed767b36619bf28471d7d7098aabca62dab",
        "urls": [
          "bzz-raw://f7eb78f54189a5ab0247264303eea0e576d9aa8a1ea3d81e3e4aefe1baef13a0",
          "dweb:/ipfs/Qmf7DVjjGGRDC4UY1tzLztwG6pEsutWGxiZ2ve1czCE93S"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "keccak256": "0x040b1b2b4dfb446b50bce809c070a3b977e7c614f2bfdf632b10f9c89ec8d80e",
        "urls": [
          "bzz-raw://067a98624ca328a30debcd8d09adb675ad3ebeafe0829269ca5f42574babcca3",
          "dweb:/ipfs/QmU3K7oJnmknBtCyVNR6d2fLsUFCPvozr1DvY9W42cw1Eu"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "keccak256": "0x1c0692507acd9052c4831b4a78fd6a7d54b7ab9743bf49e170441abdd5694247",
        "urls": [
          "bzz-raw://6c1de43235c6ac35a2a752173ab67346feb750948d2091efd20053f051d7baa9",
          "dweb:/ipfs/QmXtbxAzykvnBSRuDWSFYybL6V7pqGwhjCGhkKQhSeb59i"
        ],
        "license": "MIT"
      },
      "src/market/token/NonTransferrableRebasingTokenVault.sol": {
        "keccak256": "0x9270ebc18028e353a18b58b3cc51c90529d18c7ac04b579e84df31f48ad883bd",
        "urls": [
          "bzz-raw://bffde31cb27e6f25019588e4807879de70b3cecb934c03b92a5cd663da153da4",
          "dweb:/ipfs/QmXHCi4Ggucp2Q4EAhFgrwi616WB993Ha82uw9bzyUM5Na"
        ],
        "license": "MIT"
      },
      "src/market/token/NonTransferrableToken.sol": {
        "keccak256": "0xf82118604ddbcd5d9ff708d739396e993d9621cff7b07f22a519141ca39a9e17",
        "urls": [
          "bzz-raw://4f371fb37a2ac76630302b1284d62e8657f038b504ce9884723574c2a3de32ec",
          "dweb:/ipfs/QmRsjmBirftC8Jih4jBG2BoJmpe4RRAAsEwsmtLjWicTVf"
        ],
        "license": "MIT"
      },
      "src/market/token/adapters/IAaveAdapter.sol": {
        "keccak256": "0xd88333fa5a565a78d2fbdf408f2ff89b69f900bd13ae84e1b102f1a1527c1777",
        "urls": [
          "bzz-raw://1890c9632e9fa607c74524da6049080fe42bde8fdc6117136e12e2277dbac02e",
          "dweb:/ipfs/QmSD6udpnnRsXoqk6yHxjKpDxiQgmoxQTj3CoXrP64bxKd"
        ],
        "license": "MIT"
      },
      "src/market/token/adapters/IAdapter.sol": {
        "keccak256": "0x579f476cae67f70982f6d158f90490ccacb37c88d4c9e4318ccee9be0d3ff692",
        "urls": [
          "bzz-raw://80e9fc7d1fa0dfa85846e80a7ba766c68a39310c604d326f547f9278c2943574",
          "dweb:/ipfs/QmS1fNU7hrH21a2ZusfxMqaQvtzAgbdJkcbfw8ps3QB5oQ"
        ],
        "license": "MIT"
      },
      "src/oracle/IPriceFeed.sol": {
        "keccak256": "0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90",
        "urls": [
          "bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48",
          "dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ"
        ],
        "license": "MIT"
      },
      "src/oracle/adapters/ChainlinkPriceFeed.sol": {
        "keccak256": "0x71a4ccb7d9469f4d7a914a81c754b1278152a387f8154e0f9793e0e3d010a599",
        "urls": [
          "bzz-raw://d953653f6481b344d0d00a677a8301f3006a50c3b90744c39cd3eda6f508818b",
          "dweb:/ipfs/QmYR1RvdMboMpH9ykJN5WwuC3AabSvPS2JA4t4afxa7gyh"
        ],
        "license": "MIT"
      },
      "src/oracle/adapters/ChainlinkSequencerUptimeFeed.sol": {
        "keccak256": "0x3d200d7fcc7c457a201f2bb32a0b68ea13b2b697cb300bbd587828bff5ffe8b8",
        "urls": [
          "bzz-raw://d72923e346e73eb0d42d055437dc6df059c3a8f27b08ff5aacd7cf7fdf90eec5",
          "dweb:/ipfs/QmPYENtSCwseMxYtQeKAkVe8DuCJYzRGpFRxDgw85xf2g8"
        ],
        "license": "MIT"
      },
      "src/oracle/adapters/UniswapV3PriceFeed.sol": {
        "keccak256": "0x84027f9673163df8f7dcbd7c828cf5bada6a9c7de1986d3821ec75004a11f639",
        "urls": [
          "bzz-raw://0caf13ef11f4ad681f395ee48145d72fcd3a1eae5b439efb132be9cccd8f1243",
          "dweb:/ipfs/QmdrnR1auzKaQhZ7AqWRKHnajw1Y6oLmdNFYJzKLzb5E72"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/PriceFeed.sol": {
        "keccak256": "0x36473f98f23968eaab386e44c1404652c7ef88c09db9772ab3195d8305829762",
        "urls": [
          "bzz-raw://5db471c144f3a43e9e07391890e7b29e39b64ae3fb0e73b66dd313801b03542a",
          "dweb:/ipfs/Qmf5GMB6SdKNCUPCbV4nYmxUjg6z3iKiweYU2ajY9BrGbC"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 111217,
        "contract": "src/market/Size.sol:Size",
        "label": "state",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(State)111213_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_int256)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "int256[]",
        "numberOfBytes": "32",
        "base": "t_int256"
      },
      "t_array(t_uint256)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20Metadata)58402": {
        "encoding": "inplace",
        "label": "contract IERC20Metadata",
        "numberOfBytes": "20"
      },
      "t_contract(IPool)6319": {
        "encoding": "inplace",
        "label": "contract IPool",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceFeed)125283": {
        "encoding": "inplace",
        "label": "contract IPriceFeed",
        "numberOfBytes": "20"
      },
      "t_contract(ISizeFactory)109242": {
        "encoding": "inplace",
        "label": "contract ISizeFactory",
        "numberOfBytes": "20"
      },
      "t_contract(IWETH)112087": {
        "encoding": "inplace",
        "label": "contract IWETH",
        "numberOfBytes": "20"
      },
      "t_contract(NonTransferrableRebasingTokenVault)123743": {
        "encoding": "inplace",
        "label": "contract NonTransferrableRebasingTokenVault",
        "numberOfBytes": "20"
      },
      "t_contract(NonTransferrableToken)123913": {
        "encoding": "inplace",
        "label": "contract NonTransferrableToken",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(User)111102_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)111102_storage"
      },
      "t_mapping(t_address,t_struct(UserCopyLimitOrderConfigs)111111_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct UserCopyLimitOrderConfigs)",
        "numberOfBytes": "32",
        "value": "t_struct(UserCopyLimitOrderConfigs)111111_storage"
      },
      "t_mapping(t_uint256,t_struct(CreditPosition)113979_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CreditPosition)",
        "numberOfBytes": "32",
        "value": "t_struct(CreditPosition)113979_storage"
      },
      "t_mapping(t_uint256,t_struct(DebtPosition)113970_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DebtPosition)",
        "numberOfBytes": "32",
        "value": "t_struct(DebtPosition)113970_storage"
      },
      "t_struct(CopyLimitOrderConfig)114594_storage": {
        "encoding": "inplace",
        "label": "struct CopyLimitOrderConfig",
        "numberOfBytes": "160",
        "members": [
          {
            "astId": 114585,
            "contract": "src/market/Size.sol:Size",
            "label": "minTenor",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 114587,
            "contract": "src/market/Size.sol:Size",
            "label": "maxTenor",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 114589,
            "contract": "src/market/Size.sol:Size",
            "label": "minAPR",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 114591,
            "contract": "src/market/Size.sol:Size",
            "label": "maxAPR",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 114593,
            "contract": "src/market/Size.sol:Size",
            "label": "offsetAPR",
            "offset": 0,
            "slot": "4",
            "type": "t_int256"
          }
        ]
      },
      "t_struct(CreditPosition)113979_storage": {
        "encoding": "inplace",
        "label": "struct CreditPosition",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 113972,
            "contract": "src/market/Size.sol:Size",
            "label": "lender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 113974,
            "contract": "src/market/Size.sol:Size",
            "label": "forSale",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 113976,
            "contract": "src/market/Size.sol:Size",
            "label": "credit",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 113978,
            "contract": "src/market/Size.sol:Size",
            "label": "debtPositionId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(Data)111200_storage": {
        "encoding": "inplace",
        "label": "struct Data",
        "numberOfBytes": "480",
        "members": [
          {
            "astId": 111152,
            "contract": "src/market/Size.sol:Size",
            "label": "users",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_struct(User)111102_storage)"
          },
          {
            "astId": 111157,
            "contract": "src/market/Size.sol:Size",
            "label": "debtPositions",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(DebtPosition)113970_storage)"
          },
          {
            "astId": 111162,
            "contract": "src/market/Size.sol:Size",
            "label": "creditPositions",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(CreditPosition)113979_storage)"
          },
          {
            "astId": 111164,
            "contract": "src/market/Size.sol:Size",
            "label": "nextDebtPositionId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 111166,
            "contract": "src/market/Size.sol:Size",
            "label": "nextCreditPositionId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 111169,
            "contract": "src/market/Size.sol:Size",
            "label": "weth",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IWETH)112087"
          },
          {
            "astId": 111172,
            "contract": "src/market/Size.sol:Size",
            "label": "underlyingCollateralToken",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IERC20Metadata)58402"
          },
          {
            "astId": 111175,
            "contract": "src/market/Size.sol:Size",
            "label": "underlyingBorrowToken",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IERC20Metadata)58402"
          },
          {
            "astId": 111178,
            "contract": "src/market/Size.sol:Size",
            "label": "collateralToken",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(NonTransferrableToken)123913"
          },
          {
            "astId": 111180,
            "contract": "src/market/Size.sol:Size",
            "label": "___deprecated_borrowATokenV1_2",
            "offset": 0,
            "slot": "9",
            "type": "t_address"
          },
          {
            "astId": 111183,
            "contract": "src/market/Size.sol:Size",
            "label": "debtToken",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(NonTransferrableToken)123913"
          },
          {
            "astId": 111186,
            "contract": "src/market/Size.sol:Size",
            "label": "variablePool",
            "offset": 0,
            "slot": "11",
            "type": "t_contract(IPool)6319"
          },
          {
            "astId": 111188,
            "contract": "src/market/Size.sol:Size",
            "label": "___deprecated_isMulticall",
            "offset": 20,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 111191,
            "contract": "src/market/Size.sol:Size",
            "label": "borrowTokenVault",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(NonTransferrableRebasingTokenVault)123743"
          },
          {
            "astId": 111196,
            "contract": "src/market/Size.sol:Size",
            "label": "usersCopyLimitOrderConfigs",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserCopyLimitOrderConfigs)111111_storage)"
          },
          {
            "astId": 111199,
            "contract": "src/market/Size.sol:Size",
            "label": "sizeFactory",
            "offset": 0,
            "slot": "14",
            "type": "t_contract(ISizeFactory)109242"
          }
        ]
      },
      "t_struct(DebtPosition)113970_storage": {
        "encoding": "inplace",
        "label": "struct DebtPosition",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 113963,
            "contract": "src/market/Size.sol:Size",
            "label": "borrower",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 113965,
            "contract": "src/market/Size.sol:Size",
            "label": "futureValue",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 113967,
            "contract": "src/market/Size.sol:Size",
            "label": "dueDate",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 113969,
            "contract": "src/market/Size.sol:Size",
            "label": "liquidityIndexAtRepayment",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(FeeConfig)111124_storage": {
        "encoding": "inplace",
        "label": "struct FeeConfig",
        "numberOfBytes": "192",
        "members": [
          {
            "astId": 111113,
            "contract": "src/market/Size.sol:Size",
            "label": "swapFeeAPR",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 111115,
            "contract": "src/market/Size.sol:Size",
            "label": "fragmentationFee",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 111117,
            "contract": "src/market/Size.sol:Size",
            "label": "liquidationRewardPercent",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 111119,
            "contract": "src/market/Size.sol:Size",
            "label": "overdueCollateralProtocolPercent",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 111121,
            "contract": "src/market/Size.sol:Size",
            "label": "collateralProtocolPercent",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 111123,
            "contract": "src/market/Size.sol:Size",
            "label": "feeRecipient",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          }
        ]
      },
      "t_struct(LimitOrder)114583_storage": {
        "encoding": "inplace",
        "label": "struct LimitOrder",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 114579,
            "contract": "src/market/Size.sol:Size",
            "label": "maxDueDate",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 114582,
            "contract": "src/market/Size.sol:Size",
            "label": "curveRelativeTime",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(YieldCurve)115557_storage"
          }
        ]
      },
      "t_struct(Oracle)111147_storage": {
        "encoding": "inplace",
        "label": "struct Oracle",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 111140,
            "contract": "src/market/Size.sol:Size",
            "label": "priceFeed",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPriceFeed)125283"
          },
          {
            "astId": 111142,
            "contract": "src/market/Size.sol:Size",
            "label": "variablePoolBorrowRate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint128"
          },
          {
            "astId": 111144,
            "contract": "src/market/Size.sol:Size",
            "label": "variablePoolBorrowRateUpdatedAt",
            "offset": 16,
            "slot": "1",
            "type": "t_uint64"
          },
          {
            "astId": 111146,
            "contract": "src/market/Size.sol:Size",
            "label": "variablePoolBorrowRateStaleRateInterval",
            "offset": 24,
            "slot": "1",
            "type": "t_uint64"
          }
        ]
      },
      "t_struct(RiskConfig)111137_storage": {
        "encoding": "inplace",
        "label": "struct RiskConfig",
        "numberOfBytes": "192",
        "members": [
          {
            "astId": 111126,
            "contract": "src/market/Size.sol:Size",
            "label": "crOpening",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 111128,
            "contract": "src/market/Size.sol:Size",
            "label": "crLiquidation",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 111130,
            "contract": "src/market/Size.sol:Size",
            "label": "minimumCreditBorrowToken",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 111132,
            "contract": "src/market/Size.sol:Size",
            "label": "___deprecated_borrowTokenCap",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 111134,
            "contract": "src/market/Size.sol:Size",
            "label": "minTenor",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 111136,
            "contract": "src/market/Size.sol:Size",
            "label": "maxTenor",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(State)111213_storage": {
        "encoding": "inplace",
        "label": "struct State",
        "numberOfBytes": "928",
        "members": [
          {
            "astId": 111203,
            "contract": "src/market/Size.sol:Size",
            "label": "feeConfig",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(FeeConfig)111124_storage"
          },
          {
            "astId": 111206,
            "contract": "src/market/Size.sol:Size",
            "label": "riskConfig",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(RiskConfig)111137_storage"
          },
          {
            "astId": 111209,
            "contract": "src/market/Size.sol:Size",
            "label": "oracle",
            "offset": 0,
            "slot": "12",
            "type": "t_struct(Oracle)111147_storage"
          },
          {
            "astId": 111212,
            "contract": "src/market/Size.sol:Size",
            "label": "data",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(Data)111200_storage"
          }
        ]
      },
      "t_struct(User)111102_storage": {
        "encoding": "inplace",
        "label": "struct User",
        "numberOfBytes": "320",
        "members": [
          {
            "astId": 111094,
            "contract": "src/market/Size.sol:Size",
            "label": "loanOffer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(LimitOrder)114583_storage"
          },
          {
            "astId": 111097,
            "contract": "src/market/Size.sol:Size",
            "label": "borrowOffer",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(LimitOrder)114583_storage"
          },
          {
            "astId": 111099,
            "contract": "src/market/Size.sol:Size",
            "label": "openingLimitBorrowCR",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 111101,
            "contract": "src/market/Size.sol:Size",
            "label": "allCreditPositionsForSaleDisabled",
            "offset": 0,
            "slot": "9",
            "type": "t_bool"
          }
        ]
      },
      "t_struct(UserCopyLimitOrderConfigs)111111_storage": {
        "encoding": "inplace",
        "label": "struct UserCopyLimitOrderConfigs",
        "numberOfBytes": "352",
        "members": [
          {
            "astId": 111104,
            "contract": "src/market/Size.sol:Size",
            "label": "___deprecated_copyAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 111107,
            "contract": "src/market/Size.sol:Size",
            "label": "copyLoanOfferConfig",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(CopyLimitOrderConfig)114594_storage"
          },
          {
            "astId": 111110,
            "contract": "src/market/Size.sol:Size",
            "label": "copyBorrowOfferConfig",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(CopyLimitOrderConfig)114594_storage"
          }
        ]
      },
      "t_struct(YieldCurve)115557_storage": {
        "encoding": "inplace",
        "label": "struct YieldCurve",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 115550,
            "contract": "src/market/Size.sol:Size",
            "label": "tenors",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 115553,
            "contract": "src/market/Size.sol:Size",
            "label": "aprs",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_int256)dyn_storage"
          },
          {
            "astId": 115556,
            "contract": "src/market/Size.sol:Size",
            "label": "marketRateMultipliers",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ]
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  },
  "ast": {
    "absolutePath": "src/market/Size.sol",
    "id": 111070,
    "exportedSymbols": {
      "AccessControlUpgradeable": [52349],
      "BORROW_RATE_UPDATER_ROLE": [109169],
      "BuyCreditLimit": [116125],
      "BuyCreditLimitOnBehalfOfParams": [115987],
      "BuyCreditLimitParams": [115981],
      "BuyCreditMarket": [116864],
      "BuyCreditMarketOnBehalfOfParams": [116180],
      "BuyCreditMarketParams": [116172],
      "Claim": [117028],
      "ClaimParams": [116886],
      "Compensate": [117428],
      "CompensateOnBehalfOfParams": [117062],
      "CompensateParams": [117056],
      "Deposit": [117774],
      "DepositOnBehalfOfParams": [117457],
      "DepositParams": [117451],
      "Errors": [113603],
      "Events": [113932],
      "IMulticall": [111732],
      "ISize": [111904],
      "ISizeAdmin": [111931],
      "ISizeFactory": [109242],
      "ISizeV1_7": [112183],
      "ISizeV1_8": [112209],
      "ISizeView": [112071],
      "Initializable": [52949],
      "Initialize": [118600],
      "InitializeDataParams": [117851],
      "InitializeFeeConfigParams": [117822],
      "InitializeOracleParams": [117838],
      "InitializeRiskConfigParams": [117833],
      "KEEPER_ROLE": [109159],
      "Liquidate": [118959],
      "LiquidateParams": [118627],
      "LiquidateWithReplacement": [119378],
      "LiquidateWithReplacementParams": [118999],
      "Multicall": [114559],
      "PAUSER_ROLE": [109164],
      "PartialRepay": [119593],
      "PartialRepayParams": [119407],
      "PausableUpgradeable": [55004],
      "RESERVED_ID": [113961],
      "ReentrancyGuardUpgradeableWithViewModifier": [109851],
      "Repay": [119747],
      "RepayParams": [119616],
      "RiskLibrary": [115538],
      "SelfLiquidate": [120011],
      "SelfLiquidateOnBehalfOfParams": [119776],
      "SelfLiquidateParams": [119768],
      "SellCreditLimit": [120176],
      "SellCreditLimitOnBehalfOfParams": [120038],
      "SellCreditLimitParams": [120032],
      "SellCreditMarket": [120882],
      "SellCreditMarketOnBehalfOfParams": [120230],
      "SellCreditMarketParams": [120222],
      "SetCopyLimitOrderConfigs": [121056],
      "SetCopyLimitOrderConfigsOnBehalfOfParams": [120909],
      "SetCopyLimitOrderConfigsParams": [120903],
      "SetUserConfiguration": [121312],
      "SetUserConfigurationOnBehalfOfParams": [121089],
      "SetUserConfigurationParams": [121083],
      "SetVault": [121425],
      "SetVaultOnBehalfOfParams": [121333],
      "SetVaultParams": [121327],
      "Size": [111069],
      "SizeView": [111671],
      "State": [111213],
      "UUPSUpgradeable": [53131],
      "UpdateConfig": [121957],
      "UpdateConfigParams": [121453],
      "UserView": [111695],
      "Withdraw": [122245],
      "WithdrawOnBehalfOfParams": [121988],
      "WithdrawParams": [121982]
    },
    "nodeType": "SourceUnit",
    "src": "32:17331:279",
    "nodes": [
      {
        "id": 109853,
        "nodeType": "PragmaDirective",
        "src": "32:23:279",
        "nodes": [],
        "literals": ["solidity", "0.8", ".23"]
      },
      {
        "id": 109855,
        "nodeType": "ImportDirective",
        "src": "57:113:279",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 52350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109854,
              "name": "AccessControlUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52349,
              "src": "65:24:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109857,
        "nodeType": "ImportDirective",
        "src": "172:96:279",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 52950,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109856,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52949,
              "src": "180:13:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109859,
        "nodeType": "ImportDirective",
        "src": "269:100:279",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 53132,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109858,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53131,
              "src": "277:15:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109861,
        "nodeType": "ImportDirective",
        "src": "370:102:279",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 55005,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109860,
              "name": "PausableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55004,
              "src": "378:19:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109863,
        "nodeType": "ImportDirective",
        "src": "473:66:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/LoanLibrary.sol",
        "file": "@src/market/libraries/LoanLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 114303,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109862,
              "name": "RESERVED_ID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 113961,
              "src": "481:11:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109869,
        "nodeType": "ImportDirective",
        "src": "541:195:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/Initialize.sol",
        "file": "@src/market/libraries/actions/Initialize.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 118601,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109864,
              "name": "Initialize",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 118600,
              "src": "554:10:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109865,
              "name": "InitializeDataParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117851,
              "src": "570:20:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109866,
              "name": "InitializeFeeConfigParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117822,
              "src": "596:25:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109867,
              "name": "InitializeOracleParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117838,
              "src": "627:22:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109868,
              "name": "InitializeRiskConfigParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117833,
              "src": "655:26:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109872,
        "nodeType": "ImportDirective",
        "src": "737:96:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/UpdateConfig.sol",
        "file": "@src/market/libraries/actions/UpdateConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 121958,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109870,
              "name": "UpdateConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121957,
              "src": "745:12:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109871,
              "name": "UpdateConfigParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121453,
              "src": "759:18:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109876,
        "nodeType": "ImportDirective",
        "src": "835:152:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/SellCreditLimit.sol",
        "file": "@src/market/libraries/actions/SellCreditLimit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 120177,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109873,
              "name": "SellCreditLimit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 120176,
              "src": "848:15:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109874,
              "name": "SellCreditLimitOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 120038,
              "src": "869:31:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109875,
              "name": "SellCreditLimitParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 120032,
              "src": "906:21:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109880,
        "nodeType": "ImportDirective",
        "src": "988:156:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/SellCreditMarket.sol",
        "file": "@src/market/libraries/actions/SellCreditMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 120883,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109877,
              "name": "SellCreditMarket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 120882,
              "src": "1001:16:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109878,
              "name": "SellCreditMarketOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 120230,
              "src": "1023:32:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109879,
              "name": "SellCreditMarketParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 120222,
              "src": "1061:22:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109884,
        "nodeType": "ImportDirective",
        "src": "1146:152:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/BuyCreditMarket.sol",
        "file": "@src/market/libraries/actions/BuyCreditMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 116865,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109881,
              "name": "BuyCreditMarket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 116864,
              "src": "1159:15:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109882,
              "name": "BuyCreditMarketOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 116180,
              "src": "1180:31:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109883,
              "name": "BuyCreditMarketParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 116172,
              "src": "1217:21:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109887,
        "nodeType": "ImportDirective",
        "src": "1299:75:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/Claim.sol",
        "file": "@src/market/libraries/actions/Claim.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 117029,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109885,
              "name": "Claim",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117028,
              "src": "1307:5:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109886,
              "name": "ClaimParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 116886,
              "src": "1314:11:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109891,
        "nodeType": "ImportDirective",
        "src": "1375:106:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/Deposit.sol",
        "file": "@src/market/libraries/actions/Deposit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 117775,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109888,
              "name": "Deposit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117774,
              "src": "1383:7:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109889,
              "name": "DepositOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117457,
              "src": "1392:23:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109890,
              "name": "DepositParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117451,
              "src": "1417:13:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109895,
        "nodeType": "ImportDirective",
        "src": "1482:172:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/SetUserConfiguration.sol",
        "file": "@src/market/libraries/actions/SetUserConfiguration.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 121313,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109892,
              "name": "SetUserConfiguration",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121312,
              "src": "1495:20:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109893,
              "name": "SetUserConfigurationOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121089,
              "src": "1521:36:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109894,
              "name": "SetUserConfigurationParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121083,
              "src": "1563:26:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109899,
        "nodeType": "ImportDirective",
        "src": "1655:110:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/SetVault.sol",
        "file": "@src/market/libraries/actions/SetVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 121426,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109896,
              "name": "SetVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121425,
              "src": "1663:8:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109897,
              "name": "SetVaultOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121333,
              "src": "1673:24:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109898,
              "name": "SetVaultParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121327,
              "src": "1699:14:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109903,
        "nodeType": "ImportDirective",
        "src": "1766:110:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/Withdraw.sol",
        "file": "@src/market/libraries/actions/Withdraw.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 122246,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109900,
              "name": "Withdraw",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 122245,
              "src": "1774:8:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109901,
              "name": "WithdrawOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121988,
              "src": "1784:24:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109902,
              "name": "WithdrawParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121982,
              "src": "1810:14:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109907,
        "nodeType": "ImportDirective",
        "src": "1878:148:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/BuyCreditLimit.sol",
        "file": "@src/market/libraries/actions/BuyCreditLimit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 116126,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109904,
              "name": "BuyCreditLimit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 116125,
              "src": "1891:14:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109905,
              "name": "BuyCreditLimitOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 115987,
              "src": "1911:30:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109906,
              "name": "BuyCreditLimitParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 115981,
              "src": "1947:20:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109910,
        "nodeType": "ImportDirective",
        "src": "2027:87:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/Liquidate.sol",
        "file": "@src/market/libraries/actions/Liquidate.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 118960,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109908,
              "name": "Liquidate",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 118959,
              "src": "2035:9:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109909,
              "name": "LiquidateParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 118627,
              "src": "2046:15:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109912,
        "nodeType": "ImportDirective",
        "src": "2116:119:279",
        "nodes": [],
        "absolutePath": "src/helpers/ReentrancyGuardUpgradeableWithViewModifier.sol",
        "file": "@src/helpers/ReentrancyGuardUpgradeableWithViewModifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 109852,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109911,
              "name": "ReentrancyGuardUpgradeableWithViewModifier",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 109851,
              "src": "2124:42:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109914,
        "nodeType": "ImportDirective",
        "src": "2236:50:279",
        "nodes": [],
        "absolutePath": "src/market/SizeStorage.sol",
        "file": "@src/market/SizeStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 111219,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109913,
              "name": "State",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 111213,
              "src": "2244:5:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109916,
        "nodeType": "ImportDirective",
        "src": "2287:62:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/Multicall.sol",
        "file": "@src/market/libraries/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 114560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109915,
              "name": "Multicall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 114559,
              "src": "2295:9:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109920,
        "nodeType": "ImportDirective",
        "src": "2350:118:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/Compensate.sol",
        "file": "@src/market/libraries/actions/Compensate.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 117429,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109917,
              "name": "Compensate",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117428,
              "src": "2358:10:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109918,
              "name": "CompensateOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117062,
              "src": "2370:26:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109919,
              "name": "CompensateParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 117056,
              "src": "2398:16:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109923,
        "nodeType": "ImportDirective",
        "src": "2469:96:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/PartialRepay.sol",
        "file": "@src/market/libraries/actions/PartialRepay.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 119594,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109921,
              "name": "PartialRepay",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119593,
              "src": "2477:12:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109922,
              "name": "PartialRepayParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119407,
              "src": "2491:18:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109926,
        "nodeType": "ImportDirective",
        "src": "2567:142:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/LiquidateWithReplacement.sol",
        "file": "@src/market/libraries/actions/LiquidateWithReplacement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 119379,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109924,
              "name": "LiquidateWithReplacement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119378,
              "src": "2580:24:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109925,
              "name": "LiquidateWithReplacementParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 118999,
              "src": "2610:30:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109929,
        "nodeType": "ImportDirective",
        "src": "2710:75:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/Repay.sol",
        "file": "@src/market/libraries/actions/Repay.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 119748,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109927,
              "name": "Repay",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119747,
              "src": "2718:5:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109928,
              "name": "RepayParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119616,
              "src": "2725:11:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109933,
        "nodeType": "ImportDirective",
        "src": "2786:144:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/SelfLiquidate.sol",
        "file": "@src/market/libraries/actions/SelfLiquidate.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 120012,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109930,
              "name": "SelfLiquidate",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 120011,
              "src": "2799:13:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109931,
              "name": "SelfLiquidateOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119776,
              "src": "2818:29:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109932,
              "name": "SelfLiquidateParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 119768,
              "src": "2853:19:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109937,
        "nodeType": "ImportDirective",
        "src": "2931:188:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/actions/SetCopyLimitOrderConfigs.sol",
        "file": "@src/market/libraries/actions/SetCopyLimitOrderConfigs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 121057,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109934,
              "name": "SetCopyLimitOrderConfigs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 121056,
              "src": "2944:24:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109935,
              "name": "SetCopyLimitOrderConfigsOnBehalfOfParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 120909,
              "src": "2974:40:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109936,
              "name": "SetCopyLimitOrderConfigsParams",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 120903,
              "src": "3020:30:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109939,
        "nodeType": "ImportDirective",
        "src": "3121:66:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/RiskLibrary.sol",
        "file": "@src/market/libraries/RiskLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 115539,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109938,
              "name": "RiskLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 115538,
              "src": "3129:11:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109941,
        "nodeType": "ImportDirective",
        "src": "3189:50:279",
        "nodes": [],
        "absolutePath": "src/market/SizeView.sol",
        "file": "@src/market/SizeView.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 111672,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109940,
              "name": "SizeView",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 111671,
              "src": "3197:8:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109943,
        "nodeType": "ImportDirective",
        "src": "3240:56:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/Events.sol",
        "file": "@src/market/libraries/Events.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 113933,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109942,
              "name": "Events",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 113932,
              "src": "3248:6:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109945,
        "nodeType": "ImportDirective",
        "src": "3298:65:279",
        "nodes": [],
        "absolutePath": "src/market/interfaces/IMulticall.sol",
        "file": "@src/market/interfaces/IMulticall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 111733,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109944,
              "name": "IMulticall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 111732,
              "src": "3306:10:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109947,
        "nodeType": "ImportDirective",
        "src": "3364:55:279",
        "nodes": [],
        "absolutePath": "src/market/interfaces/ISize.sol",
        "file": "@src/market/interfaces/ISize.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 111905,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109946,
              "name": "ISize",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 111904,
              "src": "3372:5:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109949,
        "nodeType": "ImportDirective",
        "src": "3420:65:279",
        "nodes": [],
        "absolutePath": "src/market/interfaces/ISizeAdmin.sol",
        "file": "@src/market/interfaces/ISizeAdmin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 111932,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109948,
              "name": "ISizeAdmin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 111931,
              "src": "3428:10:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109951,
        "nodeType": "ImportDirective",
        "src": "3486:68:279",
        "nodes": [],
        "absolutePath": "src/market/interfaces/v1.7/ISizeV1_7.sol",
        "file": "@src/market/interfaces/v1.7/ISizeV1_7.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 112184,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109950,
              "name": "ISizeV1_7",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 112183,
              "src": "3494:9:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109953,
        "nodeType": "ImportDirective",
        "src": "3555:68:279",
        "nodes": [],
        "absolutePath": "src/market/interfaces/v1.8/ISizeV1_8.sol",
        "file": "@src/market/interfaces/v1.8/ISizeV1_8.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 112210,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109952,
              "name": "ISizeV1_8",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 112209,
              "src": "3563:9:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109955,
        "nodeType": "ImportDirective",
        "src": "3624:56:279",
        "nodes": [],
        "absolutePath": "src/market/libraries/Errors.sol",
        "file": "@src/market/libraries/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 113604,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109954,
              "name": "Errors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 113603,
              "src": "3632:6:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109960,
        "nodeType": "ImportDirective",
        "src": "3682:128:279",
        "nodes": [],
        "absolutePath": "src/factory/interfaces/ISizeFactory.sol",
        "file": "@src/factory/interfaces/ISizeFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 109243,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109956,
              "name": "BORROW_RATE_UPDATER_ROLE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 109169,
              "src": "3695:24:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109957,
              "name": "ISizeFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 109242,
              "src": "3721:12:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109958,
              "name": "KEEPER_ROLE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 109159,
              "src": "3735:11:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 109959,
              "name": "PAUSER_ROLE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 109164,
              "src": "3748:11:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109962,
        "nodeType": "ImportDirective",
        "src": "3812:54:279",
        "nodes": [],
        "absolutePath": "src/market/SizeViewData.sol",
        "file": "@src/market/SizeViewData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 111719,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109961,
              "name": "UserView",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 111695,
              "src": "3820:8:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 109964,
        "nodeType": "ImportDirective",
        "src": "3867:63:279",
        "nodes": [],
        "absolutePath": "src/market/interfaces/ISizeView.sol",
        "file": "@src/market/interfaces/ISizeView.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 111070,
        "sourceUnit": 112072,
        "symbolAliases": [
          {
            "foreign": {
              "id": 109963,
              "name": "ISizeView",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 112071,
              "src": "3875:9:279",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 111069,
        "nodeType": "ContractDefinition",
        "src": "4084:13278:279",
        "nodes": [
          {
            "id": 109979,
            "nodeType": "UsingForDirective",
            "src": "4259:27:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 109976,
              "name": "Initialize",
              "nameLocations": ["4265:10:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 118600,
              "src": "4265:10:279"
            },
            "typeName": {
              "id": 109978,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 109977,
                "name": "State",
                "nameLocations": ["4280:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4280:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4280:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 109983,
            "nodeType": "UsingForDirective",
            "src": "4291:29:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 109980,
              "name": "UpdateConfig",
              "nameLocations": ["4297:12:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 121957,
              "src": "4297:12:279"
            },
            "typeName": {
              "id": 109982,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 109981,
                "name": "State",
                "nameLocations": ["4314:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4314:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4314:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 109987,
            "nodeType": "UsingForDirective",
            "src": "4325:24:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 109984,
              "name": "Deposit",
              "nameLocations": ["4331:7:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117774,
              "src": "4331:7:279"
            },
            "typeName": {
              "id": 109986,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 109985,
                "name": "State",
                "nameLocations": ["4343:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4343:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4343:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 109991,
            "nodeType": "UsingForDirective",
            "src": "4354:25:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 109988,
              "name": "Withdraw",
              "nameLocations": ["4360:8:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 122245,
              "src": "4360:8:279"
            },
            "typeName": {
              "id": 109990,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 109989,
                "name": "State",
                "nameLocations": ["4373:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4373:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4373:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 109995,
            "nodeType": "UsingForDirective",
            "src": "4384:33:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 109992,
              "name": "SellCreditMarket",
              "nameLocations": ["4390:16:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 120882,
              "src": "4390:16:279"
            },
            "typeName": {
              "id": 109994,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 109993,
                "name": "State",
                "nameLocations": ["4411:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4411:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4411:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 109999,
            "nodeType": "UsingForDirective",
            "src": "4422:32:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 109996,
              "name": "SellCreditLimit",
              "nameLocations": ["4428:15:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 120176,
              "src": "4428:15:279"
            },
            "typeName": {
              "id": 109998,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 109997,
                "name": "State",
                "nameLocations": ["4448:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4448:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4448:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110003,
            "nodeType": "UsingForDirective",
            "src": "4459:32:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110000,
              "name": "BuyCreditMarket",
              "nameLocations": ["4465:15:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 116864,
              "src": "4465:15:279"
            },
            "typeName": {
              "id": 110002,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110001,
                "name": "State",
                "nameLocations": ["4485:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4485:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4485:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110007,
            "nodeType": "UsingForDirective",
            "src": "4496:31:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110004,
              "name": "BuyCreditLimit",
              "nameLocations": ["4502:14:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 116125,
              "src": "4502:14:279"
            },
            "typeName": {
              "id": 110006,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110005,
                "name": "State",
                "nameLocations": ["4521:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4521:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4521:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110011,
            "nodeType": "UsingForDirective",
            "src": "4532:22:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110008,
              "name": "Repay",
              "nameLocations": ["4538:5:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 119747,
              "src": "4538:5:279"
            },
            "typeName": {
              "id": 110010,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110009,
                "name": "State",
                "nameLocations": ["4548:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4548:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4548:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110015,
            "nodeType": "UsingForDirective",
            "src": "4559:22:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110012,
              "name": "Claim",
              "nameLocations": ["4565:5:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117028,
              "src": "4565:5:279"
            },
            "typeName": {
              "id": 110014,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110013,
                "name": "State",
                "nameLocations": ["4575:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4575:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4575:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110019,
            "nodeType": "UsingForDirective",
            "src": "4586:26:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110016,
              "name": "Liquidate",
              "nameLocations": ["4592:9:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 118959,
              "src": "4592:9:279"
            },
            "typeName": {
              "id": 110018,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110017,
                "name": "State",
                "nameLocations": ["4606:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4606:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4606:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110023,
            "nodeType": "UsingForDirective",
            "src": "4617:30:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110020,
              "name": "SelfLiquidate",
              "nameLocations": ["4623:13:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 120011,
              "src": "4623:13:279"
            },
            "typeName": {
              "id": 110022,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110021,
                "name": "State",
                "nameLocations": ["4641:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4641:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4641:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110027,
            "nodeType": "UsingForDirective",
            "src": "4652:41:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110024,
              "name": "LiquidateWithReplacement",
              "nameLocations": ["4658:24:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 119378,
              "src": "4658:24:279"
            },
            "typeName": {
              "id": 110026,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110025,
                "name": "State",
                "nameLocations": ["4687:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4687:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4687:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110031,
            "nodeType": "UsingForDirective",
            "src": "4698:27:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110028,
              "name": "Compensate",
              "nameLocations": ["4704:10:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 117428,
              "src": "4704:10:279"
            },
            "typeName": {
              "id": 110030,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110029,
                "name": "State",
                "nameLocations": ["4719:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4719:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4719:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110035,
            "nodeType": "UsingForDirective",
            "src": "4730:29:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110032,
              "name": "PartialRepay",
              "nameLocations": ["4736:12:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 119593,
              "src": "4736:12:279"
            },
            "typeName": {
              "id": 110034,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110033,
                "name": "State",
                "nameLocations": ["4753:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4753:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4753:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110039,
            "nodeType": "UsingForDirective",
            "src": "4764:37:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110036,
              "name": "SetUserConfiguration",
              "nameLocations": ["4770:20:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 121312,
              "src": "4770:20:279"
            },
            "typeName": {
              "id": 110038,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110037,
                "name": "State",
                "nameLocations": ["4795:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4795:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4795:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110043,
            "nodeType": "UsingForDirective",
            "src": "4806:28:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110040,
              "name": "RiskLibrary",
              "nameLocations": ["4812:11:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 115538,
              "src": "4812:11:279"
            },
            "typeName": {
              "id": 110042,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110041,
                "name": "State",
                "nameLocations": ["4828:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4828:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4828:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110047,
            "nodeType": "UsingForDirective",
            "src": "4839:26:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110044,
              "name": "Multicall",
              "nameLocations": ["4845:9:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 114559,
              "src": "4845:9:279"
            },
            "typeName": {
              "id": 110046,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110045,
                "name": "State",
                "nameLocations": ["4859:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4859:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4859:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110051,
            "nodeType": "UsingForDirective",
            "src": "4870:41:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110048,
              "name": "SetCopyLimitOrderConfigs",
              "nameLocations": ["4876:24:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 121056,
              "src": "4876:24:279"
            },
            "typeName": {
              "id": 110050,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110049,
                "name": "State",
                "nameLocations": ["4905:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4905:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4905:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110055,
            "nodeType": "UsingForDirective",
            "src": "4916:25:279",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 110052,
              "name": "SetVault",
              "nameLocations": ["4922:8:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 121425,
              "src": "4922:8:279"
            },
            "typeName": {
              "id": 110054,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110053,
                "name": "State",
                "nameLocations": ["4935:5:279"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 111213,
                "src": "4935:5:279"
              },
              "referencedDeclaration": 111213,
              "src": "4935:5:279",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_State_$111213_storage_ptr",
                "typeString": "struct State"
              }
            }
          },
          {
            "id": 110063,
            "nodeType": "FunctionDefinition",
            "src": "5000:53:279",
            "nodes": [],
            "body": {
              "id": 110062,
              "nodeType": "Block",
              "src": "5014:39:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110059,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52903,
                      "src": "5024:20:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5024:22:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110061,
                  "nodeType": "ExpressionStatement",
                  "src": "5024:22:279"
                }
              ]
            },
            "documentation": {
              "id": 110056,
              "nodeType": "StructuredDocumentation",
              "src": "4947:48:279",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 110057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5011:2:279"
            },
            "returnParameters": {
              "id": 110058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5014:0:279"
            },
            "scope": 111069,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110134,
            "nodeType": "FunctionDefinition",
            "src": "5059:661:279",
            "nodes": [],
            "body": {
              "id": 110133,
              "nodeType": "Block",
              "src": "5306:414:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110085,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110065,
                        "src": "5341:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110086,
                        "name": "f",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110068,
                        "src": "5348:1:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeFeeConfigParams_$117822_calldata_ptr",
                          "typeString": "struct InitializeFeeConfigParams calldata"
                        }
                      },
                      {
                        "id": 110087,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110071,
                        "src": "5351:1:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeRiskConfigParams_$117833_calldata_ptr",
                          "typeString": "struct InitializeRiskConfigParams calldata"
                        }
                      },
                      {
                        "id": 110088,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110074,
                        "src": "5354:1:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeOracleParams_$117838_calldata_ptr",
                          "typeString": "struct InitializeOracleParams calldata"
                        }
                      },
                      {
                        "id": 110089,
                        "name": "d",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110077,
                        "src": "5357:1:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeDataParams_$117851_calldata_ptr",
                          "typeString": "struct InitializeDataParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_InitializeFeeConfigParams_$117822_calldata_ptr",
                          "typeString": "struct InitializeFeeConfigParams calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_InitializeRiskConfigParams_$117833_calldata_ptr",
                          "typeString": "struct InitializeRiskConfigParams calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_InitializeOracleParams_$117838_calldata_ptr",
                          "typeString": "struct InitializeOracleParams calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_InitializeDataParams_$117851_calldata_ptr",
                          "typeString": "struct InitializeDataParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110082,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "5316:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110084,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5322:18:279",
                      "memberName": "validateInitialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118215,
                      "src": "5316:24:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_address_$_t_struct$_InitializeFeeConfigParams_$117822_memory_ptr_$_t_struct$_InitializeRiskConfigParams_$117833_memory_ptr_$_t_struct$_InitializeOracleParams_$117838_memory_ptr_$_t_struct$_InitializeDataParams_$117851_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,address,struct InitializeFeeConfigParams memory,struct InitializeRiskConfigParams memory,struct InitializeOracleParams memory,struct InitializeDataParams memory) view"
                      }
                    },
                    "id": 110090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5316:43:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110091,
                  "nodeType": "ExpressionStatement",
                  "src": "5316:43:279"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110092,
                      "name": "__AccessControl_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52050,
                      "src": "5370:20:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5370:22:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110094,
                  "nodeType": "ExpressionStatement",
                  "src": "5370:22:279"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110095,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54908,
                      "src": "5402:15:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5402:17:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110097,
                  "nodeType": "ExpressionStatement",
                  "src": "5402:17:279"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110098,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55044,
                      "src": "5429:22:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5429:24:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110100,
                  "nodeType": "ExpressionStatement",
                  "src": "5429:24:279"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110101,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53003,
                      "src": "5463:22:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5463:24:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110103,
                  "nodeType": "ExpressionStatement",
                  "src": "5463:24:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110107,
                        "name": "f",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110068,
                        "src": "5522:1:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeFeeConfigParams_$117822_calldata_ptr",
                          "typeString": "struct InitializeFeeConfigParams calldata"
                        }
                      },
                      {
                        "id": 110108,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110071,
                        "src": "5525:1:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeRiskConfigParams_$117833_calldata_ptr",
                          "typeString": "struct InitializeRiskConfigParams calldata"
                        }
                      },
                      {
                        "id": 110109,
                        "name": "o",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110074,
                        "src": "5528:1:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeOracleParams_$117838_calldata_ptr",
                          "typeString": "struct InitializeOracleParams calldata"
                        }
                      },
                      {
                        "id": 110110,
                        "name": "d",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110077,
                        "src": "5531:1:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializeDataParams_$117851_calldata_ptr",
                          "typeString": "struct InitializeDataParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_InitializeFeeConfigParams_$117822_calldata_ptr",
                          "typeString": "struct InitializeFeeConfigParams calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_InitializeRiskConfigParams_$117833_calldata_ptr",
                          "typeString": "struct InitializeRiskConfigParams calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_InitializeOracleParams_$117838_calldata_ptr",
                          "typeString": "struct InitializeOracleParams calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_InitializeDataParams_$117851_calldata_ptr",
                          "typeString": "struct InitializeDataParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110104,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "5498:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110106,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5504:17:279",
                      "memberName": "executeInitialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118599,
                      "src": "5498:23:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_InitializeFeeConfigParams_$117822_memory_ptr_$_t_struct$_InitializeRiskConfigParams_$117833_memory_ptr_$_t_struct$_InitializeOracleParams_$117838_memory_ptr_$_t_struct$_InitializeDataParams_$117851_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct InitializeFeeConfigParams memory,struct InitializeRiskConfigParams memory,struct InitializeOracleParams memory,struct InitializeDataParams memory)"
                      }
                    },
                    "id": 110111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5498:35:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110112,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:35:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110114,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52015,
                        "src": "5554:18:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 110115,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110065,
                        "src": "5574:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 110113,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52302,
                      "src": "5543:10:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) returns (bool)"
                      }
                    },
                    "id": 110116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5543:37:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110117,
                  "nodeType": "ExpressionStatement",
                  "src": "5543:37:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110119,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109164,
                        "src": "5601:11:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 110120,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110065,
                        "src": "5614:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 110118,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52302,
                      "src": "5590:10:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) returns (bool)"
                      }
                    },
                    "id": 110121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5590:30:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110122,
                  "nodeType": "ExpressionStatement",
                  "src": "5590:30:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110124,
                        "name": "KEEPER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109159,
                        "src": "5641:11:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 110125,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110065,
                        "src": "5654:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 110123,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52302,
                      "src": "5630:10:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) returns (bool)"
                      }
                    },
                    "id": 110126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5630:30:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110127,
                  "nodeType": "ExpressionStatement",
                  "src": "5630:30:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110129,
                        "name": "BORROW_RATE_UPDATER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109169,
                        "src": "5681:24:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 110130,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110065,
                        "src": "5707:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 110128,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52302,
                      "src": "5670:10:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) returns (bool)"
                      }
                    },
                    "id": 110131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5670:43:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110132,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:43:279"
                }
              ]
            },
            "functionSelector": "f1bf35c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110080,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110079,
                  "name": "initializer",
                  "nameLocations": ["5294:11:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52789,
                  "src": "5294:11:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "5294:11:279"
              }
            ],
            "name": "initialize",
            "nameLocation": "5068:10:279",
            "parameters": {
              "id": 110078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110065,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5096:5:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110134,
                  "src": "5088:13:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5088:7:279",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110068,
                  "mutability": "mutable",
                  "name": "f",
                  "nameLocation": "5146:1:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110134,
                  "src": "5111:36:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitializeFeeConfigParams_$117822_calldata_ptr",
                    "typeString": "struct InitializeFeeConfigParams"
                  },
                  "typeName": {
                    "id": 110067,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110066,
                      "name": "InitializeFeeConfigParams",
                      "nameLocations": ["5111:25:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 117822,
                      "src": "5111:25:279"
                    },
                    "referencedDeclaration": 117822,
                    "src": "5111:25:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitializeFeeConfigParams_$117822_storage_ptr",
                      "typeString": "struct InitializeFeeConfigParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110071,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "5193:1:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110134,
                  "src": "5157:37:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitializeRiskConfigParams_$117833_calldata_ptr",
                    "typeString": "struct InitializeRiskConfigParams"
                  },
                  "typeName": {
                    "id": 110070,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110069,
                      "name": "InitializeRiskConfigParams",
                      "nameLocations": ["5157:26:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 117833,
                      "src": "5157:26:279"
                    },
                    "referencedDeclaration": 117833,
                    "src": "5157:26:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitializeRiskConfigParams_$117833_storage_ptr",
                      "typeString": "struct InitializeRiskConfigParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110074,
                  "mutability": "mutable",
                  "name": "o",
                  "nameLocation": "5236:1:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110134,
                  "src": "5204:33:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitializeOracleParams_$117838_calldata_ptr",
                    "typeString": "struct InitializeOracleParams"
                  },
                  "typeName": {
                    "id": 110073,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110072,
                      "name": "InitializeOracleParams",
                      "nameLocations": ["5204:22:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 117838,
                      "src": "5204:22:279"
                    },
                    "referencedDeclaration": 117838,
                    "src": "5204:22:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitializeOracleParams_$117838_storage_ptr",
                      "typeString": "struct InitializeOracleParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110077,
                  "mutability": "mutable",
                  "name": "d",
                  "nameLocation": "5277:1:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110134,
                  "src": "5247:31:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitializeDataParams_$117851_calldata_ptr",
                    "typeString": "struct InitializeDataParams"
                  },
                  "typeName": {
                    "id": 110076,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110075,
                      "name": "InitializeDataParams",
                      "nameLocations": ["5247:20:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 117851,
                      "src": "5247:20:279"
                    },
                    "referencedDeclaration": 117851,
                    "src": "5247:20:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitializeDataParams_$117851_storage_ptr",
                      "typeString": "struct InitializeDataParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5078:206:279"
            },
            "returnParameters": {
              "id": 110081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5306:0:279"
            },
            "scope": 111069,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110148,
            "nodeType": "FunctionDefinition",
            "src": "5756:126:279",
            "nodes": [],
            "body": {
              "id": 110147,
              "nodeType": "Block",
              "src": "5841:41:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110144,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55044,
                      "src": "5851:22:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5851:24:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110146,
                  "nodeType": "ExpressionStatement",
                  "src": "5851:24:279"
                }
              ]
            },
            "baseFunctions": [112194],
            "documentation": {
              "id": 110135,
              "nodeType": "StructuredDocumentation",
              "src": "5726:25:279",
              "text": "@inheritdoc ISizeV1_8"
            },
            "functionSelector": "6c2eb350",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 110138,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52015,
                    "src": "5798:18:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 110139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110137,
                  "name": "onlyRole",
                  "nameLocations": ["5789:8:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52044,
                  "src": "5789:8:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "5789:28:279"
              },
              {
                "arguments": [
                  {
                    "hexValue": "315f30385f3030",
                    "id": 110141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5832:7:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10800_by_1",
                      "typeString": "int_const 10800"
                    },
                    "value": "1_08_00"
                  }
                ],
                "id": 110142,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110140,
                  "name": "reinitializer",
                  "nameLocations": ["5818:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52836,
                  "src": "5818:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "5818:22:279"
              }
            ],
            "name": "reinitialize",
            "nameLocation": "5765:12:279",
            "parameters": {
              "id": 110136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5777:2:279"
            },
            "returnParameters": {
              "id": 110143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5841:0:279"
            },
            "scope": 111069,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110195,
            "nodeType": "FunctionDefinition",
            "src": "5888:370:279",
            "nodes": [],
            "body": {
              "id": 110194,
              "nodeType": "Block",
              "src": "5966:292:279",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 110158,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110150,
                        "src": "5988:4:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 110159,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110152,
                        "src": "5994:7:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 110157,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52103,
                      "src": "5980:7:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 110160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5980:22:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 110174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 110166,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111217,
                                "src": "6058:5:279",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_State_$111213_storage",
                                  "typeString": "struct State storage ref"
                                }
                              },
                              "id": 110167,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6064:4:279",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 111212,
                              "src": "6058:10:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Data_$111200_storage",
                                "typeString": "struct Data storage ref"
                              }
                            },
                            "id": 110168,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6069:11:279",
                            "memberName": "sizeFactory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 111199,
                            "src": "6058:22:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISizeFactory_$109242",
                              "typeString": "contract ISizeFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISizeFactory_$109242",
                              "typeString": "contract ISizeFactory"
                            }
                          ],
                          "id": 110165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6050:7:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 110164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6050:7:279",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 110169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6050:31:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 110172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6093:1:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 110171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6085:7:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 110170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6085:7:279",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 110173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6085:10:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6050:45:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 110191,
                      "nodeType": "Block",
                      "src": "6140:112:279",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 110187,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110150,
                                "src": "6227:4:279",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 110188,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110152,
                                "src": "6233:7:279",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 110181,
                                            "name": "state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 111217,
                                            "src": "6194:5:279",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_State_$111213_storage",
                                              "typeString": "struct State storage ref"
                                            }
                                          },
                                          "id": 110182,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6200:4:279",
                                          "memberName": "data",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 111212,
                                          "src": "6194:10:279",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Data_$111200_storage",
                                            "typeString": "struct Data storage ref"
                                          }
                                        },
                                        "id": 110183,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "6205:11:279",
                                        "memberName": "sizeFactory",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 111199,
                                        "src": "6194:22:279",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISizeFactory_$109242",
                                          "typeString": "contract ISizeFactory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ISizeFactory_$109242",
                                          "typeString": "contract ISizeFactory"
                                        }
                                      ],
                                      "id": 110180,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6186:7:279",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 110179,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6186:7:279",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 110184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6186:31:279",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 110178,
                                  "name": "AccessControlUpgradeable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52349,
                                  "src": "6161:24:279",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AccessControlUpgradeable_$52349_$",
                                    "typeString": "type(contract AccessControlUpgradeable)"
                                  }
                                },
                                "id": 110185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6161:57:279",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AccessControlUpgradeable_$52349",
                                  "typeString": "contract AccessControlUpgradeable"
                                }
                              },
                              "id": 110186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6219:7:279",
                              "memberName": "hasRole",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52103,
                              "src": "6161:65:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view external returns (bool)"
                              }
                            },
                            "id": 110189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6161:80:279",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 110156,
                          "id": 110190,
                          "nodeType": "Return",
                          "src": "6154:87:279"
                        }
                      ]
                    },
                    "id": 110192,
                    "nodeType": "IfStatement",
                    "src": "6046:206:279",
                    "trueBody": {
                      "id": 110177,
                      "nodeType": "Block",
                      "src": "6097:37:279",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "66616c7365",
                            "id": 110175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6118:5:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 110156,
                          "id": 110176,
                          "nodeType": "Return",
                          "src": "6111:12:279"
                        }
                      ]
                    }
                  },
                  "id": 110193,
                  "nodeType": "IfStatement",
                  "src": "5976:276:279",
                  "trueBody": {
                    "id": 110163,
                    "nodeType": "Block",
                    "src": "6004:36:279",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 110161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6025:4:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 110156,
                        "id": 110162,
                        "nodeType": "Return",
                        "src": "6018:11:279"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasRole",
            "nameLocation": "5897:8:279",
            "parameters": {
              "id": 110153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110150,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "5914:4:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110195,
                  "src": "5906:12:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 110149,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5906:7:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110152,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5928:7:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110195,
                  "src": "5920:15:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:7:279",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5905:31:279"
            },
            "returnParameters": {
              "id": 110156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110195,
                  "src": "5960:4:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 110154,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5960:4:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5959:6:279"
            },
            "scope": 111069,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 110215,
            "nodeType": "ModifierDefinition",
            "src": "6264:194:279",
            "nodes": [],
            "body": {
              "id": 110214,
              "nodeType": "Block",
              "src": "6316:142:279",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 110204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6330:27:279",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 110200,
                          "name": "role",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110197,
                          "src": "6340:4:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 110201,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6346:3:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 110202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6350:6:279",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6346:10:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 110199,
                        "name": "_hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110195,
                        "src": "6331:8:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 110203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6331:26:279",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110212,
                  "nodeType": "IfStatement",
                  "src": "6326:115:279",
                  "trueBody": {
                    "id": 110211,
                    "nodeType": "Block",
                    "src": "6359:82:279",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 110206,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6413:3:279",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 110207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6417:6:279",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6413:10:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 110208,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110197,
                              "src": "6425:4:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 110205,
                            "name": "AccessControlUnauthorizedAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55479,
                            "src": "6380:32:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,bytes32) pure"
                            }
                          },
                          "id": 110209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6380:50:279",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 110210,
                        "nodeType": "RevertStatement",
                        "src": "6373:57:279"
                      }
                    ]
                  }
                },
                {
                  "id": 110213,
                  "nodeType": "PlaceholderStatement",
                  "src": "6450:1:279"
                }
              ]
            },
            "name": "onlyRoleOrSizeFactoryHasRole",
            "nameLocation": "6273:28:279",
            "parameters": {
              "id": 110198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110197,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "6310:4:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110215,
                  "src": "6302:12:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 110196,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6302:7:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6301:14:279"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 110225,
            "nodeType": "FunctionDefinition",
            "src": "6464:151:279",
            "nodes": [],
            "body": {
              "id": 110224,
              "nodeType": "Block",
              "src": "6613:2:279",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [53085],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 110221,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52015,
                    "src": "6589:18:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 110222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110220,
                  "name": "onlyRoleOrSizeFactoryHasRole",
                  "nameLocations": ["6560:28:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 110215,
                  "src": "6560:28:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "6560:48:279"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "6473:17:279",
            "overrides": {
              "id": 110219,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6543:8:279"
            },
            "parameters": {
              "id": 110218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110217,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "6499:17:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110225,
                  "src": "6491:25:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6491:7:279",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6490:27:279"
            },
            "returnParameters": {
              "id": 110223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6613:0:279"
            },
            "scope": 111069,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 110259,
            "nodeType": "ModifierDefinition",
            "src": "6701:408:279",
            "nodes": [],
            "body": {
              "id": 110258,
              "nodeType": "Block",
              "src": "6757:352:279",
              "nodes": [],
              "statements": [
                {
                  "assignments": [110231],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 110231,
                      "mutability": "mutable",
                      "name": "collateralRatioBefore",
                      "nameLocation": "6775:21:279",
                      "nodeType": "VariableDeclaration",
                      "scope": 110258,
                      "src": "6767:29:279",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 110230,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6767:7:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 110236,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 110234,
                        "name": "onBehalfOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110228,
                        "src": "6821:10:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 110232,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "6799:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110233,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6805:15:279",
                      "memberName": "collateralRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115332,
                      "src": "6799:21:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_address_$returns$_t_uint256_$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,address) view returns (uint256)"
                      }
                    },
                    "id": 110235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6799:33:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6767:65:279"
                },
                {
                  "id": 110237,
                  "nodeType": "PlaceholderStatement",
                  "src": "6842:1:279"
                },
                {
                  "assignments": [110239],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 110239,
                      "mutability": "mutable",
                      "name": "collateralRatioAfter",
                      "nameLocation": "6861:20:279",
                      "nodeType": "VariableDeclaration",
                      "scope": 110258,
                      "src": "6853:28:279",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 110238,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6853:7:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 110244,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 110242,
                        "name": "onBehalfOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110228,
                        "src": "6906:10:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 110240,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "6884:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6890:15:279",
                      "memberName": "collateralRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115332,
                      "src": "6884:21:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_address_$returns$_t_uint256_$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,address) view returns (uint256)"
                      }
                    },
                    "id": 110243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6884:33:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6853:64:279"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 110245,
                      "name": "collateralRatioAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110239,
                      "src": "6931:20:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 110246,
                      "name": "collateralRatioBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110231,
                      "src": "6955:21:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6931:45:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110257,
                  "nodeType": "IfStatement",
                  "src": "6927:176:279",
                  "trueBody": {
                    "id": 110256,
                    "nodeType": "Block",
                    "src": "6978:125:279",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 110251,
                              "name": "onBehalfOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110228,
                              "src": "7036:10:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 110252,
                              "name": "collateralRatioBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110231,
                              "src": "7048:21:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 110253,
                              "name": "collateralRatioAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110239,
                              "src": "7071:20:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 110248,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113603,
                              "src": "6999:6:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$113603_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 110250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7006:29:279",
                            "memberName": "MUST_IMPROVE_COLLATERAL_RATIO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 113208,
                            "src": "6999:36:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256) pure"
                            }
                          },
                          "id": 110254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6999:93:279",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 110255,
                        "nodeType": "RevertStatement",
                        "src": "6992:100:279"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 110226,
              "nodeType": "StructuredDocumentation",
              "src": "6621:75:279",
              "text": "@notice Validate that the user has not decreased their collateral ratio"
            },
            "name": "mustImproveCollateralRatio",
            "nameLocation": "6710:26:279",
            "parameters": {
              "id": 110229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110228,
                  "mutability": "mutable",
                  "name": "onBehalfOf",
                  "nameLocation": "6745:10:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110259,
                  "src": "6737:18:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 110227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6737:7:279",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6736:20:279"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 110284,
            "nodeType": "FunctionDefinition",
            "src": "7146:259:279",
            "nodes": [],
            "body": {
              "id": 110283,
              "nodeType": "Block",
              "src": "7311:94:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110274,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110263,
                        "src": "7348:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UpdateConfigParams_$121453_calldata_ptr",
                          "typeString": "struct UpdateConfigParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UpdateConfigParams_$121453_calldata_ptr",
                          "typeString": "struct UpdateConfigParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110271,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "7321:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110273,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7327:20:279",
                      "memberName": "validateUpdateConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 121553,
                      "src": "7321:26:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_State_$111213_storage_ptr_$_t_struct$_UpdateConfigParams_$121453_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct UpdateConfigParams memory) pure"
                      }
                    },
                    "id": 110275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7321:34:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110276,
                  "nodeType": "ExpressionStatement",
                  "src": "7321:34:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110280,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110263,
                        "src": "7391:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UpdateConfigParams_$121453_calldata_ptr",
                          "typeString": "struct UpdateConfigParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UpdateConfigParams_$121453_calldata_ptr",
                          "typeString": "struct UpdateConfigParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110277,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "7365:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7371:19:279",
                      "memberName": "executeUpdateConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 121956,
                      "src": "7365:25:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_UpdateConfigParams_$121453_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct UpdateConfigParams memory)"
                      }
                    },
                    "id": 110281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7365:33:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110282,
                  "nodeType": "ExpressionStatement",
                  "src": "7365:33:279"
                }
              ]
            },
            "baseFunctions": [111916],
            "documentation": {
              "id": 110260,
              "nodeType": "StructuredDocumentation",
              "src": "7115:26:279",
              "text": "@inheritdoc ISizeAdmin"
            },
            "functionSelector": "0317b9df",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 110268,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 52015,
                    "src": "7287:18:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 110269,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110267,
                  "name": "onlyRoleOrSizeFactoryHasRole",
                  "nameLocations": ["7258:28:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 110215,
                  "src": "7258:28:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "7258:48:279"
              }
            ],
            "name": "updateConfig",
            "nameLocation": "7155:12:279",
            "overrides": {
              "id": 110266,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110265,
                  "name": "ISizeAdmin",
                  "nameLocations": ["7238:10:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111931,
                  "src": "7238:10:279"
                }
              ],
              "src": "7229:20:279"
            },
            "parameters": {
              "id": 110264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110263,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7196:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110284,
                  "src": "7168:34:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UpdateConfigParams_$121453_calldata_ptr",
                    "typeString": "struct UpdateConfigParams"
                  },
                  "typeName": {
                    "id": 110262,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110261,
                      "name": "UpdateConfigParams",
                      "nameLocations": ["7168:18:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 121453,
                      "src": "7168:18:279"
                    },
                    "referencedDeclaration": 121453,
                    "src": "7168:18:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UpdateConfigParams_$121453_storage_ptr",
                      "typeString": "struct UpdateConfigParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7167:36:279"
            },
            "returnParameters": {
              "id": 110270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7311:0:279"
            },
            "scope": 111069,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110333,
            "nodeType": "FunctionDefinition",
            "src": "7442:493:279",
            "nodes": [],
            "body": {
              "id": 110332,
              "nodeType": "Block",
              "src": "7631:304:279",
              "nodes": [],
              "statements": [
                {
                  "assignments": [110298],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 110298,
                      "mutability": "mutable",
                      "name": "oldBorrowRate",
                      "nameLocation": "7649:13:279",
                      "nodeType": "VariableDeclaration",
                      "scope": 110332,
                      "src": "7641:21:279",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 110297,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7641:7:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 110302,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 110299,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "7665:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110300,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7671:6:279",
                      "memberName": "oracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111209,
                      "src": "7665:12:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Oracle_$111147_storage",
                        "typeString": "struct Oracle storage ref"
                      }
                    },
                    "id": 110301,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7678:22:279",
                    "memberName": "variablePoolBorrowRate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 111142,
                    "src": "7665:35:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7641:59:279"
                },
                {
                  "expression": {
                    "id": 110309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 110303,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111217,
                          "src": "7710:5:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$111213_storage",
                            "typeString": "struct State storage ref"
                          }
                        },
                        "id": 110306,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7716:6:279",
                        "memberName": "oracle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111209,
                        "src": "7710:12:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Oracle_$111147_storage",
                          "typeString": "struct Oracle storage ref"
                        }
                      },
                      "id": 110307,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7723:22:279",
                      "memberName": "variablePoolBorrowRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111142,
                      "src": "7710:35:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110308,
                      "name": "borrowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110287,
                      "src": "7748:10:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "7710:48:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 110310,
                  "nodeType": "ExpressionStatement",
                  "src": "7710:48:279"
                },
                {
                  "expression": {
                    "id": 110321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 110311,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111217,
                          "src": "7768:5:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$111213_storage",
                            "typeString": "struct State storage ref"
                          }
                        },
                        "id": 110314,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7774:6:279",
                        "memberName": "oracle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111209,
                        "src": "7768:12:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Oracle_$111147_storage",
                          "typeString": "struct Oracle storage ref"
                        }
                      },
                      "id": 110315,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7781:31:279",
                      "memberName": "variablePoolBorrowRateUpdatedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 111144,
                      "src": "7768:44:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 110318,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7822:5:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 110319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7828:9:279",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7822:15:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 110317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7815:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 110316,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "7815:6:279",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 110320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7815:23:279",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "7768:70:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 110322,
                  "nodeType": "ExpressionStatement",
                  "src": "7768:70:279"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 110326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7890:3:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 110327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7894:6:279",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7890:10:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110328,
                        "name": "oldBorrowRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110298,
                        "src": "7902:13:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 110329,
                        "name": "borrowRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110287,
                        "src": "7917:10:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 110323,
                        "name": "Events",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113932,
                        "src": "7853:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Events_$113932_$",
                          "typeString": "type(library Events)"
                        }
                      },
                      "id": 110325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7860:29:279",
                      "memberName": "VariablePoolBorrowRateUpdated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113650,
                      "src": "7853:36:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint128_$_t_uint128_$returns$__$",
                        "typeString": "function (address,uint128,uint128)"
                      }
                    },
                    "id": 110330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7853:75:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110331,
                  "nodeType": "EmitStatement",
                  "src": "7848:80:279"
                }
              ]
            },
            "baseFunctions": [111922],
            "documentation": {
              "id": 110285,
              "nodeType": "StructuredDocumentation",
              "src": "7411:26:279",
              "text": "@inheritdoc ISizeAdmin"
            },
            "functionSelector": "4cbd882c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110292,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110291,
                  "name": "nonReentrant",
                  "nameLocations": ["7551:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "7551:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "7551:12:279"
              },
              {
                "arguments": [
                  {
                    "id": 110294,
                    "name": "BORROW_RATE_UPDATER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 109169,
                    "src": "7601:24:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 110295,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110293,
                  "name": "onlyRoleOrSizeFactoryHasRole",
                  "nameLocations": ["7572:28:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 110215,
                  "src": "7572:28:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "7572:54:279"
              }
            ],
            "name": "setVariablePoolBorrowRate",
            "nameLocation": "7451:25:279",
            "overrides": {
              "id": 110290,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110289,
                  "name": "ISizeAdmin",
                  "nameLocations": ["7531:10:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111931,
                  "src": "7531:10:279"
                }
              ],
              "src": "7522:20:279"
            },
            "parameters": {
              "id": 110288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110287,
                  "mutability": "mutable",
                  "name": "borrowRate",
                  "nameLocation": "7485:10:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110333,
                  "src": "7477:18:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 110286,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7477:7:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7476:20:279"
            },
            "returnParameters": {
              "id": 110296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7631:0:279"
            },
            "scope": 111069,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110346,
            "nodeType": "FunctionDefinition",
            "src": "7972:112:279",
            "nodes": [],
            "body": {
              "id": 110345,
              "nodeType": "Block",
              "src": "8059:25:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110342,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54979,
                      "src": "8069:6:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8069:8:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110344,
                  "nodeType": "ExpressionStatement",
                  "src": "8069:8:279"
                }
              ]
            },
            "baseFunctions": [111926],
            "documentation": {
              "id": 110334,
              "nodeType": "StructuredDocumentation",
              "src": "7941:26:279",
              "text": "@inheritdoc ISizeAdmin"
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 110339,
                    "name": "PAUSER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 109164,
                    "src": "8046:11:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 110340,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110338,
                  "name": "onlyRoleOrSizeFactoryHasRole",
                  "nameLocations": ["8017:28:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 110215,
                  "src": "8017:28:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "8017:41:279"
              }
            ],
            "name": "pause",
            "nameLocation": "7981:5:279",
            "overrides": {
              "id": 110337,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110336,
                  "name": "ISizeAdmin",
                  "nameLocations": ["8005:10:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111931,
                  "src": "8005:10:279"
                }
              ],
              "src": "7996:20:279"
            },
            "parameters": {
              "id": 110335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7986:2:279"
            },
            "returnParameters": {
              "id": 110341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8059:0:279"
            },
            "scope": 111069,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110359,
            "nodeType": "FunctionDefinition",
            "src": "8121:116:279",
            "nodes": [],
            "body": {
              "id": 110358,
              "nodeType": "Block",
              "src": "8210:27:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110355,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55003,
                      "src": "8220:8:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8220:10:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110357,
                  "nodeType": "ExpressionStatement",
                  "src": "8220:10:279"
                }
              ]
            },
            "baseFunctions": [111930],
            "documentation": {
              "id": 110347,
              "nodeType": "StructuredDocumentation",
              "src": "8090:26:279",
              "text": "@inheritdoc ISizeAdmin"
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 110352,
                    "name": "PAUSER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 109164,
                    "src": "8197:11:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 110353,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110351,
                  "name": "onlyRoleOrSizeFactoryHasRole",
                  "nameLocations": ["8168:28:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 110215,
                  "src": "8168:28:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "8168:41:279"
              }
            ],
            "name": "unpause",
            "nameLocation": "8130:7:279",
            "overrides": {
              "id": 110350,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110349,
                  "name": "ISizeAdmin",
                  "nameLocations": ["8156:10:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111931,
                  "src": "8156:10:279"
                }
              ],
              "src": "8147:20:279"
            },
            "parameters": {
              "id": 110348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8137:2:279"
            },
            "returnParameters": {
              "id": 110354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8210:0:279"
            },
            "scope": 111069,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110381,
            "nodeType": "FunctionDefinition",
            "src": "8274:219:279",
            "nodes": [],
            "body": {
              "id": 110380,
              "nodeType": "Block",
              "src": "8444:49:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 110378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110373,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110371,
                      "src": "8454:7:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 110376,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110363,
                          "src": "8480:5:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "bytes calldata[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "bytes calldata[] calldata"
                          }
                        ],
                        "expression": {
                          "id": 110374,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111217,
                          "src": "8464:5:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$111213_storage",
                            "typeString": "struct State storage ref"
                          }
                        },
                        "id": 110375,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8470:9:279",
                        "memberName": "multicall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 114558,
                        "src": "8464:15:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                          "typeString": "function (struct State storage pointer,bytes calldata[] calldata) returns (bytes memory[] memory)"
                        }
                      },
                      "id": 110377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8464:22:279",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "8454:32:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 110379,
                  "nodeType": "ExpressionStatement",
                  "src": "8454:32:279"
                }
              ]
            },
            "baseFunctions": [111731],
            "documentation": {
              "id": 110360,
              "nodeType": "StructuredDocumentation",
              "src": "8243:26:279",
              "text": "@inheritdoc IMulticall"
            },
            "functionSelector": "ac9650d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110368,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110367,
                  "name": "whenNotPaused",
                  "nameLocations": ["8385:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "8385:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "8385:13:279"
              }
            ],
            "name": "multicall",
            "nameLocation": "8283:9:279",
            "overrides": {
              "id": 110366,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110365,
                  "name": "IMulticall",
                  "nameLocations": ["8365:10:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111732,
                  "src": "8365:10:279"
                }
              ],
              "src": "8356:20:279"
            },
            "parameters": {
              "id": 110364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110363,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8310:5:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110381,
                  "src": "8293:22:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 110361,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "8293:5:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 110362,
                    "nodeType": "ArrayTypeName",
                    "src": "8293:7:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8292:24:279"
            },
            "returnParameters": {
              "id": 110372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110371,
                  "mutability": "mutable",
                  "name": "results",
                  "nameLocation": "8431:7:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110381,
                  "src": "8416:22:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 110369,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "8416:5:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 110370,
                    "nodeType": "ArrayTypeName",
                    "src": "8416:7:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8415:24:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110399,
            "nodeType": "FunctionDefinition",
            "src": "8525:180:279",
            "nodes": [],
            "body": {
              "id": 110398,
              "nodeType": "Block",
              "src": "8604:101:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110392,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110385,
                            "src": "8665:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DepositParams_$117451_calldata_ptr",
                              "typeString": "struct DepositParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 110393,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8685:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8689:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8685:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_DepositParams_$117451_calldata_ptr",
                              "typeString": "struct DepositParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110391,
                          "name": "DepositOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117457,
                          "src": "8632:23:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_DepositOnBehalfOfParams_$117457_storage_ptr_$",
                            "typeString": "type(struct DepositOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": ["8657:6:279", "8673:10:279"],
                        "names": ["params", "onBehalfOf"],
                        "nodeType": "FunctionCall",
                        "src": "8632:65:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr",
                          "typeString": "struct DepositOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr",
                          "typeString": "struct DepositOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110390,
                      "name": "depositOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110425,
                      "src": "8614:17:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr_$returns$__$",
                        "typeString": "function (struct DepositOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8614:84:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110397,
                  "nodeType": "ExpressionStatement",
                  "src": "8614:84:279"
                }
              ]
            },
            "baseFunctions": [111799],
            "documentation": {
              "id": 110382,
              "nodeType": "StructuredDocumentation",
              "src": "8499:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "0cf8542f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "8534:7:279",
            "overrides": {
              "id": 110388,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110387,
                  "name": "ISize",
                  "nameLocations": ["8597:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "8597:5:279"
                }
              ],
              "src": "8588:15:279"
            },
            "parameters": {
              "id": 110386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110385,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "8565:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110399,
                  "src": "8542:29:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DepositParams_$117451_calldata_ptr",
                    "typeString": "struct DepositParams"
                  },
                  "typeName": {
                    "id": 110384,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110383,
                      "name": "DepositParams",
                      "nameLocations": ["8542:13:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 117451,
                      "src": "8542:13:279"
                    },
                    "referencedDeclaration": 117451,
                    "src": "8542:13:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DepositParams_$117451_storage_ptr",
                      "typeString": "struct DepositParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8541:31:279"
            },
            "returnParameters": {
              "id": 110389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8604:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110425,
            "nodeType": "FunctionDefinition",
            "src": "8741:256:279",
            "nodes": [],
            "body": {
              "id": 110424,
              "nodeType": "Block",
              "src": "8913:84:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110415,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110403,
                        "src": "8945:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr",
                          "typeString": "struct DepositOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr",
                          "typeString": "struct DepositOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110412,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "8923:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110414,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8929:15:279",
                      "memberName": "validateDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117602,
                      "src": "8923:21:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct DepositOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 110416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8923:29:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110417,
                  "nodeType": "ExpressionStatement",
                  "src": "8923:29:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110421,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110403,
                        "src": "8983:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr",
                          "typeString": "struct DepositOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr",
                          "typeString": "struct DepositOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110418,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "8962:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110420,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8968:14:279",
                      "memberName": "executeDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117773,
                      "src": "8962:20:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct DepositOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8962:28:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110423,
                  "nodeType": "ExpressionStatement",
                  "src": "8962:28:279"
                }
              ]
            },
            "baseFunctions": [112119],
            "documentation": {
              "id": 110400,
              "nodeType": "StructuredDocumentation",
              "src": "8711:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "fa823af5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110408,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110407,
                  "name": "nonReentrant",
                  "nameLocations": ["8874:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "8874:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "8874:12:279"
              },
              {
                "id": 110410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110409,
                  "name": "whenNotPaused",
                  "nameLocations": ["8895:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "8895:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "8895:13:279"
              }
            ],
            "name": "depositOnBehalfOf",
            "nameLocation": "8750:17:279",
            "overrides": {
              "id": 110406,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110405,
                  "name": "ISizeV1_7",
                  "nameLocations": ["8855:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "8855:9:279"
                }
              ],
              "src": "8846:19:279"
            },
            "parameters": {
              "id": 110404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110403,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "8799:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110425,
                  "src": "8768:37:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DepositOnBehalfOfParams_$117457_memory_ptr",
                    "typeString": "struct DepositOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 110402,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110401,
                      "name": "DepositOnBehalfOfParams",
                      "nameLocations": ["8768:23:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 117457,
                      "src": "8768:23:279"
                    },
                    "referencedDeclaration": 117457,
                    "src": "8768:23:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DepositOnBehalfOfParams_$117457_storage_ptr",
                      "typeString": "struct DepositOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8767:39:279"
            },
            "returnParameters": {
              "id": 110411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8913:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110443,
            "nodeType": "FunctionDefinition",
            "src": "9029:186:279",
            "nodes": [],
            "body": {
              "id": 110442,
              "nodeType": "Block",
              "src": "9112:103:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110436,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110429,
                            "src": "9175:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawParams_$121982_calldata_ptr",
                              "typeString": "struct WithdrawParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 110437,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9195:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9199:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9195:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_WithdrawParams_$121982_calldata_ptr",
                              "typeString": "struct WithdrawParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110435,
                          "name": "WithdrawOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121988,
                          "src": "9141:24:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_WithdrawOnBehalfOfParams_$121988_storage_ptr_$",
                            "typeString": "type(struct WithdrawOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": ["9167:6:279", "9183:10:279"],
                        "names": ["params", "onBehalfOf"],
                        "nodeType": "FunctionCall",
                        "src": "9141:66:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr",
                          "typeString": "struct WithdrawOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr",
                          "typeString": "struct WithdrawOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110434,
                      "name": "withdrawOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110469,
                      "src": "9122:18:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr_$returns$__$",
                        "typeString": "function (struct WithdrawOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9122:86:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110441,
                  "nodeType": "ExpressionStatement",
                  "src": "9122:86:279"
                }
              ]
            },
            "baseFunctions": [111806],
            "documentation": {
              "id": 110426,
              "nodeType": "StructuredDocumentation",
              "src": "9003:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "2b4c9a20",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "9038:8:279",
            "overrides": {
              "id": 110432,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110431,
                  "name": "ISize",
                  "nameLocations": ["9105:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "9105:5:279"
                }
              ],
              "src": "9096:15:279"
            },
            "parameters": {
              "id": 110430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110429,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "9071:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110443,
                  "src": "9047:30:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawParams_$121982_calldata_ptr",
                    "typeString": "struct WithdrawParams"
                  },
                  "typeName": {
                    "id": 110428,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110427,
                      "name": "WithdrawParams",
                      "nameLocations": ["9047:14:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 121982,
                      "src": "9047:14:279"
                    },
                    "referencedDeclaration": 121982,
                    "src": "9047:14:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawParams_$121982_storage_ptr",
                      "typeString": "struct WithdrawParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9046:32:279"
            },
            "returnParameters": {
              "id": 110433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9112:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110469,
            "nodeType": "FunctionDefinition",
            "src": "9251:284:279",
            "nodes": [],
            "body": {
              "id": 110468,
              "nodeType": "Block",
              "src": "9433:102:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110459,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110447,
                        "src": "9466:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr",
                          "typeString": "struct WithdrawOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr",
                          "typeString": "struct WithdrawOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110456,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "9443:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9449:16:279",
                      "memberName": "validateWithdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 122098,
                      "src": "9443:22:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct WithdrawOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 110460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9443:38:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110461,
                  "nodeType": "ExpressionStatement",
                  "src": "9443:38:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110465,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110447,
                        "src": "9513:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr",
                          "typeString": "struct WithdrawOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr",
                          "typeString": "struct WithdrawOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110462,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "9491:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110464,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9497:15:279",
                      "memberName": "executeWithdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 122244,
                      "src": "9491:21:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct WithdrawOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9491:37:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110467,
                  "nodeType": "ExpressionStatement",
                  "src": "9491:37:279"
                }
              ]
            },
            "baseFunctions": [112126],
            "documentation": {
              "id": 110444,
              "nodeType": "StructuredDocumentation",
              "src": "9221:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "f54ae18b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110451,
                  "name": "nonReentrant",
                  "nameLocations": ["9394:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "9394:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "9394:12:279"
              },
              {
                "id": 110454,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110453,
                  "name": "whenNotPaused",
                  "nameLocations": ["9415:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "9415:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "9415:13:279"
              }
            ],
            "name": "withdrawOnBehalfOf",
            "nameLocation": "9260:18:279",
            "overrides": {
              "id": 110450,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110449,
                  "name": "ISizeV1_7",
                  "nameLocations": ["9375:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "9375:9:279"
                }
              ],
              "src": "9366:19:279"
            },
            "parameters": {
              "id": 110448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110447,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "9311:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110469,
                  "src": "9279:46:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawOnBehalfOfParams_$121988_memory_ptr",
                    "typeString": "struct WithdrawOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 110446,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110445,
                      "name": "WithdrawOnBehalfOfParams",
                      "nameLocations": ["9279:24:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 121988,
                      "src": "9279:24:279"
                    },
                    "referencedDeclaration": 121988,
                    "src": "9279:24:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawOnBehalfOfParams_$121988_storage_ptr",
                      "typeString": "struct WithdrawOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9278:48:279"
            },
            "returnParameters": {
              "id": 110455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9433:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110487,
            "nodeType": "FunctionDefinition",
            "src": "9567:210:279",
            "nodes": [],
            "body": {
              "id": 110486,
              "nodeType": "Block",
              "src": "9662:115:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110480,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110473,
                            "src": "9737:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuyCreditLimitParams_$115981_calldata_ptr",
                              "typeString": "struct BuyCreditLimitParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 110481,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9757:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9761:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9757:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_BuyCreditLimitParams_$115981_calldata_ptr",
                              "typeString": "struct BuyCreditLimitParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110479,
                          "name": "BuyCreditLimitOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115987,
                          "src": "9697:30:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_storage_ptr_$",
                            "typeString": "type(struct BuyCreditLimitOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": ["9729:6:279", "9745:10:279"],
                        "names": ["params", "onBehalfOf"],
                        "nodeType": "FunctionCall",
                        "src": "9697:72:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr",
                          "typeString": "struct BuyCreditLimitOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr",
                          "typeString": "struct BuyCreditLimitOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110478,
                      "name": "buyCreditLimitOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110513,
                      "src": "9672:24:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr_$returns$__$",
                        "typeString": "function (struct BuyCreditLimitOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9672:98:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110485,
                  "nodeType": "ExpressionStatement",
                  "src": "9672:98:279"
                }
              ]
            },
            "baseFunctions": [111813],
            "documentation": {
              "id": 110470,
              "nodeType": "StructuredDocumentation",
              "src": "9541:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "3746f858",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyCreditLimit",
            "nameLocation": "9576:14:279",
            "overrides": {
              "id": 110476,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110475,
                  "name": "ISize",
                  "nameLocations": ["9655:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "9655:5:279"
                }
              ],
              "src": "9646:15:279"
            },
            "parameters": {
              "id": 110474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110473,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "9621:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110487,
                  "src": "9591:36:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BuyCreditLimitParams_$115981_calldata_ptr",
                    "typeString": "struct BuyCreditLimitParams"
                  },
                  "typeName": {
                    "id": 110472,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110471,
                      "name": "BuyCreditLimitParams",
                      "nameLocations": ["9591:20:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 115981,
                      "src": "9591:20:279"
                    },
                    "referencedDeclaration": 115981,
                    "src": "9591:20:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BuyCreditLimitParams_$115981_storage_ptr",
                      "typeString": "struct BuyCreditLimitParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9590:38:279"
            },
            "returnParameters": {
              "id": 110477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9662:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110513,
            "nodeType": "FunctionDefinition",
            "src": "9813:308:279",
            "nodes": [],
            "body": {
              "id": 110512,
              "nodeType": "Block",
              "src": "10007:114:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110503,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110491,
                        "src": "10046:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr",
                          "typeString": "struct BuyCreditLimitOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr",
                          "typeString": "struct BuyCreditLimitOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110500,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "10017:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110502,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10023:22:279",
                      "memberName": "validateBuyCreditLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116067,
                      "src": "10017:28:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct BuyCreditLimitOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 110504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10017:44:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110505,
                  "nodeType": "ExpressionStatement",
                  "src": "10017:44:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110509,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110491,
                        "src": "10099:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr",
                          "typeString": "struct BuyCreditLimitOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr",
                          "typeString": "struct BuyCreditLimitOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110506,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "10071:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110508,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10077:21:279",
                      "memberName": "executeBuyCreditLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116124,
                      "src": "10071:27:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct BuyCreditLimitOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10071:43:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110511,
                  "nodeType": "ExpressionStatement",
                  "src": "10071:43:279"
                }
              ]
            },
            "baseFunctions": [112133],
            "documentation": {
              "id": 110488,
              "nodeType": "StructuredDocumentation",
              "src": "9783:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "53e043d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110496,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110495,
                  "name": "nonReentrant",
                  "nameLocations": ["9968:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "9968:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "9968:12:279"
              },
              {
                "id": 110498,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110497,
                  "name": "whenNotPaused",
                  "nameLocations": ["9989:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "9989:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "9989:13:279"
              }
            ],
            "name": "buyCreditLimitOnBehalfOf",
            "nameLocation": "9822:24:279",
            "overrides": {
              "id": 110494,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110493,
                  "name": "ISizeV1_7",
                  "nameLocations": ["9949:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "9949:9:279"
                }
              ],
              "src": "9940:19:279"
            },
            "parameters": {
              "id": 110492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110491,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "9885:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110513,
                  "src": "9847:52:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_memory_ptr",
                    "typeString": "struct BuyCreditLimitOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 110490,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110489,
                      "name": "BuyCreditLimitOnBehalfOfParams",
                      "nameLocations": ["9847:30:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 115987,
                      "src": "9847:30:279"
                    },
                    "referencedDeclaration": 115987,
                    "src": "9847:30:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BuyCreditLimitOnBehalfOfParams_$115987_storage_ptr",
                      "typeString": "struct BuyCreditLimitOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9846:54:279"
            },
            "returnParameters": {
              "id": 110499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10007:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110531,
            "nodeType": "FunctionDefinition",
            "src": "10153:214:279",
            "nodes": [],
            "body": {
              "id": 110530,
              "nodeType": "Block",
              "src": "10250:117:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110524,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110517,
                            "src": "10327:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SellCreditLimitParams_$120032_calldata_ptr",
                              "typeString": "struct SellCreditLimitParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 110525,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10347:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10351:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10347:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SellCreditLimitParams_$120032_calldata_ptr",
                              "typeString": "struct SellCreditLimitParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110523,
                          "name": "SellCreditLimitOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120038,
                          "src": "10286:31:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SellCreditLimitOnBehalfOfParams_$120038_storage_ptr_$",
                            "typeString": "type(struct SellCreditLimitOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": ["10319:6:279", "10335:10:279"],
                        "names": ["params", "onBehalfOf"],
                        "nodeType": "FunctionCall",
                        "src": "10286:73:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr",
                          "typeString": "struct SellCreditLimitOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr",
                          "typeString": "struct SellCreditLimitOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110522,
                      "name": "sellCreditLimitOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110557,
                      "src": "10260:25:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr_$returns$__$",
                        "typeString": "function (struct SellCreditLimitOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10260:100:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110529,
                  "nodeType": "ExpressionStatement",
                  "src": "10260:100:279"
                }
              ]
            },
            "baseFunctions": [111820],
            "documentation": {
              "id": 110514,
              "nodeType": "StructuredDocumentation",
              "src": "10127:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "ccd8d4d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellCreditLimit",
            "nameLocation": "10162:15:279",
            "overrides": {
              "id": 110520,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110519,
                  "name": "ISize",
                  "nameLocations": ["10243:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "10243:5:279"
                }
              ],
              "src": "10234:15:279"
            },
            "parameters": {
              "id": 110518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110517,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "10209:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110531,
                  "src": "10178:37:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SellCreditLimitParams_$120032_calldata_ptr",
                    "typeString": "struct SellCreditLimitParams"
                  },
                  "typeName": {
                    "id": 110516,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110515,
                      "name": "SellCreditLimitParams",
                      "nameLocations": ["10178:21:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 120032,
                      "src": "10178:21:279"
                    },
                    "referencedDeclaration": 120032,
                    "src": "10178:21:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SellCreditLimitParams_$120032_storage_ptr",
                      "typeString": "struct SellCreditLimitParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10177:39:279"
            },
            "returnParameters": {
              "id": 110521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10250:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110557,
            "nodeType": "FunctionDefinition",
            "src": "10403:312:279",
            "nodes": [],
            "body": {
              "id": 110556,
              "nodeType": "Block",
              "src": "10599:116:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110547,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110535,
                        "src": "10639:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr",
                          "typeString": "struct SellCreditLimitOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr",
                          "typeString": "struct SellCreditLimitOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110544,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "10609:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110546,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10615:23:279",
                      "memberName": "validateSellCreditLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120118,
                      "src": "10609:29:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SellCreditLimitOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 110548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10609:45:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110549,
                  "nodeType": "ExpressionStatement",
                  "src": "10609:45:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110553,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110535,
                        "src": "10693:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr",
                          "typeString": "struct SellCreditLimitOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr",
                          "typeString": "struct SellCreditLimitOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110550,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "10664:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110552,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10670:22:279",
                      "memberName": "executeSellCreditLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120175,
                      "src": "10664:28:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SellCreditLimitOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10664:44:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110555,
                  "nodeType": "ExpressionStatement",
                  "src": "10664:44:279"
                }
              ]
            },
            "baseFunctions": [112140],
            "documentation": {
              "id": 110532,
              "nodeType": "StructuredDocumentation",
              "src": "10373:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "4fd9a8a5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110540,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110539,
                  "name": "nonReentrant",
                  "nameLocations": ["10560:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "10560:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "10560:12:279"
              },
              {
                "id": 110542,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110541,
                  "name": "whenNotPaused",
                  "nameLocations": ["10581:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "10581:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "10581:13:279"
              }
            ],
            "name": "sellCreditLimitOnBehalfOf",
            "nameLocation": "10412:25:279",
            "overrides": {
              "id": 110538,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110537,
                  "name": "ISizeV1_7",
                  "nameLocations": ["10541:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "10541:9:279"
                }
              ],
              "src": "10532:19:279"
            },
            "parameters": {
              "id": 110536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110535,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "10477:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110557,
                  "src": "10438:53:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SellCreditLimitOnBehalfOfParams_$120038_memory_ptr",
                    "typeString": "struct SellCreditLimitOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 110534,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110533,
                      "name": "SellCreditLimitOnBehalfOfParams",
                      "nameLocations": ["10438:31:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 120038,
                      "src": "10438:31:279"
                    },
                    "referencedDeclaration": 120038,
                    "src": "10438:31:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SellCreditLimitOnBehalfOfParams_$120038_storage_ptr",
                      "typeString": "struct SellCreditLimitOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10437:55:279"
            },
            "returnParameters": {
              "id": 110543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10599:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110577,
            "nodeType": "FunctionDefinition",
            "src": "10747:259:279",
            "nodes": [],
            "body": {
              "id": 110576,
              "nodeType": "Block",
              "src": "10844:162:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110568,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110561,
                            "src": "10934:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BuyCreditMarketParams_$116172_calldata_ptr",
                              "typeString": "struct BuyCreditMarketParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 110569,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10954:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10958:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10954:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 110571,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10977:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10981:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10977:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_BuyCreditMarketParams_$116172_calldata_ptr",
                              "typeString": "struct BuyCreditMarketParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110567,
                          "name": "BuyCreditMarketOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116180,
                          "src": "10893:31:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_storage_ptr_$",
                            "typeString": "type(struct BuyCreditMarketOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "10926:6:279",
                          "10942:10:279",
                          "10966:9:279"
                        ],
                        "names": ["params", "onBehalfOf", "recipient"],
                        "nodeType": "FunctionCall",
                        "src": "10893:96:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr",
                          "typeString": "struct BuyCreditMarketOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr",
                          "typeString": "struct BuyCreditMarketOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110566,
                      "name": "buyCreditMarketOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110618,
                      "src": "10854:25:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr_$returns$__$",
                        "typeString": "function (struct BuyCreditMarketOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10854:145:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110575,
                  "nodeType": "ExpressionStatement",
                  "src": "10854:145:279"
                }
              ]
            },
            "baseFunctions": [111827],
            "documentation": {
              "id": 110558,
              "nodeType": "StructuredDocumentation",
              "src": "10721:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "e236052b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyCreditMarket",
            "nameLocation": "10756:15:279",
            "overrides": {
              "id": 110564,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110563,
                  "name": "ISize",
                  "nameLocations": ["10837:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "10837:5:279"
                }
              ],
              "src": "10828:15:279"
            },
            "parameters": {
              "id": 110562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110561,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "10803:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110577,
                  "src": "10772:37:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BuyCreditMarketParams_$116172_calldata_ptr",
                    "typeString": "struct BuyCreditMarketParams"
                  },
                  "typeName": {
                    "id": 110560,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110559,
                      "name": "BuyCreditMarketParams",
                      "nameLocations": ["10772:21:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 116172,
                      "src": "10772:21:279"
                    },
                    "referencedDeclaration": 116172,
                    "src": "10772:21:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BuyCreditMarketParams_$116172_storage_ptr",
                      "typeString": "struct BuyCreditMarketParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10771:39:279"
            },
            "returnParameters": {
              "id": 110565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10844:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110618,
            "nodeType": "FunctionDefinition",
            "src": "11042:485:279",
            "nodes": [],
            "body": {
              "id": 110617,
              "nodeType": "Block",
              "src": "11238:289:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110593,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110581,
                        "src": "11278:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr",
                          "typeString": "struct BuyCreditMarketOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr",
                          "typeString": "struct BuyCreditMarketOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110590,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "11248:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110592,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11254:23:279",
                      "memberName": "validateBuyCreditMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116503,
                      "src": "11248:29:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct BuyCreditMarketOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 110594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11248:45:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110595,
                  "nodeType": "ExpressionStatement",
                  "src": "11248:45:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110599,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110581,
                        "src": "11332:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr",
                          "typeString": "struct BuyCreditMarketOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr",
                          "typeString": "struct BuyCreditMarketOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110596,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "11303:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110598,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11309:22:279",
                      "memberName": "executeBuyCreditMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116863,
                      "src": "11303:28:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct BuyCreditMarketOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11303:44:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110601,
                  "nodeType": "ExpressionStatement",
                  "src": "11303:44:279"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 110602,
                          "name": "externalParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110581,
                          "src": "11361:14:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr",
                            "typeString": "struct BuyCreditMarketOnBehalfOfParams memory"
                          }
                        },
                        "id": 110603,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11376:6:279",
                        "memberName": "params",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116175,
                        "src": "11361:21:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BuyCreditMarketParams_$116172_memory_ptr",
                          "typeString": "struct BuyCreditMarketParams memory"
                        }
                      },
                      "id": 110604,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11383:16:279",
                      "memberName": "creditPositionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116157,
                      "src": "11361:38:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 110605,
                      "name": "RESERVED_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113961,
                      "src": "11403:11:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11361:53:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110616,
                  "nodeType": "IfStatement",
                  "src": "11357:164:279",
                  "trueBody": {
                    "id": 110615,
                    "nodeType": "Block",
                    "src": "11416:105:279",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 110610,
                                  "name": "externalParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 110581,
                                  "src": "11479:14:279",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr",
                                    "typeString": "struct BuyCreditMarketOnBehalfOfParams memory"
                                  }
                                },
                                "id": 110611,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11494:6:279",
                                "memberName": "params",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 116175,
                                "src": "11479:21:279",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BuyCreditMarketParams_$116172_memory_ptr",
                                  "typeString": "struct BuyCreditMarketParams memory"
                                }
                              },
                              "id": 110612,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11501:8:279",
                              "memberName": "borrower",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 116155,
                              "src": "11479:30:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 110607,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111217,
                              "src": "11430:5:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$111213_storage",
                                "typeString": "struct State storage ref"
                              }
                            },
                            "id": 110609,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11436:42:279",
                            "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115537,
                            "src": "11430:48:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                              "typeString": "function (struct State storage pointer,address) view"
                            }
                          },
                          "id": 110613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11430:80:279",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 110614,
                        "nodeType": "ExpressionStatement",
                        "src": "11430:80:279"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [112147],
            "documentation": {
              "id": 110578,
              "nodeType": "StructuredDocumentation",
              "src": "11012:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "834dafb5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110586,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110585,
                  "name": "nonReentrant",
                  "nameLocations": ["11199:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "11199:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "11199:12:279"
              },
              {
                "id": 110588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110587,
                  "name": "whenNotPaused",
                  "nameLocations": ["11220:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "11220:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "11220:13:279"
              }
            ],
            "name": "buyCreditMarketOnBehalfOf",
            "nameLocation": "11051:25:279",
            "overrides": {
              "id": 110584,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110583,
                  "name": "ISizeV1_7",
                  "nameLocations": ["11180:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "11180:9:279"
                }
              ],
              "src": "11171:19:279"
            },
            "parameters": {
              "id": 110582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110581,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "11116:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110618,
                  "src": "11077:53:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_memory_ptr",
                    "typeString": "struct BuyCreditMarketOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 110580,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110579,
                      "name": "BuyCreditMarketOnBehalfOfParams",
                      "nameLocations": ["11077:31:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 116180,
                      "src": "11077:31:279"
                    },
                    "referencedDeclaration": 116180,
                    "src": "11077:31:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BuyCreditMarketOnBehalfOfParams_$116180_storage_ptr",
                      "typeString": "struct BuyCreditMarketOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11076:55:279"
            },
            "returnParameters": {
              "id": 110589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11238:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110638,
            "nodeType": "FunctionDefinition",
            "src": "11559:261:279",
            "nodes": [],
            "body": {
              "id": 110637,
              "nodeType": "Block",
              "src": "11656:164:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110629,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110622,
                            "src": "11748:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SellCreditMarketParams_$120222_memory_ptr",
                              "typeString": "struct SellCreditMarketParams memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 110630,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11768:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11772:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11768:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 110632,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11791:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11795:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11791:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SellCreditMarketParams_$120222_memory_ptr",
                              "typeString": "struct SellCreditMarketParams memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110628,
                          "name": "SellCreditMarketOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120230,
                          "src": "11706:32:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SellCreditMarketOnBehalfOfParams_$120230_storage_ptr_$",
                            "typeString": "type(struct SellCreditMarketOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "11740:6:279",
                          "11756:10:279",
                          "11780:9:279"
                        ],
                        "names": ["params", "onBehalfOf", "recipient"],
                        "nodeType": "FunctionCall",
                        "src": "11706:97:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr",
                          "typeString": "struct SellCreditMarketOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr",
                          "typeString": "struct SellCreditMarketOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110627,
                      "name": "sellCreditMarketOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110678,
                      "src": "11666:26:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr_$returns$__$",
                        "typeString": "function (struct SellCreditMarketOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11666:147:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110636,
                  "nodeType": "ExpressionStatement",
                  "src": "11666:147:279"
                }
              ]
            },
            "baseFunctions": [111834],
            "documentation": {
              "id": 110619,
              "nodeType": "StructuredDocumentation",
              "src": "11533:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "8ea68d7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellCreditMarket",
            "nameLocation": "11568:16:279",
            "overrides": {
              "id": 110625,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110624,
                  "name": "ISize",
                  "nameLocations": ["11649:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "11649:5:279"
                }
              ],
              "src": "11640:15:279"
            },
            "parameters": {
              "id": 110623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110622,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "11615:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110638,
                  "src": "11585:36:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SellCreditMarketParams_$120222_memory_ptr",
                    "typeString": "struct SellCreditMarketParams"
                  },
                  "typeName": {
                    "id": 110621,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110620,
                      "name": "SellCreditMarketParams",
                      "nameLocations": ["11585:22:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 120222,
                      "src": "11585:22:279"
                    },
                    "referencedDeclaration": 120222,
                    "src": "11585:22:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SellCreditMarketParams_$120222_storage_ptr",
                      "typeString": "struct SellCreditMarketParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11584:38:279"
            },
            "returnParameters": {
              "id": 110626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11656:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110678,
            "nodeType": "FunctionDefinition",
            "src": "11856:484:279",
            "nodes": [],
            "body": {
              "id": 110677,
              "nodeType": "Block",
              "src": "12054:286:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110654,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110642,
                        "src": "12095:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr",
                          "typeString": "struct SellCreditMarketOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr",
                          "typeString": "struct SellCreditMarketOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110651,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "12064:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110653,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12070:24:279",
                      "memberName": "validateSellCreditMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120531,
                      "src": "12064:30:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SellCreditMarketOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 110655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12064:46:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110656,
                  "nodeType": "ExpressionStatement",
                  "src": "12064:46:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110660,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110642,
                        "src": "12150:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr",
                          "typeString": "struct SellCreditMarketOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr",
                          "typeString": "struct SellCreditMarketOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110657,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "12120:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110659,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12126:23:279",
                      "memberName": "executeSellCreditMarket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120881,
                      "src": "12120:29:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SellCreditMarketOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12120:45:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110662,
                  "nodeType": "ExpressionStatement",
                  "src": "12120:45:279"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 110663,
                          "name": "externalParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110642,
                          "src": "12179:14:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr",
                            "typeString": "struct SellCreditMarketOnBehalfOfParams memory"
                          }
                        },
                        "id": 110664,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12194:6:279",
                        "memberName": "params",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 120225,
                        "src": "12179:21:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SellCreditMarketParams_$120222_memory_ptr",
                          "typeString": "struct SellCreditMarketParams memory"
                        }
                      },
                      "id": 110665,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12201:16:279",
                      "memberName": "creditPositionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120207,
                      "src": "12179:38:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 110666,
                      "name": "RESERVED_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113961,
                      "src": "12221:11:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12179:53:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110676,
                  "nodeType": "IfStatement",
                  "src": "12175:159:279",
                  "trueBody": {
                    "id": 110675,
                    "nodeType": "Block",
                    "src": "12234:100:279",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 110671,
                                "name": "externalParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110642,
                                "src": "12297:14:279",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr",
                                  "typeString": "struct SellCreditMarketOnBehalfOfParams memory"
                                }
                              },
                              "id": 110672,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12312:10:279",
                              "memberName": "onBehalfOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 120227,
                              "src": "12297:25:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 110668,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111217,
                              "src": "12248:5:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_State_$111213_storage",
                                "typeString": "struct State storage ref"
                              }
                            },
                            "id": 110670,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12254:42:279",
                            "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115537,
                            "src": "12248:48:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                              "typeString": "function (struct State storage pointer,address) view"
                            }
                          },
                          "id": 110673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12248:75:279",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 110674,
                        "nodeType": "ExpressionStatement",
                        "src": "12248:75:279"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [112154],
            "documentation": {
              "id": 110639,
              "nodeType": "StructuredDocumentation",
              "src": "11826:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "3962a686",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110647,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110646,
                  "name": "nonReentrant",
                  "nameLocations": ["12015:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "12015:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "12015:12:279"
              },
              {
                "id": 110649,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110648,
                  "name": "whenNotPaused",
                  "nameLocations": ["12036:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "12036:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "12036:13:279"
              }
            ],
            "name": "sellCreditMarketOnBehalfOf",
            "nameLocation": "11865:26:279",
            "overrides": {
              "id": 110645,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110644,
                  "name": "ISizeV1_7",
                  "nameLocations": ["11996:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "11996:9:279"
                }
              ],
              "src": "11987:19:279"
            },
            "parameters": {
              "id": 110643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110642,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "11932:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110678,
                  "src": "11892:54:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_memory_ptr",
                    "typeString": "struct SellCreditMarketOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 110641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110640,
                      "name": "SellCreditMarketOnBehalfOfParams",
                      "nameLocations": ["11892:32:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 120230,
                      "src": "11892:32:279"
                    },
                    "referencedDeclaration": 120230,
                    "src": "11892:32:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SellCreditMarketOnBehalfOfParams_$120230_storage_ptr",
                      "typeString": "struct SellCreditMarketOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11891:56:279"
            },
            "returnParameters": {
              "id": 110650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12054:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110704,
            "nodeType": "FunctionDefinition",
            "src": "12372:184:279",
            "nodes": [],
            "body": {
              "id": 110703,
              "nodeType": "Block",
              "src": "12476:80:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110694,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110682,
                        "src": "12506:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RepayParams_$119616_calldata_ptr",
                          "typeString": "struct RepayParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_RepayParams_$119616_calldata_ptr",
                          "typeString": "struct RepayParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110691,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "12486:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110693,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12492:13:279",
                      "memberName": "validateRepay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119679,
                      "src": "12486:19:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_RepayParams_$119616_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct RepayParams memory) view"
                      }
                    },
                    "id": 110695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12486:27:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110696,
                  "nodeType": "ExpressionStatement",
                  "src": "12486:27:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110700,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110682,
                        "src": "12542:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RepayParams_$119616_calldata_ptr",
                          "typeString": "struct RepayParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_RepayParams_$119616_calldata_ptr",
                          "typeString": "struct RepayParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110697,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "12523:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110699,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12529:12:279",
                      "memberName": "executeRepay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119746,
                      "src": "12523:18:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_RepayParams_$119616_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct RepayParams memory)"
                      }
                    },
                    "id": 110701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12523:26:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110702,
                  "nodeType": "ExpressionStatement",
                  "src": "12523:26:279"
                }
              ]
            },
            "baseFunctions": [111841],
            "documentation": {
              "id": 110679,
              "nodeType": "StructuredDocumentation",
              "src": "12346:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "7f417c06",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110687,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110686,
                  "name": "nonReentrant",
                  "nameLocations": ["12449:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "12449:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "12449:12:279"
              },
              {
                "id": 110689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110688,
                  "name": "whenNotPaused",
                  "nameLocations": ["12462:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "12462:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "12462:13:279"
              }
            ],
            "name": "repay",
            "nameLocation": "12381:5:279",
            "overrides": {
              "id": 110685,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110684,
                  "name": "ISize",
                  "nameLocations": ["12442:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "12442:5:279"
                }
              ],
              "src": "12433:15:279"
            },
            "parameters": {
              "id": 110683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110682,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "12408:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110704,
                  "src": "12387:27:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RepayParams_$119616_calldata_ptr",
                    "typeString": "struct RepayParams"
                  },
                  "typeName": {
                    "id": 110681,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110680,
                      "name": "RepayParams",
                      "nameLocations": ["12387:11:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 119616,
                      "src": "12387:11:279"
                    },
                    "referencedDeclaration": 119616,
                    "src": "12387:11:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RepayParams_$119616_storage_ptr",
                      "typeString": "struct RepayParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12386:29:279"
            },
            "returnParameters": {
              "id": 110690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12476:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110730,
            "nodeType": "FunctionDefinition",
            "src": "12588:184:279",
            "nodes": [],
            "body": {
              "id": 110729,
              "nodeType": "Block",
              "src": "12692:80:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110720,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110708,
                        "src": "12722:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimParams_$116886_calldata_ptr",
                          "typeString": "struct ClaimParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ClaimParams_$116886_calldata_ptr",
                          "typeString": "struct ClaimParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110717,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "12702:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110719,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12708:13:279",
                      "memberName": "validateClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116949,
                      "src": "12702:19:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_ClaimParams_$116886_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct ClaimParams memory) view"
                      }
                    },
                    "id": 110721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12702:27:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110722,
                  "nodeType": "ExpressionStatement",
                  "src": "12702:27:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110726,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110708,
                        "src": "12758:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimParams_$116886_calldata_ptr",
                          "typeString": "struct ClaimParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ClaimParams_$116886_calldata_ptr",
                          "typeString": "struct ClaimParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110723,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "12739:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110725,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12745:12:279",
                      "memberName": "executeClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117027,
                      "src": "12739:18:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_ClaimParams_$116886_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct ClaimParams memory)"
                      }
                    },
                    "id": 110727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12739:26:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110728,
                  "nodeType": "ExpressionStatement",
                  "src": "12739:26:279"
                }
              ]
            },
            "baseFunctions": [111848],
            "documentation": {
              "id": 110705,
              "nodeType": "StructuredDocumentation",
              "src": "12562:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "f45bf01c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110712,
                  "name": "nonReentrant",
                  "nameLocations": ["12665:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "12665:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "12665:12:279"
              },
              {
                "id": 110715,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110714,
                  "name": "whenNotPaused",
                  "nameLocations": ["12678:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "12678:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "12678:13:279"
              }
            ],
            "name": "claim",
            "nameLocation": "12597:5:279",
            "overrides": {
              "id": 110711,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110710,
                  "name": "ISize",
                  "nameLocations": ["12658:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "12658:5:279"
                }
              ],
              "src": "12649:15:279"
            },
            "parameters": {
              "id": 110709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110708,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "12624:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110730,
                  "src": "12603:27:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimParams_$116886_calldata_ptr",
                    "typeString": "struct ClaimParams"
                  },
                  "typeName": {
                    "id": 110707,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110706,
                      "name": "ClaimParams",
                      "nameLocations": ["12603:11:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 116886,
                      "src": "12603:11:279"
                    },
                    "referencedDeclaration": 116886,
                    "src": "12603:11:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimParams_$116886_storage_ptr",
                      "typeString": "struct ClaimParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12602:29:279"
            },
            "returnParameters": {
              "id": 110716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12692:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110766,
            "nodeType": "FunctionDefinition",
            "src": "12804:424:279",
            "nodes": [],
            "body": {
              "id": 110765,
              "nodeType": "Block",
              "src": "13018:210:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110748,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110734,
                        "src": "13052:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidateParams_$118627_calldata_ptr",
                          "typeString": "struct LiquidateParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidateParams_$118627_calldata_ptr",
                          "typeString": "struct LiquidateParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110745,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "13028:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13034:17:279",
                      "memberName": "validateLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118706,
                      "src": "13028:23:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_LiquidateParams_$118627_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct LiquidateParams memory) view"
                      }
                    },
                    "id": 110749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13028:31:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110750,
                  "nodeType": "ExpressionStatement",
                  "src": "13028:31:279"
                },
                {
                  "expression": {
                    "id": 110756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110751,
                      "name": "liquidatorProfitCollateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110743,
                      "src": "13069:31:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 110754,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110734,
                          "src": "13126:6:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LiquidateParams_$118627_calldata_ptr",
                            "typeString": "struct LiquidateParams calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_LiquidateParams_$118627_calldata_ptr",
                            "typeString": "struct LiquidateParams calldata"
                          }
                        ],
                        "expression": {
                          "id": 110752,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111217,
                          "src": "13103:5:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$111213_storage",
                            "typeString": "struct State storage ref"
                          }
                        },
                        "id": 110753,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13109:16:279",
                        "memberName": "executeLiquidate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 118958,
                        "src": "13103:22:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_LiquidateParams_$118627_memory_ptr_$returns$_t_uint256_$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                          "typeString": "function (struct State storage pointer,struct LiquidateParams memory) returns (uint256)"
                        }
                      },
                      "id": 110755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13103:30:279",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13069:64:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110757,
                  "nodeType": "ExpressionStatement",
                  "src": "13069:64:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110761,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110734,
                        "src": "13181:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidateParams_$118627_calldata_ptr",
                          "typeString": "struct LiquidateParams calldata"
                        }
                      },
                      {
                        "id": 110762,
                        "name": "liquidatorProfitCollateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110743,
                        "src": "13189:31:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidateParams_$118627_calldata_ptr",
                          "typeString": "struct LiquidateParams calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 110758,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "13143:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110760,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13149:31:279",
                      "memberName": "validateMinimumCollateralProfit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118733,
                      "src": "13143:37:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_State_$111213_storage_ptr_$_t_struct$_LiquidateParams_$118627_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct LiquidateParams memory,uint256) pure"
                      }
                    },
                    "id": 110763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13143:78:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110764,
                  "nodeType": "ExpressionStatement",
                  "src": "13143:78:279"
                }
              ]
            },
            "baseFunctions": [111857],
            "documentation": {
              "id": 110731,
              "nodeType": "StructuredDocumentation",
              "src": "12778:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "e05001f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110739,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110738,
                  "name": "nonReentrant",
                  "nameLocations": ["12921:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "12921:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "12921:12:279"
              },
              {
                "id": 110741,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110740,
                  "name": "whenNotPaused",
                  "nameLocations": ["12942:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "12942:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "12942:13:279"
              }
            ],
            "name": "liquidate",
            "nameLocation": "12813:9:279",
            "overrides": {
              "id": 110737,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110736,
                  "name": "ISize",
                  "nameLocations": ["12906:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "12906:5:279"
                }
              ],
              "src": "12897:15:279"
            },
            "parameters": {
              "id": 110735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110734,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "12848:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110766,
                  "src": "12823:31:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LiquidateParams_$118627_calldata_ptr",
                    "typeString": "struct LiquidateParams"
                  },
                  "typeName": {
                    "id": 110733,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110732,
                      "name": "LiquidateParams",
                      "nameLocations": ["12823:15:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 118627,
                      "src": "12823:15:279"
                    },
                    "referencedDeclaration": 118627,
                    "src": "12823:15:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidateParams_$118627_storage_ptr",
                      "typeString": "struct LiquidateParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12822:33:279"
            },
            "returnParameters": {
              "id": 110744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110743,
                  "mutability": "mutable",
                  "name": "liquidatorProfitCollateralToken",
                  "nameLocation": "12981:31:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110766,
                  "src": "12973:39:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12973:7:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12972:41:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110786,
            "nodeType": "FunctionDefinition",
            "src": "13260:251:279",
            "nodes": [],
            "body": {
              "id": 110785,
              "nodeType": "Block",
              "src": "13353:158:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110777,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110770,
                            "src": "13439:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SelfLiquidateParams_$119768_calldata_ptr",
                              "typeString": "struct SelfLiquidateParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 110778,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13459:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13463:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13459:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 110780,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13482:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13486:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13482:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SelfLiquidateParams_$119768_calldata_ptr",
                              "typeString": "struct SelfLiquidateParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110776,
                          "name": "SelfLiquidateOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119776,
                          "src": "13400:29:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SelfLiquidateOnBehalfOfParams_$119776_storage_ptr_$",
                            "typeString": "type(struct SelfLiquidateOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "13431:6:279",
                          "13447:10:279",
                          "13471:9:279"
                        ],
                        "names": ["params", "onBehalfOf", "recipient"],
                        "nodeType": "FunctionCall",
                        "src": "13400:94:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr",
                          "typeString": "struct SelfLiquidateOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr",
                          "typeString": "struct SelfLiquidateOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110775,
                      "name": "selfLiquidateOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110812,
                      "src": "13363:23:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr_$returns$__$",
                        "typeString": "function (struct SelfLiquidateOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13363:141:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110784,
                  "nodeType": "ExpressionStatement",
                  "src": "13363:141:279"
                }
              ]
            },
            "baseFunctions": [111864],
            "documentation": {
              "id": 110767,
              "nodeType": "StructuredDocumentation",
              "src": "13234:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "fd17174a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selfLiquidate",
            "nameLocation": "13269:13:279",
            "overrides": {
              "id": 110773,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110772,
                  "name": "ISize",
                  "nameLocations": ["13346:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "13346:5:279"
                }
              ],
              "src": "13337:15:279"
            },
            "parameters": {
              "id": 110771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110770,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "13312:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110786,
                  "src": "13283:35:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SelfLiquidateParams_$119768_calldata_ptr",
                    "typeString": "struct SelfLiquidateParams"
                  },
                  "typeName": {
                    "id": 110769,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110768,
                      "name": "SelfLiquidateParams",
                      "nameLocations": ["13283:19:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 119768,
                      "src": "13283:19:279"
                    },
                    "referencedDeclaration": 119768,
                    "src": "13283:19:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SelfLiquidateParams_$119768_storage_ptr",
                      "typeString": "struct SelfLiquidateParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13282:37:279"
            },
            "returnParameters": {
              "id": 110774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13353:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110812,
            "nodeType": "FunctionDefinition",
            "src": "13547:304:279",
            "nodes": [],
            "body": {
              "id": 110811,
              "nodeType": "Block",
              "src": "13739:112:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110802,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110790,
                        "src": "13777:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr",
                          "typeString": "struct SelfLiquidateOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr",
                          "typeString": "struct SelfLiquidateOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110799,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "13749:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110801,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13755:21:279",
                      "memberName": "validateSelfLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119923,
                      "src": "13749:27:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SelfLiquidateOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 110803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13749:43:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110804,
                  "nodeType": "ExpressionStatement",
                  "src": "13749:43:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110808,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110790,
                        "src": "13829:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr",
                          "typeString": "struct SelfLiquidateOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr",
                          "typeString": "struct SelfLiquidateOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110805,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "13802:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110807,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13808:20:279",
                      "memberName": "executeSelfLiquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120010,
                      "src": "13802:26:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SelfLiquidateOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13802:42:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110810,
                  "nodeType": "ExpressionStatement",
                  "src": "13802:42:279"
                }
              ]
            },
            "baseFunctions": [112161],
            "documentation": {
              "id": 110787,
              "nodeType": "StructuredDocumentation",
              "src": "13517:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "536b9c79",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110795,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110794,
                  "name": "nonReentrant",
                  "nameLocations": ["13700:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "13700:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "13700:12:279"
              },
              {
                "id": 110797,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110796,
                  "name": "whenNotPaused",
                  "nameLocations": ["13721:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "13721:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "13721:13:279"
              }
            ],
            "name": "selfLiquidateOnBehalfOf",
            "nameLocation": "13556:23:279",
            "overrides": {
              "id": 110793,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110792,
                  "name": "ISizeV1_7",
                  "nameLocations": ["13681:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "13681:9:279"
                }
              ],
              "src": "13672:19:279"
            },
            "parameters": {
              "id": 110791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110790,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "13617:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110812,
                  "src": "13580:51:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SelfLiquidateOnBehalfOfParams_$119776_memory_ptr",
                    "typeString": "struct SelfLiquidateOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 110789,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110788,
                      "name": "SelfLiquidateOnBehalfOfParams",
                      "nameLocations": ["13580:29:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 119776,
                      "src": "13580:29:279"
                    },
                    "referencedDeclaration": 119776,
                    "src": "13580:29:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SelfLiquidateOnBehalfOfParams_$119776_storage_ptr",
                      "typeString": "struct SelfLiquidateOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13579:53:279"
            },
            "returnParameters": {
              "id": 110798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13739:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110862,
            "nodeType": "FunctionDefinition",
            "src": "13883:677:279",
            "nodes": [],
            "body": {
              "id": 110861,
              "nodeType": "Block",
              "src": "14214:346:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110835,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110816,
                        "src": "14263:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidateWithReplacementParams_$118999_calldata_ptr",
                          "typeString": "struct LiquidateWithReplacementParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidateWithReplacementParams_$118999_calldata_ptr",
                          "typeString": "struct LiquidateWithReplacementParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110832,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "14224:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14230:32:279",
                      "memberName": "validateLiquidateWithReplacement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119166,
                      "src": "14224:38:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_LiquidateWithReplacementParams_$118999_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct LiquidateWithReplacementParams memory) view"
                      }
                    },
                    "id": 110836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14224:46:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110837,
                  "nodeType": "ExpressionStatement",
                  "src": "14224:46:279"
                },
                {
                  "expression": {
                    "id": 110845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 110838,
                          "name": "liquidatorProfitCollateralToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110828,
                          "src": "14281:31:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 110839,
                          "name": "liquidatorProfitBorrowToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110830,
                          "src": "14314:27:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 110840,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14280:62:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 110843,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110816,
                          "src": "14383:6:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LiquidateWithReplacementParams_$118999_calldata_ptr",
                            "typeString": "struct LiquidateWithReplacementParams calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_LiquidateWithReplacementParams_$118999_calldata_ptr",
                            "typeString": "struct LiquidateWithReplacementParams calldata"
                          }
                        ],
                        "expression": {
                          "id": 110841,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111217,
                          "src": "14345:5:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_State_$111213_storage",
                            "typeString": "struct State storage ref"
                          }
                        },
                        "id": 110842,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14351:31:279",
                        "memberName": "executeLiquidateWithReplacement",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 119377,
                        "src": "14345:37:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_LiquidateWithReplacementParams_$118999_memory_ptr_$returns$_t_uint256_$_t_uint256_$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                          "typeString": "function (struct State storage pointer,struct LiquidateWithReplacementParams memory) returns (uint256,uint256)"
                        }
                      },
                      "id": 110844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14345:45:279",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "14280:110:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110846,
                  "nodeType": "ExpressionStatement",
                  "src": "14280:110:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 110850,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110816,
                          "src": "14449:6:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LiquidateWithReplacementParams_$118999_calldata_ptr",
                            "typeString": "struct LiquidateWithReplacementParams calldata"
                          }
                        },
                        "id": 110851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14456:8:279",
                        "memberName": "borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 118988,
                        "src": "14449:15:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 110847,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "14400:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110849,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14406:42:279",
                      "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115537,
                      "src": "14400:48:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,address) view"
                      }
                    },
                    "id": 110852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14400:65:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110853,
                  "nodeType": "ExpressionStatement",
                  "src": "14400:65:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110857,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110816,
                        "src": "14513:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidateWithReplacementParams_$118999_calldata_ptr",
                          "typeString": "struct LiquidateWithReplacementParams calldata"
                        }
                      },
                      {
                        "id": 110858,
                        "name": "liquidatorProfitCollateralToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110828,
                        "src": "14521:31:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidateWithReplacementParams_$118999_calldata_ptr",
                          "typeString": "struct LiquidateWithReplacementParams calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 110854,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "14475:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110856,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14481:31:279",
                      "memberName": "validateMinimumCollateralProfit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119194,
                      "src": "14475:37:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_State_$111213_storage_ptr_$_t_struct$_LiquidateWithReplacementParams_$118999_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct LiquidateWithReplacementParams memory,uint256) pure"
                      }
                    },
                    "id": 110859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14475:78:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110860,
                  "nodeType": "ExpressionStatement",
                  "src": "14475:78:279"
                }
              ]
            },
            "baseFunctions": [111875],
            "documentation": {
              "id": 110813,
              "nodeType": "StructuredDocumentation",
              "src": "13857:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "d927acef",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110821,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110820,
                  "name": "nonReentrant",
                  "nameLocations": ["14030:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "14030:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "14030:12:279"
              },
              {
                "id": 110823,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110822,
                  "name": "whenNotPaused",
                  "nameLocations": ["14051:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "14051:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "14051:13:279"
              },
              {
                "arguments": [
                  {
                    "id": 110825,
                    "name": "KEEPER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 109159,
                    "src": "14102:11:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 110826,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110824,
                  "name": "onlyRoleOrSizeFactoryHasRole",
                  "nameLocations": ["14073:28:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 110215,
                  "src": "14073:28:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "14073:41:279"
              }
            ],
            "name": "liquidateWithReplacement",
            "nameLocation": "13892:24:279",
            "overrides": {
              "id": 110819,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110818,
                  "name": "ISize",
                  "nameLocations": ["14015:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "14015:5:279"
                }
              ],
              "src": "14006:15:279"
            },
            "parameters": {
              "id": 110817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110816,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "13957:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110862,
                  "src": "13917:46:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LiquidateWithReplacementParams_$118999_calldata_ptr",
                    "typeString": "struct LiquidateWithReplacementParams"
                  },
                  "typeName": {
                    "id": 110815,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110814,
                      "name": "LiquidateWithReplacementParams",
                      "nameLocations": ["13917:30:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 118999,
                      "src": "13917:30:279"
                    },
                    "referencedDeclaration": 118999,
                    "src": "13917:30:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidateWithReplacementParams_$118999_storage_ptr",
                      "typeString": "struct LiquidateWithReplacementParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13916:48:279"
            },
            "returnParameters": {
              "id": 110831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110828,
                  "mutability": "mutable",
                  "name": "liquidatorProfitCollateralToken",
                  "nameLocation": "14140:31:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110862,
                  "src": "14132:39:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14132:7:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110830,
                  "mutability": "mutable",
                  "name": "liquidatorProfitBorrowToken",
                  "nameLocation": "14181:27:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110862,
                  "src": "14173:35:279",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14173:7:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14131:78:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110880,
            "nodeType": "FunctionDefinition",
            "src": "14592:194:279",
            "nodes": [],
            "body": {
              "id": 110879,
              "nodeType": "Block",
              "src": "14679:107:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110873,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110866,
                            "src": "14746:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CompensateParams_$117056_calldata_ptr",
                              "typeString": "struct CompensateParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 110874,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14766:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14770:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "14766:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_CompensateParams_$117056_calldata_ptr",
                              "typeString": "struct CompensateParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110872,
                          "name": "CompensateOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117062,
                          "src": "14710:26:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_CompensateOnBehalfOfParams_$117062_storage_ptr_$",
                            "typeString": "type(struct CompensateOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": ["14738:6:279", "14754:10:279"],
                        "names": ["params", "onBehalfOf"],
                        "nodeType": "FunctionCall",
                        "src": "14710:68:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr",
                          "typeString": "struct CompensateOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr",
                          "typeString": "struct CompensateOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110871,
                      "name": "compensateOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110910,
                      "src": "14689:20:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr_$returns$__$",
                        "typeString": "function (struct CompensateOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14689:90:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110878,
                  "nodeType": "ExpressionStatement",
                  "src": "14689:90:279"
                }
              ]
            },
            "baseFunctions": [111882],
            "documentation": {
              "id": 110863,
              "nodeType": "StructuredDocumentation",
              "src": "14566:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "8e572776",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compensate",
            "nameLocation": "14601:10:279",
            "overrides": {
              "id": 110869,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110868,
                  "name": "ISize",
                  "nameLocations": ["14672:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "14672:5:279"
                }
              ],
              "src": "14663:15:279"
            },
            "parameters": {
              "id": 110867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110866,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "14638:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110880,
                  "src": "14612:32:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CompensateParams_$117056_calldata_ptr",
                    "typeString": "struct CompensateParams"
                  },
                  "typeName": {
                    "id": 110865,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110864,
                      "name": "CompensateParams",
                      "nameLocations": ["14612:16:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 117056,
                      "src": "14612:16:279"
                    },
                    "referencedDeclaration": 117056,
                    "src": "14612:16:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CompensateParams_$117056_storage_ptr",
                      "typeString": "struct CompensateParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14611:34:279"
            },
            "returnParameters": {
              "id": 110870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14679:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110910,
            "nodeType": "FunctionDefinition",
            "src": "14822:354:279",
            "nodes": [],
            "body": {
              "id": 110909,
              "nodeType": "Block",
              "src": "15070:106:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110900,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110884,
                        "src": "15105:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr",
                          "typeString": "struct CompensateOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr",
                          "typeString": "struct CompensateOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110897,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "15080:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110899,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15086:18:279",
                      "memberName": "validateCompensate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117303,
                      "src": "15080:24:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct CompensateOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 110901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15080:40:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110902,
                  "nodeType": "ExpressionStatement",
                  "src": "15080:40:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110906,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110884,
                        "src": "15154:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr",
                          "typeString": "struct CompensateOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr",
                          "typeString": "struct CompensateOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110903,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "15130:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110905,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15136:17:279",
                      "memberName": "executeCompensate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117427,
                      "src": "15130:23:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct CompensateOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15130:39:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110908,
                  "nodeType": "ExpressionStatement",
                  "src": "15130:39:279"
                }
              ]
            },
            "baseFunctions": [112168],
            "documentation": {
              "id": 110881,
              "nodeType": "StructuredDocumentation",
              "src": "14792:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "3ae6d7c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110888,
                  "name": "nonReentrant",
                  "nameLocations": ["14969:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "14969:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "14969:12:279"
              },
              {
                "id": 110891,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110890,
                  "name": "whenNotPaused",
                  "nameLocations": ["14990:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "14990:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "14990:13:279"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 110893,
                      "name": "externalParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110884,
                      "src": "15039:14:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr",
                        "typeString": "struct CompensateOnBehalfOfParams memory"
                      }
                    },
                    "id": 110894,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15054:10:279",
                    "memberName": "onBehalfOf",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 117061,
                    "src": "15039:25:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 110895,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110892,
                  "name": "mustImproveCollateralRatio",
                  "nameLocations": ["15012:26:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 110259,
                  "src": "15012:26:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "15012:53:279"
              }
            ],
            "name": "compensateOnBehalfOf",
            "nameLocation": "14831:20:279",
            "overrides": {
              "id": 110887,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110886,
                  "name": "ISizeV1_7",
                  "nameLocations": ["14950:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "14950:9:279"
                }
              ],
              "src": "14941:19:279"
            },
            "parameters": {
              "id": 110885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110884,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "14886:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110910,
                  "src": "14852:48:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CompensateOnBehalfOfParams_$117062_memory_ptr",
                    "typeString": "struct CompensateOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 110883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110882,
                      "name": "CompensateOnBehalfOfParams",
                      "nameLocations": ["14852:26:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 117062,
                      "src": "14852:26:279"
                    },
                    "referencedDeclaration": 117062,
                    "src": "14852:26:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CompensateOnBehalfOfParams_$117062_storage_ptr",
                      "typeString": "struct CompensateOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14851:50:279"
            },
            "returnParameters": {
              "id": 110896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15070:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110936,
            "nodeType": "FunctionDefinition",
            "src": "15208:256:279",
            "nodes": [],
            "body": {
              "id": 110935,
              "nodeType": "Block",
              "src": "15370:94:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110926,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110914,
                        "src": "15407:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PartialRepayParams_$119407_calldata_ptr",
                          "typeString": "struct PartialRepayParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PartialRepayParams_$119407_calldata_ptr",
                          "typeString": "struct PartialRepayParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110923,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "15380:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110925,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15386:20:279",
                      "memberName": "validatePartialRepay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119533,
                      "src": "15380:26:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_PartialRepayParams_$119407_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct PartialRepayParams memory) view"
                      }
                    },
                    "id": 110927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15380:34:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110928,
                  "nodeType": "ExpressionStatement",
                  "src": "15380:34:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110932,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110914,
                        "src": "15450:6:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PartialRepayParams_$119407_calldata_ptr",
                          "typeString": "struct PartialRepayParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PartialRepayParams_$119407_calldata_ptr",
                          "typeString": "struct PartialRepayParams calldata"
                        }
                      ],
                      "expression": {
                        "id": 110929,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "15424:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110931,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15430:19:279",
                      "memberName": "executePartialRepay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119592,
                      "src": "15424:25:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_PartialRepayParams_$119407_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct PartialRepayParams memory)"
                      }
                    },
                    "id": 110933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15424:33:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110934,
                  "nodeType": "ExpressionStatement",
                  "src": "15424:33:279"
                }
              ]
            },
            "baseFunctions": [111889],
            "documentation": {
              "id": 110911,
              "nodeType": "StructuredDocumentation",
              "src": "15182:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "02f2855a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110919,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110918,
                  "name": "nonReentrant",
                  "nameLocations": ["15331:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "15331:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "15331:12:279"
              },
              {
                "id": 110921,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110920,
                  "name": "whenNotPaused",
                  "nameLocations": ["15352:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "15352:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "15352:13:279"
              }
            ],
            "name": "partialRepay",
            "nameLocation": "15217:12:279",
            "overrides": {
              "id": 110917,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110916,
                  "name": "ISize",
                  "nameLocations": ["15316:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "15316:5:279"
                }
              ],
              "src": "15307:15:279"
            },
            "parameters": {
              "id": 110915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110914,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "15258:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110936,
                  "src": "15230:34:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PartialRepayParams_$119407_calldata_ptr",
                    "typeString": "struct PartialRepayParams"
                  },
                  "typeName": {
                    "id": 110913,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110912,
                      "name": "PartialRepayParams",
                      "nameLocations": ["15230:18:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 119407,
                      "src": "15230:18:279"
                    },
                    "referencedDeclaration": 119407,
                    "src": "15230:18:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PartialRepayParams_$119407_storage_ptr",
                      "typeString": "struct PartialRepayParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15229:36:279"
            },
            "returnParameters": {
              "id": 110922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15370:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110954,
            "nodeType": "FunctionDefinition",
            "src": "15496:234:279",
            "nodes": [],
            "body": {
              "id": 110953,
              "nodeType": "Block",
              "src": "15603:127:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110947,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110940,
                            "src": "15690:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SetUserConfigurationParams_$121083_calldata_ptr",
                              "typeString": "struct SetUserConfigurationParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 110948,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15710:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15714:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15710:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SetUserConfigurationParams_$121083_calldata_ptr",
                              "typeString": "struct SetUserConfigurationParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110946,
                          "name": "SetUserConfigurationOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121089,
                          "src": "15644:36:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_storage_ptr_$",
                            "typeString": "type(struct SetUserConfigurationOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": ["15682:6:279", "15698:10:279"],
                        "names": ["params", "onBehalfOf"],
                        "nodeType": "FunctionCall",
                        "src": "15644:78:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr",
                          "typeString": "struct SetUserConfigurationOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr",
                          "typeString": "struct SetUserConfigurationOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110945,
                      "name": "setUserConfigurationOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110980,
                      "src": "15613:30:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr_$returns$__$",
                        "typeString": "function (struct SetUserConfigurationOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15613:110:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110952,
                  "nodeType": "ExpressionStatement",
                  "src": "15613:110:279"
                }
              ]
            },
            "baseFunctions": [111896],
            "documentation": {
              "id": 110937,
              "nodeType": "StructuredDocumentation",
              "src": "15470:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "2e106f21",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUserConfiguration",
            "nameLocation": "15505:20:279",
            "overrides": {
              "id": 110943,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110942,
                  "name": "ISize",
                  "nameLocations": ["15596:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "15596:5:279"
                }
              ],
              "src": "15587:15:279"
            },
            "parameters": {
              "id": 110941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110940,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "15562:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110954,
                  "src": "15526:42:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SetUserConfigurationParams_$121083_calldata_ptr",
                    "typeString": "struct SetUserConfigurationParams"
                  },
                  "typeName": {
                    "id": 110939,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110938,
                      "name": "SetUserConfigurationParams",
                      "nameLocations": ["15526:26:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 121083,
                      "src": "15526:26:279"
                    },
                    "referencedDeclaration": 121083,
                    "src": "15526:26:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SetUserConfigurationParams_$121083_storage_ptr",
                      "typeString": "struct SetUserConfigurationParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15525:44:279"
            },
            "returnParameters": {
              "id": 110944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15603:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 110980,
            "nodeType": "FunctionDefinition",
            "src": "15766:332:279",
            "nodes": [],
            "body": {
              "id": 110979,
              "nodeType": "Block",
              "src": "15972:126:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110970,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110958,
                        "src": "16017:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr",
                          "typeString": "struct SetUserConfigurationOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr",
                          "typeString": "struct SetUserConfigurationOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110967,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "15982:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110969,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15988:28:279",
                      "memberName": "validateSetUserConfiguration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 121203,
                      "src": "15982:34:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SetUserConfigurationOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 110971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15982:50:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110972,
                  "nodeType": "ExpressionStatement",
                  "src": "15982:50:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110976,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110958,
                        "src": "16076:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr",
                          "typeString": "struct SetUserConfigurationOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr",
                          "typeString": "struct SetUserConfigurationOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 110973,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "16042:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 110975,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16048:27:279",
                      "memberName": "executeSetUserConfiguration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 121311,
                      "src": "16042:33:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SetUserConfigurationOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16042:49:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110978,
                  "nodeType": "ExpressionStatement",
                  "src": "16042:49:279"
                }
              ]
            },
            "baseFunctions": [112175],
            "documentation": {
              "id": 110955,
              "nodeType": "StructuredDocumentation",
              "src": "15736:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "134f3f96",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 110963,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110962,
                  "name": "nonReentrant",
                  "nameLocations": ["15933:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "15933:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "15933:12:279"
              },
              {
                "id": 110965,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 110964,
                  "name": "whenNotPaused",
                  "nameLocations": ["15954:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "15954:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "15954:13:279"
              }
            ],
            "name": "setUserConfigurationOnBehalfOf",
            "nameLocation": "15775:30:279",
            "overrides": {
              "id": 110961,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110960,
                  "name": "ISizeV1_7",
                  "nameLocations": ["15914:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "15914:9:279"
                }
              ],
              "src": "15905:19:279"
            },
            "parameters": {
              "id": 110959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110958,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "15850:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110980,
                  "src": "15806:58:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_memory_ptr",
                    "typeString": "struct SetUserConfigurationOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 110957,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110956,
                      "name": "SetUserConfigurationOnBehalfOfParams",
                      "nameLocations": ["15806:36:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 121089,
                      "src": "15806:36:279"
                    },
                    "referencedDeclaration": 121089,
                    "src": "15806:36:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SetUserConfigurationOnBehalfOfParams_$121089_storage_ptr",
                      "typeString": "struct SetUserConfigurationOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15805:60:279"
            },
            "returnParameters": {
              "id": 110966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15972:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 110998,
            "nodeType": "FunctionDefinition",
            "src": "16130:300:279",
            "nodes": [],
            "body": {
              "id": 110997,
              "nodeType": "Block",
              "src": "16273:157:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 110991,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 110984,
                            "src": "16381:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsParams_$120903_calldata_ptr",
                              "typeString": "struct SetCopyLimitOrderConfigsParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 110992,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16401:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 110993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16405:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16401:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsParams_$120903_calldata_ptr",
                              "typeString": "struct SetCopyLimitOrderConfigsParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110990,
                          "name": "SetCopyLimitOrderConfigsOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120909,
                          "src": "16331:40:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_storage_ptr_$",
                            "typeString": "type(struct SetCopyLimitOrderConfigsOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 110994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": ["16373:6:279", "16389:10:279"],
                        "names": ["params", "onBehalfOf"],
                        "nodeType": "FunctionCall",
                        "src": "16331:82:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr",
                          "typeString": "struct SetCopyLimitOrderConfigsOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr",
                          "typeString": "struct SetCopyLimitOrderConfigsOnBehalfOfParams memory"
                        }
                      ],
                      "id": 110989,
                      "name": "setCopyLimitOrderConfigsOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111024,
                      "src": "16283:34:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr_$returns$__$",
                        "typeString": "function (struct SetCopyLimitOrderConfigsOnBehalfOfParams memory)"
                      }
                    },
                    "id": 110995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16283:140:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110996,
                  "nodeType": "ExpressionStatement",
                  "src": "16283:140:279"
                }
              ]
            },
            "baseFunctions": [111903],
            "documentation": {
              "id": 110981,
              "nodeType": "StructuredDocumentation",
              "src": "16104:21:279",
              "text": "@inheritdoc ISize"
            },
            "functionSelector": "cb2e9bdc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCopyLimitOrderConfigs",
            "nameLocation": "16139:24:279",
            "overrides": {
              "id": 110987,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 110986,
                  "name": "ISize",
                  "nameLocations": ["16262:5:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111904,
                  "src": "16262:5:279"
                }
              ],
              "src": "16253:15:279"
            },
            "parameters": {
              "id": 110985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110984,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "16204:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 110998,
                  "src": "16164:46:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsParams_$120903_calldata_ptr",
                    "typeString": "struct SetCopyLimitOrderConfigsParams"
                  },
                  "typeName": {
                    "id": 110983,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 110982,
                      "name": "SetCopyLimitOrderConfigsParams",
                      "nameLocations": ["16164:30:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 120903,
                      "src": "16164:30:279"
                    },
                    "referencedDeclaration": 120903,
                    "src": "16164:30:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsParams_$120903_storage_ptr",
                      "typeString": "struct SetCopyLimitOrderConfigsParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16163:48:279"
            },
            "returnParameters": {
              "id": 110988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16273:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 111024,
            "nodeType": "FunctionDefinition",
            "src": "16466:348:279",
            "nodes": [],
            "body": {
              "id": 111023,
              "nodeType": "Block",
              "src": "16680:134:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111014,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111002,
                        "src": "16729:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr",
                          "typeString": "struct SetCopyLimitOrderConfigsOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr",
                          "typeString": "struct SetCopyLimitOrderConfigsOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 111011,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "16690:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 111013,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16696:32:279",
                      "memberName": "validateSetCopyLimitOrderConfigs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 120971,
                      "src": "16690:38:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SetCopyLimitOrderConfigsOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 111015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16690:54:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111016,
                  "nodeType": "ExpressionStatement",
                  "src": "16690:54:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111020,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111002,
                        "src": "16792:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr",
                          "typeString": "struct SetCopyLimitOrderConfigsOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr",
                          "typeString": "struct SetCopyLimitOrderConfigsOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 111017,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "16754:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 111019,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16760:31:279",
                      "memberName": "executeSetCopyLimitOrderConfigs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 121055,
                      "src": "16754:37:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SetCopyLimitOrderConfigsOnBehalfOfParams memory)"
                      }
                    },
                    "id": 111021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16754:53:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111022,
                  "nodeType": "ExpressionStatement",
                  "src": "16754:53:279"
                }
              ]
            },
            "baseFunctions": [112182],
            "documentation": {
              "id": 110999,
              "nodeType": "StructuredDocumentation",
              "src": "16436:25:279",
              "text": "@inheritdoc ISizeV1_7"
            },
            "functionSelector": "7a32376a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 111007,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 111006,
                  "name": "nonReentrant",
                  "nameLocations": ["16641:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "16641:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "16641:12:279"
              },
              {
                "id": 111009,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 111008,
                  "name": "whenNotPaused",
                  "nameLocations": ["16662:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "16662:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "16662:13:279"
              }
            ],
            "name": "setCopyLimitOrderConfigsOnBehalfOf",
            "nameLocation": "16475:34:279",
            "overrides": {
              "id": 111005,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 111004,
                  "name": "ISizeV1_7",
                  "nameLocations": ["16622:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112183,
                  "src": "16622:9:279"
                }
              ],
              "src": "16613:19:279"
            },
            "parameters": {
              "id": 111003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111002,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "16558:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 111024,
                  "src": "16510:62:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_memory_ptr",
                    "typeString": "struct SetCopyLimitOrderConfigsOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 111001,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 111000,
                      "name": "SetCopyLimitOrderConfigsOnBehalfOfParams",
                      "nameLocations": ["16510:40:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 120909,
                      "src": "16510:40:279"
                    },
                    "referencedDeclaration": 120909,
                    "src": "16510:40:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SetCopyLimitOrderConfigsOnBehalfOfParams_$120909_storage_ptr",
                      "typeString": "struct SetCopyLimitOrderConfigsOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16509:64:279"
            },
            "returnParameters": {
              "id": 111010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16680:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 111042,
            "nodeType": "FunctionDefinition",
            "src": "16850:190:279",
            "nodes": [],
            "body": {
              "id": 111041,
              "nodeType": "Block",
              "src": "16937:103:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 111035,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111028,
                            "src": "17000:6:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SetVaultParams_$121327_calldata_ptr",
                              "typeString": "struct SetVaultParams calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 111036,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17020:3:279",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 111037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17024:6:279",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "17020:10:279",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SetVaultParams_$121327_calldata_ptr",
                              "typeString": "struct SetVaultParams calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 111034,
                          "name": "SetVaultOnBehalfOfParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121333,
                          "src": "16966:24:279",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SetVaultOnBehalfOfParams_$121333_storage_ptr_$",
                            "typeString": "type(struct SetVaultOnBehalfOfParams storage pointer)"
                          }
                        },
                        "id": 111038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": ["16992:6:279", "17008:10:279"],
                        "names": ["params", "onBehalfOf"],
                        "nodeType": "FunctionCall",
                        "src": "16966:66:279",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr",
                          "typeString": "struct SetVaultOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr",
                          "typeString": "struct SetVaultOnBehalfOfParams memory"
                        }
                      ],
                      "id": 111033,
                      "name": "setVaultOnBehalfOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111068,
                      "src": "16947:18:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr_$returns$__$",
                        "typeString": "function (struct SetVaultOnBehalfOfParams memory)"
                      }
                    },
                    "id": 111039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16947:86:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111040,
                  "nodeType": "ExpressionStatement",
                  "src": "16947:86:279"
                }
              ]
            },
            "baseFunctions": [112201],
            "documentation": {
              "id": 111025,
              "nodeType": "StructuredDocumentation",
              "src": "16820:25:279",
              "text": "@inheritdoc ISizeV1_8"
            },
            "functionSelector": "510aeb39",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setVault",
            "nameLocation": "16859:8:279",
            "overrides": {
              "id": 111031,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 111030,
                  "name": "ISizeV1_8",
                  "nameLocations": ["16926:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112209,
                  "src": "16926:9:279"
                }
              ],
              "src": "16917:19:279"
            },
            "parameters": {
              "id": 111029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111028,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "16892:6:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 111042,
                  "src": "16868:30:279",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SetVaultParams_$121327_calldata_ptr",
                    "typeString": "struct SetVaultParams"
                  },
                  "typeName": {
                    "id": 111027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 111026,
                      "name": "SetVaultParams",
                      "nameLocations": ["16868:14:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 121327,
                      "src": "16868:14:279"
                    },
                    "referencedDeclaration": 121327,
                    "src": "16868:14:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SetVaultParams_$121327_storage_ptr",
                      "typeString": "struct SetVaultParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16867:32:279"
            },
            "returnParameters": {
              "id": 111032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16937:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 111068,
            "nodeType": "FunctionDefinition",
            "src": "17076:284:279",
            "nodes": [],
            "body": {
              "id": 111067,
              "nodeType": "Block",
              "src": "17258:102:279",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111058,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111046,
                        "src": "17291:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr",
                          "typeString": "struct SetVaultOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr",
                          "typeString": "struct SetVaultOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 111055,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "17268:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 111057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17274:16:279",
                      "memberName": "validateSetVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 121376,
                      "src": "17268:22:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SetVaultOnBehalfOfParams memory) view"
                      }
                    },
                    "id": 111059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17268:38:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111060,
                  "nodeType": "ExpressionStatement",
                  "src": "17268:38:279"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111064,
                        "name": "externalParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111046,
                        "src": "17338:14:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr",
                          "typeString": "struct SetVaultOnBehalfOfParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr",
                          "typeString": "struct SetVaultOnBehalfOfParams memory"
                        }
                      ],
                      "expression": {
                        "id": 111061,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111217,
                        "src": "17316:5:279",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_State_$111213_storage",
                          "typeString": "struct State storage ref"
                        }
                      },
                      "id": 111063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17322:15:279",
                      "memberName": "executeSetVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 121424,
                      "src": "17316:21:279",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_State_$111213_storage_ptr_$_t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr_$returns$__$attached_to$_t_struct$_State_$111213_storage_ptr_$",
                        "typeString": "function (struct State storage pointer,struct SetVaultOnBehalfOfParams memory)"
                      }
                    },
                    "id": 111065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17316:37:279",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111066,
                  "nodeType": "ExpressionStatement",
                  "src": "17316:37:279"
                }
              ]
            },
            "baseFunctions": [112208],
            "documentation": {
              "id": 111043,
              "nodeType": "StructuredDocumentation",
              "src": "17046:25:279",
              "text": "@inheritdoc ISizeV1_8"
            },
            "functionSelector": "75829a36",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 111051,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 111050,
                  "name": "nonReentrant",
                  "nameLocations": ["17219:12:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55073,
                  "src": "17219:12:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "17219:12:279"
              },
              {
                "id": 111053,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 111052,
                  "name": "whenNotPaused",
                  "nameLocations": ["17240:13:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54894,
                  "src": "17240:13:279"
                },
                "nodeType": "ModifierInvocation",
                "src": "17240:13:279"
              }
            ],
            "name": "setVaultOnBehalfOf",
            "nameLocation": "17085:18:279",
            "overrides": {
              "id": 111049,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 111048,
                  "name": "ISizeV1_8",
                  "nameLocations": ["17200:9:279"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112209,
                  "src": "17200:9:279"
                }
              ],
              "src": "17191:19:279"
            },
            "parameters": {
              "id": 111047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111046,
                  "mutability": "mutable",
                  "name": "externalParams",
                  "nameLocation": "17136:14:279",
                  "nodeType": "VariableDeclaration",
                  "scope": 111068,
                  "src": "17104:46:279",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SetVaultOnBehalfOfParams_$121333_memory_ptr",
                    "typeString": "struct SetVaultOnBehalfOfParams"
                  },
                  "typeName": {
                    "id": 111045,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 111044,
                      "name": "SetVaultOnBehalfOfParams",
                      "nameLocations": ["17104:24:279"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 121333,
                      "src": "17104:24:279"
                    },
                    "referencedDeclaration": 121333,
                    "src": "17104:24:279",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SetVaultOnBehalfOfParams_$121333_storage_ptr",
                      "typeString": "struct SetVaultOnBehalfOfParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17103:48:279"
            },
            "returnParameters": {
              "id": 111054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17258:0:279"
            },
            "scope": 111069,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 109966,
              "name": "ISize",
              "nameLocations": ["4105:5:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 111904,
              "src": "4105:5:279"
            },
            "id": 109967,
            "nodeType": "InheritanceSpecifier",
            "src": "4105:5:279"
          },
          {
            "baseName": {
              "id": 109968,
              "name": "SizeView",
              "nameLocations": ["4116:8:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 111671,
              "src": "4116:8:279"
            },
            "id": 109969,
            "nodeType": "InheritanceSpecifier",
            "src": "4116:8:279"
          },
          {
            "baseName": {
              "id": 109970,
              "name": "AccessControlUpgradeable",
              "nameLocations": ["4130:24:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52349,
              "src": "4130:24:279"
            },
            "id": 109971,
            "nodeType": "InheritanceSpecifier",
            "src": "4130:24:279"
          },
          {
            "baseName": {
              "id": 109972,
              "name": "PausableUpgradeable",
              "nameLocations": ["4160:19:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55004,
              "src": "4160:19:279"
            },
            "id": 109973,
            "nodeType": "InheritanceSpecifier",
            "src": "4160:19:279"
          },
          {
            "baseName": {
              "id": 109974,
              "name": "UUPSUpgradeable",
              "nameLocations": ["4237:15:279"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53131,
              "src": "4237:15:279"
            },
            "id": 109975,
            "nodeType": "InheritanceSpecifier",
            "src": "4237:15:279"
          }
        ],
        "canonicalName": "Size",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 109965,
          "nodeType": "StructuredDocumentation",
          "src": "3932:152:279",
          "text": "@title Size\n @custom:security-contact security@size.credit\n @author Size (https://size.credit/)\n @notice See the documentation in {ISize}."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          111069, 53131, 55995, 55004, 52349, 55173, 62239, 55552, 54741,
          111671, 111904, 112209, 112183, 111732, 111931, 112071, 112281,
          109851, 55133, 52949, 111218
        ],
        "name": "Size",
        "nameLocation": "4093:4:279",
        "scope": 111070,
        "usedErrors": [
          52698, 52701, 52976, 52981, 54883, 54886, 55035, 55479, 55482, 56603,
          56616, 59175, 60378, 113208, 113214, 113320, 113384
        ],
        "usedEvents": [52706, 54875, 54880, 55491, 55500, 55509, 55794, 113650]
      }
    ],
    "license": "MIT"
  },
  "id": 279
}
