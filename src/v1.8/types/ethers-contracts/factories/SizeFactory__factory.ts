/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SizeFactory, SizeFactoryInterface } from "../SizeFactory";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "DEFAULT_ADMIN_ROLE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "authorizationNonces",
    inputs: [
      {
        name: "onBehalfOf",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "authorizations",
    inputs: [
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "onBehalfOf",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "authorizedActionsBitmap",
        type: "uint256",
        internalType: "ActionsBitmap",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "callMarket",
    inputs: [
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collectionsManager",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICollectionsManager",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createBorrowTokenVault",
    inputs: [
      {
        name: "variablePool",
        type: "address",
        internalType: "contract IPool",
      },
      {
        name: "underlyingBorrowToken",
        type: "address",
        internalType: "contract IERC20Metadata",
      },
    ],
    outputs: [
      {
        name: "borrowTokenVault",
        type: "address",
        internalType: "contract NonTransferrableRebasingTokenVault",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createMarket",
    inputs: [
      {
        name: "feeConfigParams",
        type: "tuple",
        internalType: "struct InitializeFeeConfigParams",
        components: [
          {
            name: "swapFeeAPR",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fragmentationFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "liquidationRewardPercent",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "overdueCollateralProtocolPercent",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralProtocolPercent",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "riskConfigParams",
        type: "tuple",
        internalType: "struct InitializeRiskConfigParams",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCreditBorrowToken",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minTenor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxTenor",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "oracleParams",
        type: "tuple",
        internalType: "struct InitializeOracleParams",
        components: [
          {
            name: "priceFeed",
            type: "address",
            internalType: "address",
          },
          {
            name: "variablePoolBorrowRateStaleRateInterval",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
      {
        name: "dataParams",
        type: "tuple",
        internalType: "struct InitializeDataParams",
        components: [
          {
            name: "weth",
            type: "address",
            internalType: "address",
          },
          {
            name: "underlyingCollateralToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "underlyingBorrowToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "variablePool",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrowTokenVault",
            type: "address",
            internalType: "address",
          },
          {
            name: "sizeFactory",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createPriceFeed",
    inputs: [
      {
        name: "_priceFeedParams",
        type: "tuple",
        internalType: "struct PriceFeedParams",
        components: [
          {
            name: "uniswapV3Pool",
            type: "address",
            internalType: "contract IUniswapV3Pool",
          },
          {
            name: "twapWindow",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "averageBlockTime",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "baseToken",
            type: "address",
            internalType: "contract IERC20Metadata",
          },
          {
            name: "quoteToken",
            type: "address",
            internalType: "contract IERC20Metadata",
          },
          {
            name: "baseAggregator",
            type: "address",
            internalType: "contract AggregatorV3Interface",
          },
          {
            name: "quoteAggregator",
            type: "address",
            internalType: "contract AggregatorV3Interface",
          },
          {
            name: "baseStalePriceInterval",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "quoteStalePriceInterval",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "sequencerUptimeFeed",
            type: "address",
            internalType: "contract AggregatorV3Interface",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "priceFeed",
        type: "address",
        internalType: "contract PriceFeed",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getBorrowOfferAPR",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "rateProvider",
        type: "address",
        internalType: "address",
      },
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanOfferAPR",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "rateProvider",
        type: "address",
        internalType: "address",
      },
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMarket",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ISize",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMarketDescriptions",
    inputs: [],
    outputs: [
      {
        name: "descriptions",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMarkets",
    inputs: [],
    outputs: [
      {
        name: "_markets",
        type: "address[]",
        internalType: "contract ISize[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMarketsCount",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRoleAdmin",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "grantRole",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hasRole",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAuthorized",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "onBehalfOf",
        type: "address",
        internalType: "address",
      },
      {
        name: "action",
        type: "uint8",
        internalType: "enum Action",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isAuthorizedAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "onBehalfOf",
        type: "address",
        internalType: "address",
      },
      {
        name: "actionsBitmap",
        type: "uint256",
        internalType: "ActionsBitmap",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isBorrowAPRLowerThanLoanOfferAPRs",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrowAPR",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLoanAPRGreaterThanBorrowOfferAPRs",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "loanAPR",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isMarket",
    inputs: [
      {
        name: "candidate",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "nonTransferrableTokenVaultImplementation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onERC721Received",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "reinitialize",
    inputs: [
      {
        name: "_collectionsManager",
        type: "address",
        internalType: "contract ICollectionsManager",
      },
      {
        name: "_users",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_curator",
        type: "address",
        internalType: "address",
      },
      {
        name: "_rateProvider",
        type: "address",
        internalType: "address",
      },
      {
        name: "_collectionMarkets",
        type: "address[]",
        internalType: "contract ISize[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceRole",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "callerConfirmation",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeAllAuthorizations",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeRole",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setAuthorization",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "actionsBitmap",
        type: "uint256",
        internalType: "ActionsBitmap",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setCollectionsManager",
    inputs: [
      {
        name: "_collectionsManager",
        type: "address",
        internalType: "contract ICollectionsManager",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setNonTransferrableRebasingTokenVaultImplementation",
    inputs: [
      {
        name: "_nonTransferrableTokenVaultImplementation",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSizeImplementation",
    inputs: [
      {
        name: "_sizeImplementation",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "sizeImplementation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "subscribeToCollections",
    inputs: [
      {
        name: "collectionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "subscribeToCollectionsOnBehalfOf",
    inputs: [
      {
        name: "collectionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "onBehalfOf",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "unsubscribeFromCollections",
    inputs: [
      {
        name: "collectionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unsubscribeFromCollectionsOnBehalfOf",
    inputs: [
      {
        name: "collectionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "onBehalfOf",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "event",
    name: "CollectionsManagerSet",
    inputs: [
      {
        name: "oldCollectionsManager",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newCollectionsManager",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CreateBorrowTokenVault",
    inputs: [
      {
        name: "borrowTokenVault",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CreateMarket",
    inputs: [
      {
        name: "market",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "CreatePriceFeed",
    inputs: [
      {
        name: "priceFeed",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NonTransferrableRebasingTokenVaultImplementationSet",
    inputs: [
      {
        name: "oldNonTransferrableRebasingTokenVaultImplementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newNonTransferrableRebasingTokenVaultImplementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RevokeAllAuthorizations",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleAdminChanged",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "previousAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "newAdminRole",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleGranted",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoleRevoked",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetAuthorization",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "actionsBitmap",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "nonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SizeImplementationSet",
    inputs: [
      {
        name: "oldSizeImplementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newSizeImplementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AccessControlBadConfirmation",
    inputs: [],
  },
  {
    type: "error",
    name: "AccessControlUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "neededRole",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "INVALID_ACTIONS_BITMAP",
    inputs: [
      {
        name: "actionsBitmap",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "INVALID_MARKET",
    inputs: [
      {
        name: "market",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NULL_ADDRESS",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "UNAUTHORIZED_ACTION",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "onBehalfOf",
        type: "address",
        internalType: "address",
      },
      {
        name: "action",
        type: "uint8",
        internalType: "uint8",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051613d52620001005f395f8181612399015281816123c201526125050152613d525ff3fe60806040526004361061025f575f3560e01c806381de274c1161013f578063ad3cb1cc116100b3578063d152e23611610078578063d152e23614610784578063d547741f146107a3578063e8d353c7146107c2578063eb44fdd3146107e1578063ec2c901614610800578063f0fb716f14610821575f80fd5b8063ad3cb1cc146106d8578063b1ef804d14610708578063b4cd6bd114610727578063c4d66de814610746578063c8fb624714610765575f80fd5b80639e42bfa3116101045780639e42bfa3146106285780639feffdb014610647578063a217fddf14610666578063a78ec6ae14610679578063a7b2b31014610698578063ac9650d8146106ac575f80fd5b806381de274c1461058157806386eeeb5a146105ac57806391c769ce146105cb57806391d14854146105ea578063973cf86714610609575f80fd5b8063495e6d89116101d65780635fb7f10c1161019b5780635fb7f10c146104a8578063678b9bad146104c75780636ec934da146104e6578063732218f9146105055780637643d7ec146105245780637b8dedad14610545575f80fd5b8063495e6d891461040e5780634f1ef2861461042d57806352d1902d1461044057806354fd4d50146104545780635ec4954414610489575f80fd5b8063248a9ca311610227578063248a9ca31461035157806327fa35c31461037e5780632f2ff15d1461039257806336568abe146103b157806337c11b2a146103d05780634481f4d1146103ef575f80fd5b806301a6c8721461026357806301ffc9a7146102845780631286a2dc146102b8578063150b7a02146102ef5780631e4fcddb14610332575b5f80fd5b34801561026e575f80fd5b5061028261027d366004612b30565b610840565b005b34801561028f575f80fd5b506102a361029e366004612b4b565b6108a6565b60405190151581526020015b60405180910390f35b3480156102c3575f80fd5b506007546102d7906001600160a01b031681565b6040516001600160a01b0390911681526020016102af565b3480156102fa575f80fd5b50610319610309366004612c67565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016102af565b34801561033d575f80fd5b5061028261034c366004612b30565b6108dc565b34801561035c575f80fd5b5061037061036b366004612cce565b610969565b6040519081526020016102af565b348015610389575f80fd5b50610370610989565b34801561039d575f80fd5b506102826103ac366004612ce5565b610998565b3480156103bc575f80fd5b506102826103cb366004612ce5565b6109ba565b3480156103db575f80fd5b50600a546102d7906001600160a01b031681565b3480156103fa575f80fd5b50610282610409366004612da5565b6109f2565b348015610419575f80fd5b50610370610428366004612e95565b6112ae565b61028261043b366004612eec565b611343565b34801561044b575f80fd5b50610370611362565b34801561045f575f80fd5b506040805180820190915260048152630ec625c760e31b60208201525b6040516102af9190612f85565b348015610494575f80fd5b5061047c6104a3366004612f97565b61137d565b3480156104b3575f80fd5b506103706104c2366004612e95565b6113fc565b3480156104d2575f80fd5b506102a36104e1366004613014565b61144c565b3480156104f1575f80fd5b506102a3610500366004612b30565b6114d8565b348015610510575f80fd5b5061028261051f3660046130b5565b6114e3565b34801561052f575f80fd5b50610538611591565b6040516102af91906130f8565b348015610550575f80fd5b5061037061055f36600461315a565b600860209081525f938452604080852082529284528284209052825290205481565b34801561058c575f80fd5b5061037061059b366004612b30565b60096020525f908152604090205481565b3480156105b7575f80fd5b506102a36105c6366004613199565b6118bf565b3480156105d6575f80fd5b506102826105e53660046131d9565b61192f565b3480156105f5575f80fd5b506102a3610604366004612ce5565b61193a565b348015610614575f80fd5b506006546102d7906001600160a01b031681565b348015610633575f80fd5b50610282610642366004613203565b611970565b348015610652575f80fd5b506102a3610661366004613014565b61197d565b348015610671575f80fd5b506103705f81565b348015610684575f80fd5b506102a3610693366004613234565b6119c5565b3480156106a3575f80fd5b50610282611a2a565b3480156106b7575f80fd5b506106cb6106c6366004613272565b611a75565b6040516102af91906132e0565b3480156106e3575f80fd5b5061047c604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610713575f80fd5b506102826107223660046130b5565b611b5a565b348015610732575f80fd5b50610282610741366004612b30565b611ba5565b348015610751575f80fd5b50610282610760366004612b30565b611c32565b348015610770575f80fd5b5061028261077f366004613203565b611dc3565b34801561078f575f80fd5b506102d761079e366004613348565b611dcd565b3480156107ae575f80fd5b506102826107bd366004612ce5565b611e8a565b3480156107cd575f80fd5b506102d76107dc366004613401565b611ea6565b3480156107ec575f80fd5b506102d76107fb366004612cce565b611f85565b34801561080b575f80fd5b50610814611f90565b6040516102af9190613470565b34801561082c575f80fd5b506102d761083b366004613498565b612025565b5f61084a81612109565b600a546040516001600160a01b038085169216907f24b8a2b6435960c7b1b405f08e684a0ed2e4d467b56f325250b56e2a10dbabae905f90a350600a80546001600160a01b0319166001600160a01b0392909216919091179055565b5f6001600160e01b03198216637965db0b60e01b14806108d657506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f6108e681612109565b6001600160a01b03821661090d5760405163de0ce17d60e01b815260040160405180910390fd5b6007546040516001600160a01b038085169216907faefd875bf3940c57f185da0affbb82ce03656890d6e1d29310e8b4bf9d20b7c1905f90a350600780546001600160a01b0319166001600160a01b0392909216919091179055565b5f9081525f80516020613cfd833981519152602052604090206001015490565b5f6109935f612113565b905090565b6109a182610969565b6109aa81612109565b6109b4838361211c565b50505050565b6001600160a01b03811633146109e35760405163334bd91960e11b815260040160405180910390fd5b6109ed82826121bd565b505050565b5f6109fc81612109565b612a305f610a08612236565b8054909150600160401b900460ff1680610a2f575080546001600160401b03808416911610155b15610a4d5760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b03831617600160401b1781556001600160a01b038816610a955760405163de0ce17d60e01b815260040160405180910390fd5b600a80546001600160a01b0319166001600160a01b038a169081179091556040515f907f24b8a2b6435960c7b1b405f08e684a0ed2e4d467b56f325250b56e2a10dbabae908290a36001600160a01b0386161580610afa57506001600160a01b038516155b61125d576040805160018082528183019092525f91602080830190803683375050600a546040805163191fc6a760e21b815290519394506001600160a01b039091169263647f1a9c9250600480830192602092919082900301815f875af1158015610b67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b8b9190613503565b815f81518110610b9d57610b9d61351a565b6020026020010181815250505f85516001600160401b03811115610bc357610bc3612b82565b604051908082528060200260200182016040528015610c2157816020015b610c0e6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b815260200190600190039081610be15790505b5090505f86516001600160401b03811115610c3e57610c3e612b82565b604051908082528060200260200182016040528015610c9c57816020015b610c896040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b815260200190600190039081610c5c5790505b5090505f5b8751811015610d40576040518060a001604052805f81526020015f81526020015f81526020015f8152602001600160ff1b815250838281518110610ce757610ce761351a565b60200260200101819052506040518060a001604052805f81526020015f1981526020015f81526020015f1981526020015f815250828281518110610d2d57610d2d61351a565b6020908102919091010152600101610ca1565b50600a5483516001600160a01b03909116906315d5cf999085905f90610d6857610d6861351a565b60200260200101518984866040518563ffffffff1660e01b8152600401610d929493929190613587565b5f604051808303815f87803b158015610da9575f80fd5b505af1158015610dbb573d5f803e3d5ffd5b505f925060019150610dca9050565b604051908082528060200260200182016040528015610df3578160200160208202803683370190505b50905088815f81518110610e0957610e0961351a565b60200260200101906001600160a01b031690816001600160a01b0316815250505f5b8851811015610ed557600a5485516001600160a01b039091169063eb379a589087905f90610e5b57610e5b61351a565b60200260200101518b8481518110610e7557610e7561351a565b6020026020010151856040518463ffffffff1660e01b8152600401610e9c939291906135d0565b5f604051808303815f87803b158015610eb3575f80fd5b505af1158015610ec5573d5f803e3d5ffd5b505060019092019150610e2b9050565b506040805160028082526060820183525f926020830190803683370190505090506002815f81518110610f0a57610f0a61351a565b6020026020010190600c811115610f2357610f23613631565b9081600c811115610f3657610f36613631565b81525050600381600181518110610f4f57610f4f61351a565b6020026020010190600c811115610f6857610f68613631565b9081600c811115610f7b57610f7b613631565b9052505f5b8c518110156111c657600a548d516001600160a01b03909116906393c0d3f3908f9084908110610fb257610fb261351a565b6020026020010151886040518363ffffffff1660e01b8152600401610fd8929190613674565b5f604051808303815f87803b158015610fef575f80fd5b505af1158015611001573d5f803e3d5ffd5b50505050611031308e838151811061101b5761101b61351a565b602002602001015161102c8561225e565b6122a6565b5f5b8a5181101561119857611044612ac3565b8e83815181106110565761105661351a565b6020908102919091018101516001600160a01b0316908201528b518c90839081106110835761108361351a565b60200260200101516001600160a01b03166353e043d4826040518263ffffffff1660e01b81526004016110b6919061374a565b5f604051808303815f87803b1580156110cd575f80fd5b505af11580156110df573d5f803e3d5ffd5b505050506110eb612ac3565b8f84815181106110fd576110fd61351a565b6020908102919091018101516001600160a01b0316908201528c518d908490811061112a5761112a61351a565b60200260200101516001600160a01b0316634fd9a8a5826040518263ffffffff1660e01b815260040161115d919061374a565b5f604051808303815f87803b158015611174575f80fd5b505af1158015611186573d5f803e3d5ffd5b50506001909401935061103392505050565b506111be308e83815181106111af576111af61351a565b602002602001015161102c5f90565b600101610f80565b508c6001600160a01b03166342842e0e308d885f815181106111ea576111ea61351a565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015f604051808303815f87803b158015611241575f80fd5b505af1158015611253573d5f803e3d5ffd5b5050505050505050505b805460ff60401b191681556040516001600160401b03831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15050505050505050565b600a5460405163495e6d8960e01b81526001600160a01b0387811660048301526024820187905285811660448301528481166064830152608482018490525f92169063495e6d899060a4015b602060405180830381865afa158015611315573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113399190613503565b9695505050505050565b61134b61238e565b61135482612434565b61135e828261243e565b5050565b5f61136b6124fa565b505f80516020613cdd83398151915290565b6060611388846114d8565b6113b55760405163e2a7bea360e01b81526001600160a01b03851660048201526024015b60405180910390fd5b6113f48484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061254392505050565b949350505050565b600a546040516317edfc4360e21b81526001600160a01b0387811660048301526024820187905285811660448301528481166064830152608482018490525f921690635fb7f10c9060a4016112fa565b600a5460405163678b9bad60e01b81526001600160a01b038681166004830152602482018690528481166044830152606482018490525f92169063678b9bad906084015b602060405180830381865afa1580156114ab573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114cf919061375c565b95945050505050565b5f6108d68183612550565b6114ef3382600b6118bf565b61152e573381600b5b60405163062709f360e41b81526001600160a01b03938416600482015292909116602483015260ff1660448201526064016113ac565b600a546040516301bc3d7160e71b81526001600160a01b039091169063de1eb880906115609084908690600401613674565b5f604051808303815f87803b158015611577575f80fd5b505af1158015611589573d5f803e3d5ffd5b505050505050565b606061159c5f612113565b6001600160401b038111156115b3576115b3612b82565b6040519080825280602002602001820160405280156115e657816020015b60608152602001906001900390816115d15790505b5090505f5b81518110156118bb575f6115ff8183612571565b90505f6116796064836001600160a01b0316637c90a6ca6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611643573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611667919061377b565b60200151670de0b6b3a764000061257c565b9050816001600160a01b03166373d4a13a6040518163ffffffff1660e01b815260040161010060405180830381865afa1580156116b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116dc91906137f3565b604001516001600160a01b03166395d89b416040518163ffffffff1660e01b81526004015f60405180830381865afa15801561171a573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261174191908101906138ac565b826001600160a01b03166373d4a13a6040518163ffffffff1660e01b815260040161010060405180830381865afa15801561177e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117a291906137f3565b606001516001600160a01b03166395d89b416040518163ffffffff1660e01b81526004015f60405180830381865afa1580156117e0573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261180791908101906138ac565b61181083612588565b846001600160a01b03166354fd4d506040518163ffffffff1660e01b81526004015f60405180830381865afa15801561184b573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261187291908101906138ac565b6040516020016118859493929190613914565b6040516020818303038152906040528484815181106118a6576118a661351a565b602090810291909101015250506001016115eb565b5090565b5f826001600160a01b0316846001600160a01b0316036118e157506001611928565b6001600160a01b038084165f8181526009602090815260408083205480845260088352818420958a16845294825280832093835292905220546119249084612617565b9150505b9392505050565b61135e8233836122a6565b5f9182525f80516020613cfd833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61197a81336114e3565b50565b600a546040516309feffdb60e41b81526001600160a01b038681166004830152602482018690528481166044830152606482018490525f921690639feffdb090608401611490565b5f826001600160a01b0316846001600160a01b0316036119e757506001611928565b506001600160a01b038281165f81815260096020908152604080832054835260088252808320948816835293815283822092825291909152205481168114611928565b60405133907fecbee29490a7e5456f4e3aab0700477764e3f16dda5a21ea92f43f1cfcb15799905f90a2335f908152600960205260408120805491611a6e836139b4565b9190505550565b604080515f815260208101909152606090826001600160401b03811115611a9e57611a9e612b82565b604051908082528060200260200182016040528015611ad157816020015b6060815260200190600190039081611abc5790505b5091505f5b83811015611b5257611b2d30868684818110611af457611af461351a565b9050602002810190611b0691906139df565b85604051602001611b1993929190613a28565b604051602081830303815290604052612639565b838281518110611b3f57611b3f61351a565b6020908102919091010152600101611ad6565b505092915050565b611b663382600b6118bf565b611b73573381600b6114f8565b600a546040516393c0d3f360e01b81526001600160a01b03909116906393c0d3f3906115609084908690600401613674565b5f611baf81612109565b6001600160a01b038216611bd65760405163de0ce17d60e01b815260040160405180910390fd5b6006546040516001600160a01b038085169216907ffb3d0b43c5121de915eeb8fa2fb4bb792b6b05d5d6f3df7630aac9d9e8697312905f90a350600680546001600160a01b0319166001600160a01b0392909216919091179055565b5f611c3b612236565b805490915060ff600160401b82041615906001600160401b03165f81158015611c615750825b90505f826001600160401b03166001148015611c7c5750303b155b905081158015611c8a575080155b15611ca85760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611cd257845460ff60401b1916600160401b1785555b611cda6126a2565b611ce26126a2565b611cea6126a2565b611cf45f8761211c565b50611d1f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8761211c565b50611d4a7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8761211c565b50611d757f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388761211c565b50831561158957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b61197a8133611b5a565b5f80611dd881612109565b60405163145b6cb960e11b815273__$8498e19059e8c9c59d07dfb635c44386c6$__906328b6d97290611e0f908690600401613a4d565b602060405180830381865af4158015611e2a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e4e9190613b2a565b6040519092506001600160a01b038316907f970cbcaabfe7c54976df22e530fb6ef3a9202796c410ae94972a9b109d5b2ca8905f90a250919050565b611e9382610969565b611e9c81612109565b6109b483836121bd565b5f80611eb181612109565b6007546040516302a8408560e11b81526001600160a01b03918216600482015233602482018190528683166044830152918516606482015273__$c583a0fe7c050ce40cdddde89e71ac1899$__90630550810a90608401602060405180830381865af4158015611f23573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f479190613b2a565b6040519093506001600160a01b038416907f798adeb18dd44bd81e89d3ab4aa52d11e6d22b3ab80b11da6844ec0eda2a0810905f90a2505092915050565b5f6108d68183612571565b6060611f9b5f612113565b6001600160401b03811115611fb257611fb2612b82565b604051908082528060200260200182016040528015611fdb578160200160208202803683370190505b5090505f5b81518110156118bb57611ff35f82612571565b8282815181106120055761200561351a565b6001600160a01b0390921660209283029190910190910152600101611fe0565b5f8061203081612109565b60065460405163d41bcfc560e01b8152339173__$74708c40afd3f014cbcff13274aefc3e53$__9163d41bcfc591612080916001600160a01b039091169085908c908c908c908c90600401613c12565b602060405180830381865af415801561209b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120bf9190613b2a565b92506120cb5f846126aa565b506040516001600160a01b038416907ffa970ff5f178441bbe297db8d35a584c9bd6628b17b82d80dc8f5b80063102ca905f90a25050949350505050565b61197a81336126be565b5f6108d6825490565b5f5f80516020613cfd833981519152612135848461193a565b6121b4575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561216a3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506108d6565b5f9150506108d6565b5f5f80516020613cfd8339815191526121d6848461193a565b156121b4575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506108d6565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006108d6565b5f80805b835181101561229f576122936122908583815181106122835761228361351a565b60200260200101516126f7565b90565b90911790600101612262565b5080611928565b6001600160a01b0383166122cd5760405163de0ce17d60e01b815260040160405180910390fd5b6122d681612714565b6122f657604051632e40743360e01b8152600481018290526024016113ac565b6001600160a01b0382165f9081526009602052604090205481846001600160a01b0316846001600160a01b03167f89733de2d64cea40de091169750607b26e8d46142312fba65fb6476c790bad498460405161235491815260200190565b60405180910390a45f9081526008602090815260408083206001600160a01b03968716845282528083209490951682529290925291902055565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061241457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166124085f80516020613cdd833981519152546001600160a01b031690565b6001600160a01b031614155b156124325760405163703e46dd60e11b815260040160405180910390fd5b565b5f61135e81612109565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612498575060408051601f3d908101601f1916820190925261249591810190613503565b60015b6124c057604051634c9c8ce360e01b81526001600160a01b03831660048201526024016113ac565b5f80516020613cdd83398151915281146124f057604051632a87526960e21b8152600481018290526024016113ac565b6109ed838361272d565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146124325760405163703e46dd60e11b815260040160405180910390fd5b606061192883835f612782565b6001600160a01b0381165f9081526001830160205260408120541515611928565b5f6119288383612818565b5f6113f484848461283e565b60605f61259483612862565b60010190505f816001600160401b038111156125b2576125b2612b82565b6040519080825280601f01601f1916602001820160405280156125dc576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846125e657509392505050565b5f81600c81111561262a5761262a613631565b6001901b831615159392505050565b60605f80846001600160a01b0316846040516126559190613cc1565b5f60405180830381855af49150503d805f811461268d576040519150601f19603f3d011682016040523d82523d5f602084013e612692565b606091505b50915091506114cf858383612939565b61243261298e565b5f611928836001600160a01b0384166129b3565b6126c8828261193a565b61135e5760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016113ac565b5f6108d682600c81111561270d5761270d613631565b6001901b90565b5f8061272360016110006139cc565b9092111592915050565b612736826129ff565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561277a576109ed8282612639565b61135e612a62565b6060814710156127ae5760405163cf47918160e01b8152476004820152602481018390526044016113ac565b5f80856001600160a01b031684866040516127c99190613cc1565b5f6040518083038185875af1925050503d805f8114612803576040519150601f19603f3d011682016040523d82523d5f602084013e612808565b606091505b5091509150611339868383612939565b5f825f01828154811061282d5761282d61351a565b905f5260205f200154905092915050565b5f825f19048411830215820261285b5763ad251c275f526004601cfd5b5091020490565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106128a05772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106128cc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106128ea57662386f26fc10000830492506010015b6305f5e1008310612902576305f5e100830492506008015b612710831061291657612710830492506004015b60648310612928576064830492506002015b600a83106108d65760010192915050565b60608261294e5761294982612a81565b611928565b815115801561296557506001600160a01b0384163b155b1561229f57604051639996b31560e01b81526001600160a01b03851660048201526024016113ac565b612996612aaa565b61243257604051631afcd79f60e31b815260040160405180910390fd5b5f8181526001830160205260408120546129f857508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556108d6565b505f6108d6565b806001600160a01b03163b5f03612a3457604051634c9c8ce360e01b81526001600160a01b03821660048201526024016113ac565b5f80516020613cdd83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b34156124325760405163b398979f60e01b815260040160405180910390fd5b805115612a915780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f612ab3612236565b54600160401b900460ff16919050565b6040518060400160405280612ad6612ae2565b81525f60209091015290565b60405180604001604052805f8152602001612b1760405180606001604052806060815260200160608152602001606081525090565b905290565b6001600160a01b038116811461197a575f80fd5b5f60208284031215612b40575f80fd5b813561192881612b1c565b5f60208284031215612b5b575f80fd5b81356001600160e01b031981168114611928575f80fd5b8035612b7d81612b1c565b919050565b634e487b7160e01b5f52604160045260245ffd5b60405161014081016001600160401b0381118282101715612bb957612bb9612b82565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612be757612be7612b82565b604052919050565b5f6001600160401b03821115612c0757612c07612b82565b50601f01601f191660200190565b5f82601f830112612c24575f80fd5b8135612c37612c3282612bef565b612bbf565b818152846020838601011115612c4b575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f8060808587031215612c7a575f80fd5b8435612c8581612b1c565b93506020850135612c9581612b1c565b92506040850135915060608501356001600160401b03811115612cb6575f80fd5b612cc287828801612c15565b91505092959194509250565b5f60208284031215612cde575f80fd5b5035919050565b5f8060408385031215612cf6575f80fd5b823591506020830135612d0881612b1c565b809150509250929050565b5f6001600160401b03821115612d2b57612d2b612b82565b5060051b60200190565b5f82601f830112612d44575f80fd5b81356020612d54612c3283612d13565b8083825260208201915060208460051b870101935086841115612d75575f80fd5b602086015b84811015612d9a578035612d8d81612b1c565b8352918301918301612d7a565b509695505050505050565b5f805f805f60a08688031215612db9575f80fd5b8535612dc481612b1c565b94506020868101356001600160401b0380821115612de0575f80fd5b818901915089601f830112612df3575f80fd5b8135612e01612c3282612d13565b81815260059190911b8301840190848101908c831115612e1f575f80fd5b938501935b82851015612e46578435612e3781612b1c565b82529385019390850190612e24565b9850612e5791505060408a01612b72565b9550612e6560608a01612b72565b94506080890135925080831115612e7a575f80fd5b5050612e8888828901612d35565b9150509295509295909350565b5f805f805f60a08688031215612ea9575f80fd5b8535612eb481612b1c565b9450602086013593506040860135612ecb81612b1c565b92506060860135612edb81612b1c565b949793965091946080013592915050565b5f8060408385031215612efd575f80fd5b8235612f0881612b1c565b915060208301356001600160401b03811115612f22575f80fd5b612f2e85828601612c15565b9150509250929050565b5f5b83811015612f52578181015183820152602001612f3a565b50505f910152565b5f8151808452612f71816020860160208601612f38565b601f01601f19169290920160200192915050565b602081525f6119286020830184612f5a565b5f805f60408486031215612fa9575f80fd5b8335612fb481612b1c565b925060208401356001600160401b0380821115612fcf575f80fd5b818601915086601f830112612fe2575f80fd5b813581811115612ff0575f80fd5b876020828501011115613001575f80fd5b6020830194508093505050509250925092565b5f805f8060808587031215613027575f80fd5b843561303281612b1c565b935060208501359250604085013561304981612b1c565b9396929550929360600135925050565b5f82601f830112613068575f80fd5b81356020613078612c3283612d13565b8083825260208201915060208460051b870101935086841115613099575f80fd5b602086015b84811015612d9a578035835291830191830161309e565b5f80604083850312156130c6575f80fd5b82356001600160401b038111156130db575f80fd5b6130e785828601613059565b9250506020830135612d0881612b1c565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561314d57603f1988860301845261313b858351612f5a565b9450928501929085019060010161311f565b5092979650505050505050565b5f805f6060848603121561316c575f80fd5b83359250602084013561317e81612b1c565b9150604084013561318e81612b1c565b809150509250925092565b5f805f606084860312156131ab575f80fd5b83356131b681612b1c565b925060208401356131c681612b1c565b91506040840135600d811061318e575f80fd5b5f80604083850312156131ea575f80fd5b82356131f581612b1c565b946020939093013593505050565b5f60208284031215613213575f80fd5b81356001600160401b03811115613228575f80fd5b6113f484828501613059565b5f805f60608486031215613246575f80fd5b833561325181612b1c565b9250602084013561326181612b1c565b929592945050506040919091013590565b5f8060208385031215613283575f80fd5b82356001600160401b0380821115613299575f80fd5b818501915085601f8301126132ac575f80fd5b8135818111156132ba575f80fd5b8660208260051b85010111156132ce575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561314d57603f19888603018452613323858351612f5a565b94509285019290850190600101613307565b803563ffffffff81168114612b7d575f80fd5b5f6101408284031215613359575f80fd5b613361612b96565b61336a83612b72565b815261337860208401613335565b602082015261338960408401613335565b604082015261339a60608401612b72565b60608201526133ab60808401612b72565b60808201526133bc60a08401612b72565b60a08201526133cd60c08401612b72565b60c082015260e083013560e08201526101008084013581830152506101206133f6818501612b72565b908201529392505050565b5f8060408385031215613412575f80fd5b823561341d81612b1c565b91506020830135612d0881612b1c565b5f815180845260208085019450602084015f5b838110156134655781516001600160a01b031687529582019590820190600101613440565b509495945050505050565b602081525f611928602083018461342d565b5f60c08284031215613492575f80fd5b50919050565b5f805f808486036102608112156134ad575f80fd5b6134b78787613482565b945060a060bf19820112156134ca575f80fd5b60c086019350604061015f19820112156134e2575f80fd5b50610160850191506134f8866101a08701613482565b905092959194509250565b5f60208284031215613513575f80fd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b5f815180845260208085019450602084015f5b8381101561346557815180518852838101518489015260408082015190890152606080820151908901526080908101519088015260a09096019590820190600101613541565b848152608060208201525f61359f608083018661342d565b82810360408401526135b1818661352e565b905082810360608401526135c5818561352e565b979650505050505050565b5f60608201858352602060018060a01b038087166020860152606060408601528286518085526080870191506020880194505f5b81811015613622578551841683529484019491840191600101613604565b50909998505050505050505050565b634e487b7160e01b5f52602160045260245ffd5b5f815180845260208085019450602084015f5b8381101561346557815187529582019590820190600101613658565b6001600160a01b03831681526040602082018190525f906113f490830184613645565b5f815160408452805160408501526020808201519150604060608601528151606060808701526136ca60e0870182613645565b82840151607f19888303810160a08a0152815180845291850193505f929091908501905b8084101561370e57845182529385019360019390930192908501906136ee565b5060408601519550818982030160c08a015261372a8187613645565b978501516001600160a01b03169890940197909752509395945050505050565b602081525f6119286020830184613697565b5f6020828403121561376c575f80fd5b81518015158114611928575f80fd5b5f60a0828403121561378b575f80fd5b60405160a081018181106001600160401b03821117156137ad576137ad612b82565b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b8051612b7d81612b1c565b5f610100808385031215613805575f80fd5b604051908101906001600160401b038211818310171561382757613827612b82565b8160405283518152602084015160208201526040840151915061384982612b1c565b81604082015261385b606085016137e8565b606082015261386c608085016137e8565b608082015261387d60a085016137e8565b60a082015261388e60c085016137e8565b60c082015261389f60e085016137e8565b60e0820152949350505050565b5f602082840312156138bc575f80fd5b81516001600160401b038111156138d1575f80fd5b8201601f810184136138e1575f80fd5b80516138ef612c3282612bef565b818152856020838501011115613903575f80fd5b6114cf826020830160208601612f38565b66029b4bd32903e160cd1b81525f8551613935816007850160208a01612f38565b8083019050620103e160ed1b806007830152865161395a81600a850160208b01612f38565b600a9201918201819052855161397781600d850160208a01612f38565b600d9201918201528351613992816010840160208801612f38565b016010019695505050505050565b634e487b7160e01b5f52601160045260245ffd5b5f600182016139c5576139c56139a0565b5060010190565b818103818111156108d6576108d66139a0565b5f808335601e198436030181126139f4575f80fd5b8301803591506001600160401b03821115613a0d575f80fd5b602001915036819003821315613a21575f80fd5b9250929050565b828482375f8382015f81528351613a43818360208801612f38565b0195945050505050565b81516001600160a01b0316815261014081016020830151613a76602084018263ffffffff169052565b506040830151613a8e604084018263ffffffff169052565b506060830151613aa960608401826001600160a01b03169052565b506080830151613ac460808401826001600160a01b03169052565b5060a0830151613adf60a08401826001600160a01b03169052565b5060c0830151613afa60c08401826001600160a01b03169052565b5060e083810151908301526101008084015190830152610120808401516001600160a01b03811682850152611b52565b5f60208284031215613b3a575f80fd5b815161192881612b1c565b8035613b5081612b1c565b6001600160a01b0316825260208101356001600160401b038116808214613b75575f80fd5b80602085015250505050565b8035613b8c81612b1c565b6001600160a01b039081168352602082013590613ba882612b1c565b9081166020840152604082013590613bbf82612b1c565b9081166040840152606082013590613bd682612b1c565b9081166060840152608082013590613bed82612b1c565b908116608084015260a082013590613c0482612b1c565b80821660a085015250505050565b5f6102a08201905060018060a01b0380891683528088166020840152863560408401526020870135606084015260408701356080840152606087013560a0840152608087013560c084015260a0870135613c6b81612b1c565b1660e083015284356101008301526020850135610120830152604085013561014083015260608501356101608301526080850135610180830152613cb36101a0830185613b45565b6135c56101e0830184613b81565b5f8251613cd2818460208701612f38565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a2646970667358221220ae94056934e2696de55cf7257064a8703ba5a661409cee54886e7be27385a6c264736f6c63430008170033";

type SizeFactoryConstructorParams =
  | [linkLibraryAddresses: SizeFactoryLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SizeFactoryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SizeFactory__factory extends ContractFactory {
  constructor(...args: SizeFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SizeFactory__factory.linkBytecode(linkLibraryAddresses),
        signer,
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SizeFactoryLibraryAddresses,
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8498e19059e8c9c59d07dfb635c44386c6\\$__", "g"),
      linkLibraryAddresses[
        "src/factory/libraries/PriceFeedFactoryLibrary.sol:PriceFeedFactoryLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase(),
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c583a0fe7c050ce40cdddde89e71ac1899\\$__", "g"),
      linkLibraryAddresses[
        "src/factory/libraries/NonTransferrableRebasingTokenVaultLibrary.sol:NonTransferrableRebasingTokenVaultLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase(),
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$74708c40afd3f014cbcff13274aefc3e53\\$__", "g"),
      linkLibraryAddresses[
        "src/factory/libraries/MarketFactoryLibrary.sol:MarketFactoryLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<SizeFactory> {
    return super.deploy(overrides || {}) as Promise<SizeFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SizeFactory {
    return super.attach(address) as SizeFactory;
  }
  override connect(signer: Signer): SizeFactory__factory {
    return super.connect(signer) as SizeFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SizeFactoryInterface {
    return new utils.Interface(_abi) as SizeFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): SizeFactory {
    return new Contract(address, _abi, signerOrProvider) as SizeFactory;
  }
}

export interface SizeFactoryLibraryAddresses {
  ["src/factory/libraries/PriceFeedFactoryLibrary.sol:PriceFeedFactoryLibrary"]: string;
  ["src/factory/libraries/NonTransferrableRebasingTokenVaultLibrary.sol:NonTransferrableRebasingTokenVaultLibrary"]: string;
  ["src/factory/libraries/MarketFactoryLibrary.sol:MarketFactoryLibrary"]: string;
}
