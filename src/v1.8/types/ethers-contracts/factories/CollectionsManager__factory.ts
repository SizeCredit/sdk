/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CollectionsManager,
  CollectionsManagerInterface,
} from "../CollectionsManager";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addMarketsToCollection",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "markets",
        type: "address[]",
        internalType: "contract ISize[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addRateProvidersToCollectionMarket",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "rateProviders",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "collectionContainsMarket",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createCollection",
    inputs: [],
    outputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBorrowOfferAPR",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "rateProvider",
        type: "address",
        internalType: "address",
      },
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "apr",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCollectionMarketRateProviders",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLimitOrderAPR",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "rateProvider",
        type: "address",
        internalType: "address",
      },
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "isLoanOffer",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "apr",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanOfferAPR",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "rateProvider",
        type: "address",
        internalType: "address",
      },
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "apr",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSubscribedCollections",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "collectionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_sizeFactory",
        type: "address",
        internalType: "contract ISizeFactory",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isBorrowAPRLowerThanLoanOfferAPRs",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "borrowAPR",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isCopyingCollectionMarketRateProvider",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "rateProvider",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLoanAPRGreaterThanBorrowOfferAPRs",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "loanAPR",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSubscribedToCollection",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isValidCollectionId",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeMarketsFromCollection",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "markets",
        type: "address[]",
        internalType: "contract ISize[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeRateProvidersFromCollectionMarket",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "contract ISize",
      },
      {
        name: "rateProviders",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setUserCollectionCopyLimitOrderConfigs",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "copyLoanOfferConfig",
        type: "tuple",
        internalType: "struct CopyLimitOrderConfig",
        components: [
          {
            name: "minTenor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxTenor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minAPR",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxAPR",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "offsetAPR",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
      {
        name: "copyBorrowOfferConfig",
        type: "tuple",
        internalType: "struct CopyLimitOrderConfig",
        components: [
          {
            name: "minTenor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxTenor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minAPR",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxAPR",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "offsetAPR",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "subscribeUserToCollections",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenByIndex",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenOfOwnerByIndex",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unsubscribeUserFromCollections",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "collectionIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MarketAddedToCollection",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MarketRemovedFromCollection",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RateProviderAddedToMarket",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "rateProvider",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RateProviderRemovedFromMarket",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "rateProvider",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetUserCollectionCopyLimitOrderConfigs",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "copyLoanOfferConfig",
        type: "tuple",
        indexed: false,
        internalType: "struct CopyLimitOrderConfig",
        components: [
          {
            name: "minTenor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxTenor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minAPR",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxAPR",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "offsetAPR",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
      {
        name: "copyBorrowOfferConfig",
        type: "tuple",
        indexed: false,
        internalType: "struct CopyLimitOrderConfig",
        components: [
          {
            name: "minTenor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxTenor",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minAPR",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxAPR",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "offsetAPR",
            type: "int256",
            internalType: "int256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubscribedToCollection",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "UnsubscribedFromCollection",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "collectionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AccessControlUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "neededRole",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721EnumerableForbiddenBatchMint",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721IncorrectOwner",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InsufficientApproval",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721NonexistentToken",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721OutOfBoundsIndex",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "INVALID_MARKET",
    inputs: [
      {
        name: "market",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidCollectionId",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidCollectionMarketRateProvider",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "address",
      },
      {
        name: "rateProvider",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidTenor",
    inputs: [
      {
        name: "tenor",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minTenor",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxTenor",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "MarketNotInCollection",
    inputs: [
      {
        name: "collectionId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "market",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlySizeFactory",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "PAUSED_MARKET",
    inputs: [
      {
        name: "market",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "SafeCastOverflowedIntToUint",
    inputs: [
      {
        name: "value",
        type: "int256",
        internalType: "int256",
      },
    ],
  },
  {
    type: "error",
    name: "SafeCastOverflowedUintToInt",
    inputs: [
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60805161419e620001005f395f8181611e0d01528181611e360152612006015261419e5ff3fe608060405260043610610233575f3560e01c806370a0823111610129578063ad3cb1cc116100a8578063c87b56dd1161006d578063c87b56dd146106b0578063dd2bc302146106cf578063de1eb880146106fb578063e985e9c51461071a578063eb379a5814610739575f80fd5b8063ad3cb1cc146105f7578063b88d4fde14610627578063b9d33d1e14610646578063c260d20614610672578063c4d66de814610691575f80fd5b8063a0529e5f116100ee578063a0529e5f1461054f578063a22cb4651461056e578063abff12221461058d578063ac888c07146105ac578063ac9650d8146105cb575f80fd5b806370a08231146104bf5780638134a9e0146104de57806393c0d3f3146104fd57806395d89b411461051c5780639feffdb014610530575f80fd5b806342842e0e116101b5578063565380571161017a578063565380571461042d5780635fb7f10c1461044e5780636352211e1461046d578063647f1a9c1461048c578063678b9bad146104a0575f80fd5b806342842e0e146103a9578063495e6d89146103c85780634f1ef286146103e75780634f6ccce7146103fa57806352d1902d14610419575f80fd5b806318160ddd116101fb57806318160ddd1461030357806318d5932d1461032d57806320d634561461034c57806323b872dd1461036b5780632f745c591461038a575f80fd5b806301ffc9a71461023757806306fdde031461026b578063081812fc1461028c578063095ea7b3146102c35780630b379508146102e4575b5f80fd5b348015610242575f80fd5b5061025661025136600461340d565b610758565b60405190151581526020015b60405180910390f35b348015610276575f80fd5b5061027f610782565b6040516102629190613475565b348015610297575f80fd5b506102ab6102a6366004613487565b610823565b6040516001600160a01b039091168152602001610262565b3480156102ce575f80fd5b506102e26102dd3660046134b2565b610837565b005b3480156102ef575f80fd5b506102e26102fe36600461356a565b610846565b34801561030e575f80fd5b505f80516020614149833981519152545b604051908152602001610262565b348015610338575f80fd5b506102e261034736600461366c565b61097c565b348015610357575f80fd5b506102566103663660046134b2565b6109ba565b348015610376575f80fd5b506102e26103853660046136bb565b6109e2565b348015610395575f80fd5b5061031f6103a43660046134b2565b610a65565b3480156103b4575f80fd5b506102e26103c33660046136bb565b610ad6565b3480156103d3575f80fd5b5061031f6103e23660046136f9565b610af5565b6102e26103f53660046137bb565b610b10565b348015610405575f80fd5b5061031f610414366004613487565b610b2b565b348015610424575f80fd5b5061031f610b9d565b348015610438575f80fd5b50610256610447366004613487565b6001541190565b348015610459575f80fd5b5061031f6104683660046136f9565b610bb9565b348015610478575f80fd5b506102ab610487366004613487565b610bc9565b348015610497575f80fd5b5061031f610bd3565b3480156104ab575f80fd5b506102566104ba366004613807565b610bf3565b3480156104ca575f80fd5b5061031f6104d936600461384c565b610c0c565b3480156104e9575f80fd5b506102566104f8366004613867565b610c64565b348015610508575f80fd5b506102e2610517366004613895565b610ca6565b348015610527575f80fd5b5061027f610e3c565b34801561053b575f80fd5b5061025661054a366004613807565b610e7a565b34801561055a575f80fd5b506102e2610569366004613935565b610e89565b348015610579575f80fd5b506102e26105883660046139d3565b6110ff565b348015610598575f80fd5b506102e26105a7366004613935565b61110a565b3480156105b7575f80fd5b506102566105c63660046139ff565b6112a6565b3480156105d6575f80fd5b506105ea6105e5366004613a4f565b611347565b6040516102629190613abd565b348015610602575f80fd5b5061027f604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610632575f80fd5b506102e2610641366004613b1f565b61142c565b348015610651575f80fd5b5061066561066036600461384c565b611444565b6040516102629190613b86565b34801561067d575f80fd5b5061031f61068c366004613bc9565b611467565b34801561069c575f80fd5b506102e26106ab36600461384c565b611587565b3480156106bb575f80fd5b5061027f6106ca366004613487565b611701565b3480156106da575f80fd5b506106ee6106e9366004613867565b611765565b6040516102629190613c35565b348015610706575f80fd5b506102e2610715366004613895565b611813565b348015610725575f80fd5b50610256610734366004613c75565b611943565b348015610744575f80fd5b506102e261075336600461356a565b61198f565b5f6001600160e01b0319821663780e9d6360e01b148061077c575061077c82611ab2565b92915050565b5f8051602061410983398151915280546060919081906107a190613ca1565b80601f01602080910402602001604051908101604052809291908181526020018280546107cd90613ca1565b80156108185780601f106107ef57610100808354040283529160200191610818565b820191905f5260205f20905b8154815290600101906020018083116107fb57829003601f168201915b505050505091505090565b5f61082d82611b01565b5061077c82611b38565b610842828233611b71565b5050565b8261085a61085382610bc9565b3383611b7e565b5f8481526002602090815260408083206001600160a01b038716845290915290205460ff166108b357604051631713bf1160e21b8152600481018590526001600160a01b03841660248201526044015b60405180910390fd5b5f5b8251811015610975575f6109098483815181106108d4576108d4613cd9565b6020908102919091018101515f8981526002835260408082206001600160a01b038b16835290935291909120600b0190611be2565b9050801561096c5783828151811061092357610923613cd9565b60200260200101516001600160a01b0316856001600160a01b0316877f41a3856b408397a3953ee2e3fc5961815599fafae92aa64253fea4124c15835260405160405180910390a45b506001016108b5565b5050505050565b5f546001600160a01b031633146109a857604051630b56d23b60e41b81523360048201526024016108aa565b6109b484848484611bf6565b50505050565b6001600160a01b0382165f9081526003602052604081206109db9083611cf5565b9392505050565b6001600160a01b038216610a0b57604051633250574960e11b81525f60048201526024016108aa565b5f610a17838333611d0c565b9050836001600160a01b0316816001600160a01b0316146109b4576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016108aa565b5f5f805160206140e9833981519152610a7d84610c0c565b8310610aae5760405163295f44f760e21b81526001600160a01b0385166004820152602481018490526044016108aa565b6001600160a01b0384165f908152602091825260408082208583529092522054905092915050565b610af083838360405180602001604052805f81525061142c565b505050565b5f610b0486868686865f611467565b90505b95945050505050565b610b18611e02565b610b2182611ea8565b6108428282611f3f565b5f5f805160206140e9833981519152610b4f5f805160206141498339815191525490565b8310610b775760405163295f44f760e21b81525f6004820152602481018490526044016108aa565b806002018381548110610b8c57610b8c613cd9565b905f5260205f200154915050919050565b5f610ba6611ffb565b505f805160206141298339815191525b90565b5f610b0486868686866001611467565b5f61077c82611b01565b600180545f9182610be383613d01565b919050559050610bb63382612044565b5f610c01858585855f61205d565b90505b949350505050565b5f5f805160206141098339815191526001600160a01b038316610c44576040516322718ad960e21b81525f60048201526024016108aa565b6001600160a01b039092165f908152600390920160205250604090205490565b5f610c70836001541190565b610c7b57505f61077c565b505f9182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f546001600160a01b03163314610cd257604051630b56d23b60e41b81523360048201526024016108aa565b5f6040518060a001604052805f81526020015f1981526020015f81526020015f1981526020015f81525090505f5b82518110156109b457610d2d838281518110610d1e57610d1e613cd9565b60200260200101516001541190565b610d6757828181518110610d4357610d43613cd9565b602002602001015160405163500f73d960e01b81526004016108aa91815260200190565b5f610db6848381518110610d7d57610d7d613cd9565b602002602001015160035f886001600160a01b03166001600160a01b031681526020019081526020015f2061230c90919063ffffffff16565b90508015610e3357838281518110610dd057610dd0613cd9565b6020026020010151856001600160a01b03167fe9919c1157673d017b4e5eef8d4c012fadcf6ee40cf5f99a0912a0109b5d584260405160405180910390a3610e3385858481518110610e2457610e24613cd9565b60200260200101518586611bf6565b50600101610d00565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930180546060915f80516020614109833981519152916107a190613ca1565b5f610c0185858585600161205d565b81610e9661085382610bc9565b5f5b82518110156109b4575f5483516001600160a01b0390911690636ec934da90859084908110610ec957610ec9613cd9565b60200260200101516040518263ffffffff1660e01b8152600401610efc91906001600160a01b0391909116815260200190565b602060405180830381865afa158015610f17573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f3b9190613d19565b610f8257828181518110610f5157610f51613cd9565b602002602001015160405163e2a7bea360e01b81526004016108aa91906001600160a01b0391909116815260200190565b828181518110610f9457610f94613cd9565b60200260200101516001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fd7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ffb9190613d19565b156110435782818151811061101257611012613cd9565b602002602001015160405163b4e1115760e01b81526004016108aa91906001600160a01b0391909116815260200190565b5f84815260026020526040812084516001929086908590811061106857611068613cd9565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f015f6101000a81548160ff0219169083151502179055508281815181106110b9576110b9613cd9565b60200260200101516001600160a01b0316847f42e38738c8d2e007a797548d288aea65537b98d212336f6fa33ca20c7a99088560405160405180910390a3600101610e98565b610842338383612317565b8161111761085382610bc9565b5f5b82518110156109b4575f61117960025f8781526020019081526020015f205f86858151811061114a5761114a613cd9565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20600b016123bd565b905061119f8585848151811061119157611191613cd9565b602002602001015183610846565b60025f8681526020019081526020015f205f8584815181106111c3576111c3613cd9565b6020908102919091018101516001600160a01b031682528101919091526040015f908120805460ff19168155600181018290556002810182905560038101829055600481018290556005810182905560068101829055600781018290556008810182905560098101829055600a810182905590600b8201818181611247828261339f565b50505050505083828151811061125f5761125f613cd9565b60200260200101516001600160a01b0316857fa328ee555a02ae133b939087dcc439417783329f687112f415290a4637f64ab760405160405180910390a350600101611119565b5f6112b2846001541190565b6112bd57505f610c04565b6001600160a01b0385165f9081526003602052604090206112de9085611cf5565b6112e957505f610c04565b5f8481526002602090815260408083206001600160a01b038716845290915290205460ff1661131957505f610c04565b5f8481526002602090815260408083206001600160a01b03871684529091529020610c0190600b01836123c9565b604080515f815260208101909152606090826001600160401b03811115611370576113706134dc565b6040519080825280602002602001820160405280156113a357816020015b606081526020019060019003908161138e5790505b5091505f5b83811015611424576113ff308686848181106113c6576113c6613cd9565b90506020028101906113d89190613d47565b856040516020016113eb93929190613d90565b6040516020818303038152906040526123ea565b83828151811061141157611411613cd9565b60209081029190910101526001016113a8565b505092915050565b6114378484846109e2565b6109b43385858585612453565b6001600160a01b0381165f90815260036020526040902060609061077c906123bd565b5f5f1986036114835761147c87868585612572565b905061157d565b61148f878787876112a6565b6114c65760405163c6c8526f60e01b8152600481018790526001600160a01b038087166024830152851660448201526064016108aa565b5f6114d388888886612624565b80519091508410806114e85750806020015184115b1561151d5780516020820151604051633e5d735760e21b815260048101879052602481019290925260448201526064016108aa565b5f61152a86888787612572565b905061154c826080015161153d83612652565b6115479190613db5565b612682565b92508160400151831015611566578160400151925061157a565b816060015183111561157a57816060015192505b50505b9695505050505050565b5f6115906126a7565b805490915060ff600160401b82041615906001600160401b03165f811580156115b65750825b90505f826001600160401b031660011480156115d15750303b155b9050811580156115df575080155b156115fd5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561162757845460ff60401b1916600160401b1785555b6116816040518060400160405280601081526020016f53697a6520436f6c6c656374696f6e7360801b8152506040518060400160405280601081526020016f53495a455f434f4c4c454354494f4e5360801b8152506126cf565b6116896126e1565b6116916126e1565b6116996126e1565b5f80546001600160a01b0319166001600160a01b03881617905583156116f957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b606061170c82611b01565b505f6117166126e9565b90505f8151116117345760405180602001604052805f8152506109db565b8061173e84612718565b60405160200161174f929190613dd4565b6040516020818303038152906040529392505050565b6060611772836001541190565b6117925760405163500f73d960e01b8152600481018490526024016108aa565b5f8381526002602090815260408083206001600160a01b038616845290915290205460ff166117e657604051631713bf1160e21b8152600481018490526001600160a01b03831660248201526044016108aa565b5f8381526002602090815260408083206001600160a01b038616845290915290206109db90600b016123bd565b5f546001600160a01b0316331461183f57604051630b56d23b60e41b81523360048201526024016108aa565b6118476133ba565b5f5b82518110156109b457611867838281518110610d1e57610d1e613cd9565b61187d57828181518110610d4357610d43613cd9565b5f6118cc84838151811061189357611893613cd9565b602002602001015160035f886001600160a01b03166001600160a01b031681526020019081526020015f206127a790919063ffffffff16565b9050801561193a578382815181106118e6576118e6613cd9565b6020026020010151856001600160a01b03167fd0b1806956ca744bd88a4e4057a137959cb88d8d4e7e8d793301cfdf7df7cb2b60405160405180910390a361193a85858481518110610e2457610e24613cd9565b50600101611849565b6001600160a01b039182165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b8261199c61085382610bc9565b5f8481526002602090815260408083206001600160a01b038716845290915290205460ff166119f057604051631713bf1160e21b8152600481018590526001600160a01b03841660248201526044016108aa565b5f5b8251811015610975575f611a46848381518110611a1157611a11613cd9565b6020908102919091018101515f8981526002835260408082206001600160a01b038b16835290935291909120600b01906127b2565b90508015611aa957838281518110611a6057611a60613cd9565b60200260200101516001600160a01b0316856001600160a01b0316877f8e2f88c467ecc78e2adbbe6d65b6176668f4cc362a196a5c46d203a9db8d8fbe60405160405180910390a45b506001016119f2565b5f6001600160e01b031982166380ac58cd60e01b1480611ae257506001600160e01b03198216635b5e139f60e01b145b8061077c57506301ffc9a760e01b6001600160e01b031983161461077c565b5f80611b0c836127c6565b90506001600160a01b03811661077c57604051637e27328960e01b8152600481018490526024016108aa565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b610af083838360016127ff565b611b89838383612912565b610af0576001600160a01b038316611bb757604051637e27328960e01b8152600481018290526024016108aa565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016108aa565b5f6109db836001600160a01b038416612976565b611c01836001541190565b611c215760405163500f73d960e01b8152600481018490526024016108aa565b60408051808201825283815260208082018481526001600160a01b0388165f81815260048085528682208a8352855290869020945180518655808501516001870155808701516002870155606080820151600388015560809182015192870192909255925180516005870155938401516006860155838601516007860155830151600885015591015160099092019190915590518491907fb20b9722fd4401237d66274470a4daf19d973d3f3150edba3bcadf8467ed9b4290611ce79086908690613e02565b60405180910390a350505050565b5f81815260018301602052604081205415156109db565b5f80611d19858585612a59565b90506001600160a01b038116611da057611d9b845f8051602061414983398151915280545f8381527f645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed0360205260408120829055600182018355919091527fa42f15e5d656f8155fd7419d740a6073999f19cd6e061449ce4a257150545bf20155565b611dc3565b846001600160a01b0316816001600160a01b031614611dc357611dc38185612b5b565b6001600160a01b038516611ddf57611dda84612bf2565b610c04565b846001600160a01b0316816001600160a01b031614610c0457610c048585612cbf565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611e8857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611e7c5f80516020614129833981519152546001600160a01b031690565b6001600160a01b031614155b15611ea65760405163703e46dd60e11b815260040160405180910390fd5b565b5f8054604051632474521560e21b8152600481018390523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa158015611ef5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f199190613d19565b6108425760405163e2517d3f60e01b8152336004820152602481018290526044016108aa565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f99575060408051601f3d908101601f19168201909252611f9691810190613e72565b60015b611fc157604051634c9c8ce360e01b81526001600160a01b03831660048201526024016108aa565b5f805160206141298339815191528114611ff157604051632a87526960e21b8152600481018290526024016108aa565b610af08383612d17565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611ea65760405163703e46dd60e11b815260040160405180910390fd5b610842828260405180602001604052805f815250612d6c565b6001600160a01b0385165f908152600360205260408120815b61207f82612d83565b811015612213575f6120918383612d8c565b5f8181526002602090815260408083206001600160a01b038c16845290915290205490915060ff166120c3575061220b565b5f8181526002602090815260408083206001600160a01b038b1684529091528120600b01905b6120f282612d83565b811015612207575f6121048383612d8c565b9050612112818b8a15612d97565b1561211d57506121ff565b306001600160a01b031663c260d2068d868d858e8e156040518763ffffffff1660e01b815260040161215496959493929190613e89565b602060405180830381865afa92505050801561218d575060408051601f3d908101601f1916820190925261218a91810190613e72565b60015b6121c6573d8080156121ba576040519150601f19603f3d011682016040523d82523d5f602084013e6121bf565b606091505b50506121fd565b8880156121d357508b8110155b806121e75750881580156121e75750808c10155b156121fb575f975050505050505050610b07565b505b505b6001016120e9565b5050505b600101612076565b5061222087868515612d97565b1561222f576001915050610b07565b604051636130690360e11b8152309063c260d2069061225e908a905f19908a905f908b908b1590600401613e89565b602060405180830381865afa925050508015612297575060408051601f3d908101601f1916820190925261229491810190613e72565b60015b6122d0573d8080156122c4576040519150601f19603f3d011682016040523d82523d5f602084013e6122c9565b606091505b5050612302565b8380156122dd5750868110155b806122f15750831580156122f15750808710155b15612300575f92505050610b07565b505b6001915050610b07565b5f6109db8383612e6d565b5f805160206141098339815191526001600160a01b03831661235757604051630b61174360e31b81526001600160a01b03841660048201526024016108aa565b6001600160a01b038481165f818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319101611ce7565b60605f6109db83612eb9565b6001600160a01b0381165f90815260018301602052604081205415156109db565b60605f80846001600160a01b0316846040516124069190613ec3565b5f60405180830381855af49150503d805f811461243e576040519150601f19603f3d011682016040523d82523d5f602084013e612443565b606091505b5091509150610b07858383612f12565b6001600160a01b0383163b1561097557604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290612495908890889087908790600401613ede565b6020604051808303815f875af19250505080156124cf575060408051601f3d908101601f191682019092526124cc91810190613f10565b60015b612536573d8080156124fc576040519150601f19603f3d011682016040523d82523d5f602084013e612501565b606091505b5080515f0361252e57604051633250574960e11b81526001600160a01b03851660048201526024016108aa565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146116f957604051633250574960e11b81526001600160a01b03851660048201526024016108aa565b5f81156125ef57604051620d37ab60e81b81526001600160a01b03868116600483015260248201859052851690630d37ab00906044015b602060405180830381865afa1580156125c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125e89190613e72565b9050610c04565b604051632b59bd9960e01b81526001600160a01b03868116600483015260248201859052851690632b59bd99906044016125a9565b61262c6133ba565b612637858484612f6e565b90506126428161304b565b15610c0457610c0185858461308a565b5f6001600160ff1b0382111561267e5760405163123baf0360e11b8152600481018390526024016108aa565b5090565b5f8082121561267e57604051635467221960e11b8152600481018390526024016108aa565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0061077c565b6126d7613125565b610842828261314a565b611ea6613125565b60606126f446612718565b6040516020016127049190613f2b565b604051602081830303815290604052905090565b60605f6127248361317a565b60010190505f816001600160401b03811115612742576127426134dc565b6040519080825280601f01601f19166020018201604052801561276c576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461277657509392505050565b5f6109db8383612976565b5f6109db836001600160a01b038416612e6d565b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b5f80516020614109833981519152818061282157506001600160a01b03831615155b156128e2575f61283085611b01565b90506001600160a01b0384161580159061285c5750836001600160a01b0316816001600160a01b031614155b801561286f575061286d8185611943565b155b156128985760405163a9fbf51f60e01b81526001600160a01b03851660048201526024016108aa565b82156128e05784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5f93845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f6001600160a01b03831615801590610c045750826001600160a01b0316846001600160a01b0316148061294b575061294b8484611943565b80610c045750826001600160a01b031661296483611b38565b6001600160a01b031614949350505050565b5f8181526001830160205260408120548015612a50575f612998600183613d34565b85549091505f906129ab90600190613d34565b9050808214612a0a575f865f0182815481106129c9576129c9613cd9565b905f5260205f200154905080875f0184815481106129e9576129e9613cd9565b5f918252602080832090910192909255918252600188019052604090208390555b8554869080612a1b57612a1b613f87565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f90556001935050505061077c565b5f91505061077c565b5f5f8051602061410983398151915281612a72856127c6565b90506001600160a01b03841615612a8e57612a8e818587611b7e565b6001600160a01b03811615612aca57612aa95f865f806127ff565b6001600160a01b0381165f908152600383016020526040902080545f190190555b6001600160a01b03861615612afa576001600160a01b0386165f9081526003830160205260409020805460010190555b5f85815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b5f805160206140e98339815191525f612b7384610c0c565b5f8481526001840160209081526040808320546001600160a01b03891684529186905290912091925090818314612bcb575f838152602082815260408083205485845281842081905583526001870190915290208290555b5f948552600190930160209081526040808620869055928552929092528220919091555050565b5f80516020614149833981519152545f805160206140e9833981519152905f90612c1e90600190613d34565b5f848152600384016020526040812054600285018054939450909284908110612c4957612c49613cd9565b905f5260205f200154905080846002018381548110612c6a57612c6a613cd9565b5f91825260208083209091019290925582815260038601909152604080822084905586825281205560028401805480612ca557612ca5613f87565b600190038181905f5260205f20015f905590555050505050565b5f805160206140e98339815191525f6001612cd985610c0c565b612ce39190613d34565b6001600160a01b039094165f9081526020838152604080832087845282528083208690559482526001909301909252502055565b612d2082613251565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115612d6457610af082826123ea565b6108426132b4565b612d7683836132d3565b610af0335f858585612453565b5f61077c825490565b5f6109db8383613334565b5f81612e0557604051630cfa9a4960e01b81526001600160a01b038581166004830152841690630cfa9a4990602401602060405180830381865afa158015612de1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dda9190613d19565b60405163044ce7c360e41b81526001600160a01b0385811660048301528416906344ce7c3090602401602060405180830381865afa158015612e49573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c049190613d19565b5f818152600183016020526040812054612eb257508154600181810184555f84815260208082209093018490558454848252828601909352604090209190915561077c565b505f61077c565b6060815f01805480602002602001604051908101604052809291908181526020018280548015612f0657602002820191905f5260205f20905b815481526020019060010190808311612ef2575b50505050509050919050565b606082612f2757612f228261335a565b6109db565b8151158015612f3e57506001600160a01b0384163b155b15612f6757604051639996b31560e01b81526001600160a01b03851660048201526024016108aa565b50806109db565b612f766133ba565b81612fe35760405163c421a75960e01b81526001600160a01b03858116600483015284169063c421a7599060240160a060405180830381865afa158015612fbf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dda9190613f9b565b604051630264211160e11b81526001600160a01b0385811660048301528416906304c842229060240160a060405180830381865afa158015613027573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c049190613f9b565b80515f9015801561305e57506020820151155b801561306c57506040820151155b801561307a57506060820151155b801561077c575050608001511590565b6130926133ba565b816130c1576001600160a01b0384165f90815260046020908152604080832086845290915290206005016130e4565b6001600160a01b0384165f90815260046020908152604080832086845290915290205b6040805160a0810182528254815260018301546020820152600283015491810191909152600382015460608201526004909101546080820152949350505050565b61312d613386565b611ea657604051631afcd79f60e31b815260040160405180910390fd5b613152613125565b5f805160206141098339815191528061316b848261402d565b50600181016109b4838261402d565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106131b85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106131e4576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061320257662386f26fc10000830492506010015b6305f5e100831061321a576305f5e100830492506008015b612710831061322e57612710830492506004015b60648310613240576064830492506002015b600a831061077c5760010192915050565b806001600160a01b03163b5f0361328657604051634c9c8ce360e01b81526001600160a01b03821660048201526024016108aa565b5f8051602061412983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b3415611ea65760405163b398979f60e01b815260040160405180910390fd5b6001600160a01b0382166132fc57604051633250574960e11b81525f60048201526024016108aa565b5f61330883835f611d0c565b90506001600160a01b03811615610af0576040516339e3563760e11b81525f60048201526024016108aa565b5f825f01828154811061334957613349613cd9565b905f5260205f200154905092915050565b80511561336a5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b50565b5f61338f6126a7565b54600160401b900460ff16919050565b5080545f8255905f5260205f209081019061338391906133e4565b6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b5b8082111561267e575f81556001016133e5565b6001600160e01b031981168114613383575f80fd5b5f6020828403121561341d575f80fd5b81356109db816133f8565b5f5b8381101561344257818101518382015260200161342a565b50505f910152565b5f8151808452613461816020860160208601613428565b601f01601f19169290920160200192915050565b602081525f6109db602083018461344a565b5f60208284031215613497575f80fd5b5035919050565b6001600160a01b0381168114613383575f80fd5b5f80604083850312156134c3575f80fd5b82356134ce8161349e565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b60405160a081016001600160401b0381118282101715613512576135126134dc565b60405290565b604051601f8201601f191681016001600160401b0381118282101715613540576135406134dc565b604052919050565b5f6001600160401b03821115613560576135606134dc565b5060051b60200190565b5f805f6060848603121561357c575f80fd5b8335925060208085013561358f8161349e565b925060408501356001600160401b038111156135a9575f80fd5b8501601f810187136135b9575f80fd5b80356135cc6135c782613548565b613518565b81815260059190911b820183019083810190898311156135ea575f80fd5b928401925b828410156136115783356136028161349e565b825292840192908401906135ef565b80955050505050509250925092565b5f60a08284031215613630575f80fd5b6136386134f0565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b5f805f806101808587031215613680575f80fd5b843561368b8161349e565b9350602085013592506136a18660408701613620565b91506136b08660e08701613620565b905092959194509250565b5f805f606084860312156136cd575f80fd5b83356136d88161349e565b925060208401356136e88161349e565b929592945050506040919091013590565b5f805f805f60a0868803121561370d575f80fd5b85356137188161349e565b945060208601359350604086013561372f8161349e565b9250606086013561373f8161349e565b949793965091946080013592915050565b5f82601f83011261375f575f80fd5b81356001600160401b03811115613778576137786134dc565b61378b601f8201601f1916602001613518565b81815284602083860101111561379f575f80fd5b816020850160208301375f918101602001919091529392505050565b5f80604083850312156137cc575f80fd5b82356137d78161349e565b915060208301356001600160401b038111156137f1575f80fd5b6137fd85828601613750565b9150509250929050565b5f805f806080858703121561381a575f80fd5b84356138258161349e565b935060208501359250604085013561383c8161349e565b9396929550929360600135925050565b5f6020828403121561385c575f80fd5b81356109db8161349e565b5f8060408385031215613878575f80fd5b82359150602083013561388a8161349e565b809150509250929050565b5f80604083850312156138a6575f80fd5b82356138b18161349e565b91506020838101356001600160401b038111156138cc575f80fd5b8401601f810186136138dc575f80fd5b80356138ea6135c782613548565b81815260059190911b82018301908381019088831115613908575f80fd5b928401925b828410156139265783358252928401929084019061390d565b80955050505050509250929050565b5f8060408385031215613946575f80fd5b823591506020808401356001600160401b03811115613963575f80fd5b8401601f81018613613973575f80fd5b80356139816135c782613548565b81815260059190911b8201830190838101908883111561399f575f80fd5b928401925b828410156139265783356139b78161349e565b825292840192908401906139a4565b8015158114613383575f80fd5b5f80604083850312156139e4575f80fd5b82356139ef8161349e565b9150602083013561388a816139c6565b5f805f8060808587031215613a12575f80fd5b8435613a1d8161349e565b9350602085013592506040850135613a348161349e565b91506060850135613a448161349e565b939692955090935050565b5f8060208385031215613a60575f80fd5b82356001600160401b0380821115613a76575f80fd5b818501915085601f830112613a89575f80fd5b813581811115613a97575f80fd5b8660208260051b8501011115613aab575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b82811015613b1257603f19888603018452613b0085835161344a565b94509285019290850190600101613ae4565b5092979650505050505050565b5f805f8060808587031215613b32575f80fd5b8435613b3d8161349e565b93506020850135613b4d8161349e565b92506040850135915060608501356001600160401b03811115613b6e575f80fd5b613b7a87828801613750565b91505092959194509250565b602080825282518282018190525f9190848201906040850190845b81811015613bbd57835183529284019291840191600101613ba1565b50909695505050505050565b5f805f805f8060c08789031215613bde575f80fd5b8635613be98161349e565b9550602087013594506040870135613c008161349e565b93506060870135613c108161349e565b92506080870135915060a0870135613c27816139c6565b809150509295509295509295565b602080825282518282018190525f9190848201906040850190845b81811015613bbd5783516001600160a01b031683529284019291840191600101613c50565b5f8060408385031215613c86575f80fd5b8235613c918161349e565b9150602083013561388a8161349e565b600181811c90821680613cb557607f821691505b602082108103613cd357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f60018201613d1257613d12613ced565b5060010190565b5f60208284031215613d29575f80fd5b81516109db816139c6565b8181038181111561077c5761077c613ced565b5f808335601e19843603018112613d5c575f80fd5b8301803591506001600160401b03821115613d75575f80fd5b602001915036819003821315613d89575f80fd5b9250929050565b828482375f8382015f81528351613dab818360208801613428565b0195945050505050565b8082018281125f83128015821682158216171561142457611424613ced565b5f8351613de5818460208801613428565b835190830190613df9818360208801613428565b01949350505050565b6101408101613e3c828580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b825160a0830152602083015160c0830152604083015160e0830152606083015161010083015260808301516101208301526109db565b5f60208284031215613e82575f80fd5b5051919050565b6001600160a01b0396871681526020810195909552928516604085015293166060830152608082019290925290151560a082015260c00190565b5f8251613ed4818460208701613428565b9190910192915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90610b049083018461344a565b5f60208284031215613f20575f80fd5b81516109db816133f8565b7f68747470733a2f2f6170692e73697a652e6372656469742f636f6c6c656374698152636f6e732f60e01b60208201525f8251613f6f816024850160208701613428565b602f60f81b6024939091019283015250602501919050565b634e487b7160e01b5f52603160045260245ffd5b5f60a08284031215613fab575f80fd5b613fb36134f0565b82518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b601f821115610af057805f5260205f20601f840160051c8101602085101561400e5750805b601f840160051c820191505b81811015610975575f815560010161401a565b81516001600160401b03811115614046576140466134dc565b61405a816140548454613ca1565b84613fe9565b602080601f83116001811461408d575f84156140765750858301515b5f19600386901b1c1916600185901b1785556116f9565b5f85815260208120601f198616915b828110156140bb5788860151825594840194600190910190840161409c565b50858210156140d857878501515f19600388901b60f8161c191681555b5050505050600190811b0190555056fe645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed0080bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed02a264697066735822122021e4470df07f7e75ac6571ab49f1e05aad8ab9ac39d9d4eb5611acb5bb313ea064736f6c63430008170033";

type CollectionsManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectionsManagerConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollectionsManager__factory extends ContractFactory {
  constructor(...args: CollectionsManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<CollectionsManager> {
    return super.deploy(overrides || {}) as Promise<CollectionsManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CollectionsManager {
    return super.attach(address) as CollectionsManager;
  }
  override connect(signer: Signer): CollectionsManager__factory {
    return super.connect(signer) as CollectionsManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectionsManagerInterface {
    return new utils.Interface(_abi) as CollectionsManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): CollectionsManager {
    return new Contract(address, _abi, signerOrProvider) as CollectionsManager;
  }
}
