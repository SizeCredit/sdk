{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "buyCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditLimitOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct BuyCreditLimitParams",
              "components": [
                {
                  "name": "maxDueDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "internalType": "struct YieldCurve",
                  "components": [
                    {
                      "name": "tenors",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    },
                    {
                      "name": "aprs",
                      "type": "int256[]",
                      "internalType": "int256[]"
                    },
                    {
                      "name": "marketRateMultipliers",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarketOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct BuyCreditMarketParams",
              "components": [
                {
                  "name": "borrower",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "exactAmountIn",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ClaimParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "collateralRatio",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "compensate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CompensateParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "creditPositionToCompensateId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "compensateOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct CompensateOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct CompensateParams",
              "components": [
                {
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "creditPositionToCompensateId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "copyLimitOrders",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CopyLimitOrdersParams",
          "components": [
            {
              "name": "copyAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "copyLoanOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            },
            {
              "name": "copyBorrowOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "copyLimitOrdersOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct CopyLimitOrdersOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct CopyLimitOrdersParams",
              "components": [
                {
                  "name": "copyAddress",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "internalType": "struct CopyLimitOrder",
                  "components": [
                    {
                      "name": "minTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "minAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "offsetAPR",
                      "type": "int256",
                      "internalType": "int256"
                    }
                  ]
                },
                {
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "internalType": "struct CopyLimitOrder",
                  "components": [
                    {
                      "name": "minTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "minAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "offsetAPR",
                      "type": "int256",
                      "internalType": "int256"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "data",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DataView",
          "components": [
            {
              "name": "nextDebtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nextCreditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "collateralToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "borrowAToken",
              "type": "address",
              "internalType": "contract NonTransferrableScaledTokenV1_5"
            },
            {
              "name": "debtToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "contract IPool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "debtTokenAmountToCollateralTokenAmount",
      "inputs": [
        {
          "name": "borrowATokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositOnBehalfOf",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct DepositParams",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "to", "type": "address", "internalType": "address" }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "feeConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBorrowOfferAPR",
      "inputs": [
        { "name": "borrower", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBuyCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCreditPosition",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct CreditPosition",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            { "name": "forSale", "type": "bool", "internalType": "bool" },
            { "name": "credit", "type": "uint256", "internalType": "uint256" },
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPosition",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DebtPosition",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "futureValue",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "dueDate", "type": "uint256", "internalType": "uint256" },
            {
              "name": "liquidityIndexAtRepayment",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPositionAssignedCollateral",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanOfferAPR",
      "inputs": [
        { "name": "lender", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanStatus",
      "inputs": [
        { "name": "positionId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "uint8", "internalType": "enum LoanStatus" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPositionsCount",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSellCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "creditAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSwapFee",
      "inputs": [
        { "name": "cash", "type": "uint256", "internalType": "uint256" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserCopyLimitOrders",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserCopyLimitOrders",
          "components": [
            {
              "name": "copyAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "copyLoanOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            },
            {
              "name": "copyBorrowOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserView",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserView",
          "components": [
            {
              "name": "user",
              "type": "tuple",
              "internalType": "struct User",
              "components": [
                {
                  "name": "loanOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "borrowOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            { "name": "account", "type": "address", "internalType": "address" },
            {
              "name": "collateralTokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "debtBalance",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        {
          "name": "f",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "r",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowAToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenCap",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "o",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        },
        {
          "name": "d",
          "type": "tuple",
          "internalType": "struct InitializeDataParams",
          "components": [
            { "name": "weth", "type": "address", "internalType": "address" },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "borrowATokenV1_5",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "sizeFactory",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isCreditPositionId",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionId",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionLiquidatable",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "deadline", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "liquidateWithReplacement",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateWithReplacementParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "liquidatorProfitBorrowToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multicall",
      "inputs": [
        { "name": "_data", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [
        { "name": "results", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "oracle",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "partialRepay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct PartialRepayParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "reinitialize",
      "inputs": [
        {
          "name": "_sizeFactory",
          "type": "address",
          "internalType": "contract ISizeFactory"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct RepayParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "riskConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowAToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowATokenCap",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "selfLiquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SelfLiquidateParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "selfLiquidateOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SelfLiquidateOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SelfLiquidateParams",
              "components": [
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimitOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SellCreditLimitOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SellCreditLimitParams",
              "components": [
                {
                  "name": "maxDueDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "internalType": "struct YieldCurve",
                  "components": [
                    {
                      "name": "tenors",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    },
                    {
                      "name": "aprs",
                      "type": "int256[]",
                      "internalType": "int256[]"
                    },
                    {
                      "name": "marketRateMultipliers",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarketOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SellCreditMarketOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SellCreditMarketParams",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "exactAmountIn",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfiguration",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationParams",
          "components": [
            {
              "name": "openingLimitBorrowCR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allCreditPositionsForSaleDisabled",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIdsForSale",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfigurationOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SetUserConfigurationParams",
              "components": [
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "creditPositionIdsForSale",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "creditPositionIds",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setVariablePoolBorrowRate",
      "inputs": [
        { "name": "borrowRate", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sizeFactory",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ISizeFactory"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateConfig",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct UpdateConfigParams",
          "components": [
            { "name": "key", "type": "string", "internalType": "string" },
            { "name": "value", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct WithdrawParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct WithdrawOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct WithdrawParams",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "to", "type": "address", "internalType": "address" }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VariablePoolBorrowRateUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "newBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AccessControlBadConfirmation", "inputs": [] },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "neededRole", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "EnforcedPause", "inputs": [] },
    { "type": "error", "name": "ExpectedPause", "inputs": [] },
    { "type": "error", "name": "FailedCall", "inputs": [] },
    {
      "type": "error",
      "name": "INVALID_MARKET",
      "inputs": [
        { "name": "market", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "MUST_IMPROVE_COLLATERAL_RATIO",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "crBefore", "type": "uint256", "internalType": "uint256" },
        { "name": "crAfter", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "NOT_SUPPORTED", "inputs": [] },
    { "type": "error", "name": "NULL_ADDRESS", "inputs": [] },
    { "type": "error", "name": "NULL_TENOR", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051615e57620001005f395f818161384e0152818161387701526139df0152615e575ff3fe6080604052600436106103c9575f3560e01c80635cbc51eb116101f4578063b5ec748711610113578063e5af06ce116100a8578063f7e7d1fd11610078578063f7e7d1fd14610c45578063f85c3cd414610c64578063fa7a5b1014610c83578063fa823af514610caa578063fd17174a14610cbd575f80fd5b8063e5af06ce14610bed578063f052e7a414610c0c578063f45bf01c14610c1f578063f54ae18b14610c32575f80fd5b8063ccd8d4d1116100e3578063ccd8d4d114610b95578063d547741f14610ba8578063d8d933a514610bc7578063e05001f514610bda575f80fd5b8063b5ec748714610b18578063c73d983314610b44578063ca40742c14610b57578063ccc9681514610b76575f80fd5b80638628babd11610189578063a475207611610159578063a475207614610a7d578063ac9650d814610a9c578063ad3cb1cc14610abc578063b36116f614610aec575f80fd5b80638628babd14610a255780638e57277614610a3857806391d1485414610a4b578063a217fddf14610a6a575f80fd5b80637c90a6ca116101c45780637c90a6ca1461095e5780637dc0d1d0146109bd5780637f417c06146109fe5780638456cb5914610a11575f80fd5b80635cbc51eb146107c357806364eb0a71146107ef57806373d4a13a1461080e57806376c1b82f14610932575f80fd5b80632ed28ba2116102eb5780634cbd882c11610280578063536b9c7911610250578063536b9c791461072657806353e043d41461073957806354137c7e1461074c57806354fd4d501461076b5780635c975abb146107a0575f80fd5b80634cbd882c146106cd5780634f1ef286146106ec5780634fd9a8a5146106ff57806352d1902d14610712575f80fd5b806337501921116102bb57806337501921146106675780633ae6d7c3146106935780633e3c119b146106a65780633f4ba83a146106b9575f80fd5b80632ed28ba2146105ea5780632f2ff15d1461061657806336568abe146106355780633746f85814610654575f80fd5b80631ca3b0cb116103615780632b4c9a20116103315780632b4c9a20146105865780632c60185c146105995780632cc884c5146105b85780632e106f21146105d7575f80fd5b80631ca3b0cb146104c75780631e5eb1d0146104f05780631fcd4a3414610554578063248a9ca314610567575f80fd5b8063134f3f961161039c578063134f3f96146104485780631970e5ea1461045b57806319a7359b146104885780631c4fd41c1461049b575f80fd5b806301ffc9a7146103cd57806302f2855a146104015780630317b9df146104165780630cf8542f14610435575b5f80fd5b3480156103d8575f80fd5b506103ec6103e73660046142aa565b610cd0565b60405190151581526020015b60405180910390f35b61041461040f3660046142e7565b610d06565b005b348015610421575f80fd5b50610414610430366004614311565b610ddb565b6104146104433660046142e7565b610edf565b610414610456366004614559565b610f0f565b348015610466575f80fd5b5061047a6104753660046145d7565b610fb5565b6040519081526020016103f8565b6104146104963660046145ee565b610fc0565b3480156104a6575f80fd5b506104ba6104b53660046145d7565b610ff4565b6040516103f891906145fe565b3480156104d2575f80fd5b506104db61106f565b604080519283526020830191909152016103f8565b3480156104fb575f80fd5b506105046110a2565b6040516103f89190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b6104146105623660046146ec565b611154565b348015610572575f80fd5b5061047a6105813660046145d7565b6112fc565b6104146105943660046142e7565b61131c565b3480156105a4575f80fd5b5061047a6105b3366004614707565b611349565b3480156105c3575f80fd5b5061047a6105d2366004614727565b61137c565b6104146105e5366004614751565b611407565b3480156105f5575f80fd5b50610609610604366004614787565b61142d565b6040516103f891906147cf565b348015610621575f80fd5b5061041461063036600461482e565b6114ae565b348015610640575f80fd5b5061041461064f36600461482e565b6114d0565b610414610662366004614311565b611508565b348015610672575f80fd5b50610686610681366004614787565b61152e565b6040516103f8919061485c565b6104146106a13660046148e0565b6115af565b6104db6106b436600461491e565b6117ca565b3480156106c4575f80fd5b50610414611a62565b3480156106d8575f80fd5b506104146106e736600461492e565b611abb565b6104146106fa366004614954565b611b81565b61041461070d366004614b5f565b611ba0565b34801561071d575f80fd5b5061047a611c46565b610414610734366004614bcf565b611c61565b610414610747366004614b5f565b611d52565b348015610757575f80fd5b5061047a6107663660046145d7565b611df8565b348015610776575f80fd5b5060408051808201909152600481526376312e3760e01b60208201525b6040516103f89190614c6d565b3480156107ab575f80fd5b505f80516020615e028339815191525460ff166103ec565b3480156107ce575f80fd5b506107e26107dd366004614c7f565b611ee4565b6040516103f89190614d68565b3480156107fa575f80fd5b506103ec6108093660046145d7565b6122f6565b348015610819575f80fd5b506108c160408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e09283015190911691810191909152610100016103f8565b34801561093d575f80fd5b5061095161094c3660046145d7565b612302565b6040516103f89190614e0a565b348015610969575f80fd5b506109726123c8565b6040516103f891905f60c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b3480156109c8575f80fd5b506109d161246c565b6040805182516001600160a01b031681526020928301516001600160401b031692810192909252016103f8565b610414610a0c366004614e18565b6124ef565b348015610a1c575f80fd5b50610414612593565b610414610a33366004614ee6565b6125ec565b610414610a463660046142e7565b612692565b348015610a56575f80fd5b506103ec610a6536600461482e565b6126bf565b348015610a75575f80fd5b5061047a5f81565b348015610a88575f80fd5b50610414610a97366004614f2a565b6126f5565b610aaf610aaa366004614f94565b612965565b6040516103f89190615002565b348015610ac7575f80fd5b50610793604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610af7575f80fd5b50610b0b610b06366004614c7f565b61297a565b6040516103f89190615094565b348015610b23575f80fd5b50610b37610b323660046145d7565b612a32565b6040516103f891906150cc565b610414610b523660046146ec565b612b18565b348015610b62575f80fd5b5061047a610b71366004614c7f565b612c5b565b348015610b81575f80fd5b506103ec610b903660046145d7565b612cde565b610414610ba3366004614311565b612ce9565b348015610bb3575f80fd5b50610414610bc236600461482e565b612d0f565b610414610bd5366004614787565b612d2b565b61047a610be83660046142e7565b612d60565b348015610bf8575f80fd5b506103ec610c073660046145d7565b612eb5565b610414610c1a366004615100565b612f30565b610414610c2d366004615121565b612f5d565b610414610c403660046151ae565b613008565b348015610c50575f80fd5b50610414610c5f366004614c7f565b6130ae565b348015610c6f575f80fd5b5061047a610c7e366004614727565b61328f565b348015610c8e575f80fd5b50601c546040516001600160a01b0390911681526020016103f8565b610414610cb83660046151ae565b6132df565b610414610ccb366004615121565b613385565b5f6001600160e01b03198216637965db0b60e01b1480610d0057506301ffc9a760e01b6001600160e01b03198316145b92915050565b610d0e6133b9565b604051635fed4de960e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__90635fed4de990610d47905f9085906004016151c8565b5f6040518083038186803b158015610d5d575f80fd5b505af4158015610d6f573d5f803e3d5ffd5b505060405163d96aec4360e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__925063d96aec439150610dac905f9085906004016151c8565b5f6040518083038186803b158015610dc2575f80fd5b505af4158015610dd4573d5f803e3d5ffd5b5050505050565b5f610de681336133eb565b610e115760405163e2517d3f60e01b8152336004820152602481018290526044015b60405180910390fd5b60405163e57980dd60e01b815273__$72c16261390208f563094e6a4fc9f74031$__9063e57980dd90610e4a905f90869060040161520a565b5f6040518083038186803b158015610e60575f80fd5b505af4158015610e72573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$72c16261390208f563094e6a4fc9f74031$__9250634752b3b39150610eaf905f90869060040161520a565b5f6040518083038186803b158015610ec5575f80fd5b505af4158015610ed7573d5f803e3d5ffd5b505050505050565b610f0c604051806040016040528083803603810190610efe919061528e565b8152336020909101526132df565b50565b610f176133b9565b6040516333d4ade560e01b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__906333d4ade590610f50905f9085906004016152a8565b5f6040518083038186803b158015610f66575f80fd5b505af4158015610f78573d5f803e3d5ffd5b505060405163178bcac760e11b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__9250632f17958e9150610dac905f9085906004016152a8565b5f610d008183613494565b610f0c604051806060016040528083803603810190610fdf9190614787565b81523360208201819052604090910152611154565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$674c94602fbdb88ca53d9ba4295c8813fa$__90637d62a7e090604401602060405180830381865af415801561104b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615318565b6011545f90819061108190829061534a565b61108d60025f1961535d565b60125461109a919061534a565b915091509091565b6110de6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__906386617e779060240160c060405180830381865af415801561112b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f919061537c565b905090565b61115c6133b9565b604051631e55c20b60e31b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9063f2ae105890611195905f908590600401615456565b5f6040518083038186803b1580156111ab575f80fd5b505af41580156111bd573d5f803e3d5ffd5b5050604051630f6470bd60e01b81525f925073__$909b104b05b98ab9b02bd00c4a2f54926d$__9150630f6470bd906111fc9084908690600401615456565b602060405180830381865af4158015611217573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123b919061546b565b8251602001519091506001016112be578151516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb6906044015b5f6040518083038186803b1580156112a7575f80fd5b505af41580156112b9573d5f803e3d5ffd5b505050505b60405163bfbfe8ab60e01b81525f60048201526024810182905273__$bfec599912fc5b0c81449b9d06b4dcb311$__9063bfbfe8ab90604401610eaf565b5f9081525f80516020615de2833981519152602052604090206001015490565b610f0c60405180604001604052808380360381019061133b919061528e565b815233602090910152613008565b5f815f0361136a576040516301c85f6760e71b815260040160405180910390fd5b6113755f8484613694565b9392505050565b60405163327ad2cd60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__9063327ad2cd906064015b602060405180830381865af41580156113e3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611375919061546b565b610f0c60405180604001604052808361141f90615482565b815233602090910152610f0f565b6114356140de565b604051631c81982560e11b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__90633903304a9061146e905f90869060040161548d565b61014060405180830381865af415801561148a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0091906154f8565b6114b7826112fc565b6114c0816136b9565b6114ca83836136c3565b50505050565b6001600160a01b03811633146114f95760405163334bd91960e11b815260040160405180910390fd5b611503828261376b565b505050565b610f0c60405180604001604052808361152090615570565b815233602090910152611d52565b611536614124565b60405163301d1d1560e21b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063c07474549061156f905f90869060040161548d565b61012060405180830381865af415801561158b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d00919061557b565b6115b76133b9565b602081015160405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af415801561161b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061163f919061546b565b60405163f9c417bd60e01b815290915073__$7fa168b5d238863382c2bf886894022425$__9063f9c417bd9061167b905f9087906004016155dd565b5f6040518083038186803b158015611691575f80fd5b505af41580156116a3573d5f803e3d5ffd5b5050604051634971bf9960e01b815273__$7fa168b5d238863382c2bf886894022425$__9250634971bf9991506116e0905f9087906004016155dd565b5f6040518083038186803b1580156116f6575f80fd5b505af4158015611708573d5f803e3d5ffd5b505060405163046dbd1360e11b81525f600482018190526001600160a01b0386166024830152925073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__91506308db7a2690604401602060405180830381865af415801561176b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061178f919061546b565b90508181116114ca5760405163625a84dd60e01b81526001600160a01b03841660048201526024810183905260448101829052606401610e08565b5f806117d46133b9565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab6117ff81336133eb565b6118255760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b604051639f53ee0f60e01b815273__$d00168f5747027b5a56099c751031d7e40$__90639f53ee0f9061185e905f908890600401615658565b5f6040518083038186803b158015611874575f80fd5b505af4158015611886573d5f803e3d5ffd5b505060405163647a4b7560e11b81525f925073__$d00168f5747027b5a56099c751031d7e40$__915063c8f496ea906118c59084908990600401615658565b606060405180830381865af41580156118e0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611904919061566c565b9095509350905073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__632d77afb65f6119366040890160208a01614c7f565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b158015611979575f80fd5b505af415801561198b573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$d00168f5747027b5a56099c751031d7e40$__9250636e6595c191506119ca905f9089908990600401615697565b5f6040518083038186803b1580156119e0575f80fd5b505af41580156119f2573d5f803e3d5ffd5b505060405163bfbfe8ab60e01b81525f60048201526024810184905273__$bfec599912fc5b0c81449b9d06b4dcb311$__925063bfbfe8ab91506044015f6040518083038186803b158015611a45575f80fd5b505af4158015611a57573d5f803e3d5ffd5b505050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611a8d81336133eb565b611ab35760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b610f0c6137e4565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd24038611ae681336133eb565b611b0c5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611b89613843565b611b92826138e7565b611b9c8282613918565b5050565b611ba86133b9565b604051637125eda960e11b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__9063e24bdb5290611be1905f90859060040161576c565b5f6040518083038186803b158015611bf7575f80fd5b505af4158015611c09573d5f803e3d5ffd5b505060405163184d91f360e31b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__925063c26c8f989150610dac905f90859060040161576c565b5f611c4f6139d4565b505f80516020615dc283398151915290565b611c696133b9565b604080516325f2df6f60e01b81525f6004820152825151602482015260208301516001600160a01b03908116604483015291830151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__906325f2df6f906084015f6040518083038186803b158015611cdb575f80fd5b505af4158015611ced573d5f803e3d5ffd5b5050604080516330e78a9160e11b81525f6004820152845151602482015260208501516001600160a01b03908116604483015291850151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__92506361cf15229150608401610dac565b611d5a6133b9565b604051632d0c1e8b60e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__90632d0c1e8b90611d93905f90859060040161576c565b5f6040518083038186803b158015611da9575f80fd5b505af4158015611dbb573d5f803e3d5ffd5b505060405163c0c66ed960e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__925063c0c66ed99150610dac905f90859060040161576c565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015611e51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e75919061546b565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$674c94602fbdb88ca53d9ba4295c8813fa$__906345ffd36d906113c8905f908590600401615784565b611eec61415b565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611f7e57602002820191905f5260205f20905b815481526020019060010190808311611f6a575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611fd457602002820191905f5260205f20905b815481526020019060010190808311611fc0575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561202a57602002820191905f5260205f20905b815481526020019060010190808311612016575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f82018054806020026020016040519081016040528092919081815260200182805480156120b057602002820191905f5260205f20905b81548152602001906001019080831161209c575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561210657602002820191905f5260205f20905b8154815260200190600101908083116120f2575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561215c57602002820191905f5260205f20905b815481526020019060010190808311612148575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa1580156121e2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612206919061546b565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015612256573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061227a919061546b565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa1580156122ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122ee919061546b565b905292915050565b6011545f908210610d00565b61230a614195565b604051633978289f60e01b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90633978289f90604401602060405180830381865af415801561235e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612382919061546b565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b6123fb6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063dd378fd69060240160c060405180830381865af4158015612448573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f91906157bf565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063d72f4008906024016040805180830381865af41580156124cb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f919061582b565b6124f76133b9565b6040516210aa0b60e31b815273__$45d7492db284be01938913cb41b9cac2a6$__90628550589061252e905f90859060040161585e565b5f6040518083038186803b158015612544575f80fd5b505af4158015612556573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$45d7492db284be01938913cb41b9cac2a6$__92506364140a839150610dac905f90859060040161585e565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6125be81336133eb565b6125e45760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b610f0c613a1d565b6125f46133b9565b6040516315868ea760e21b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__9063561a3a9c9061262d905f908590600401615896565b5f6040518083038186803b158015612643575f80fd5b505af4158015612655573d5f803e3d5ffd5b50506040516389e70deb60e01b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__92506389e70deb9150610dac905f908590600401615896565b610f0c6040518060400160405280838036038101906126b191906158f0565b8152336020909101526115af565b5f9182525f80516020615de2833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f6126fe613a65565b805490915060ff600160401b82041615906001600160401b03165f811580156127245750825b90505f826001600160401b0316600114801561273f5750303b155b90508115801561274d575080155b1561276b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561279557845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__906369777eb9906127d6905f908e908e908e908e908e90600401615a23565b5f6040518083038186803b1580156127ec575f80fd5b505af41580156127fe573d5f803e3d5ffd5b5050505061280a613a8d565b612812613a8d565b61281a613a8d565b604051632ffdac7160e21b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__9063bff6b1c490612859905f908d908d908d908d90600401615aad565b5f6040518083038186803b15801561286f575f80fd5b505af4158015612881573d5f803e3d5ffd5b505050506128915f801b8b6136c3565b506128bc7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b6136c3565b506128e77ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b6136c3565b506129127f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b6136c3565b50831561295957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b606061296f6133b9565b6113755f8484613a95565b6129826141c4565b506001600160a01b039081165f908152601b602090815260409182902082516060808201855282549095168152835160a08082018652600184015482526002840154828601526003840154828701526004840154828801526005840154608080840191909152838601929092528551908101865260068401548152600784015494810194909452600883015484860152600983015495840195909552600a90910154938201939093529082015290565b612a6260405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015612ab6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ada919061546b565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b612b206133b9565b60405163160b9e6b60e31b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063b05cf35890612b59905f908590600401615456565b5f6040518083038186803b158015612b6f575f80fd5b505af4158015612b81573d5f803e3d5ffd5b5050604051639f46aa4160e01b81525f925073__$c58e2605104bb31274ad8c04841b6a7550$__9150639f46aa4190612bc09084908690600401615456565b602060405180830381865af4158015612bdb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612bff919061546b565b8251602001519091506001016112be5760208201516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401611291565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af4158015612cba573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d00919061546b565b5f610d008183613dfc565b610f0c604051806040016040528083612d0190615570565b815233602090910152611ba0565b612d18826112fc565b612d21816136b9565b6114ca838361376b565b610f0c6040518060600160405280838152602001336001600160a01b03168152602001336001600160a01b0316815250612b18565b5f612d696133b9565b6040516320b5435f60e11b815273__$04d32033081e1e9356971d8f4b5098bcad$__9063416a86be90612da2905f908690600401615b26565b5f6040518083038186803b158015612db8575f80fd5b505af4158015612dca573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$04d32033081e1e9356971d8f4b5098bcad$__925063341a672c9150612e07905f908690600401615b26565b602060405180830381865af4158015612e22573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e46919061546b565b60405163489d188160e01b815290915073__$04d32033081e1e9356971d8f4b5098bcad$__9063489d188190612e84905f9086908690600401615b4e565b5f6040518083038186803b158015612e9a575f80fd5b505af4158015612eac573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__9063325191d290604401602060405180830381865af4158015612f0c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615b84565b610f0c604051806040016040528083803603810190612f4f9190615b9f565b8152336020909101526125ec565b612f656133b9565b604051635792057f60e11b81525f60048201528135602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__9063af240afe906044015f6040518083038186803b158015612fb4575f80fd5b505af4158015612fc6573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__92506341d373f29150604401610dac565b6130106133b9565b604051631005beb160e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__9063802df58890613049905f908590600401615bba565b5f6040518083038186803b15801561305f575f80fd5b505af4158015613071573d5f803e3d5ffd5b5050604051631cc17ae560e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__925063e60bd7289150610dac905f908590600401615bba565b5f6130b981336133eb565b6130df5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b6129cc5f6130eb613a65565b8054909150600160401b900460ff1680613112575080546001600160401b03808416911610155b156131305760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b03831617600160401b1781556001600160a01b0384166131785760405163de0ce17d60e01b815260040160405180910390fd5b601c546001600160a01b0316156131a25760405163f1b06c8d60e01b815260040160405180910390fd5b6040516337649a6d60e11b81523060048201526001600160a01b03851690636ec934da90602401602060405180830381865afa1580156131e4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132089190615b84565b6132275760405163e2a7bea360e01b8152306004820152602401610e08565b601c80546001600160a01b0319166001600160a01b038616179055805460ff60401b191681556040516001600160401b03831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b6040516333c7c71f60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__906333c7c71f906064016113c8565b6132e76133b9565b60405163024889b160e51b815273__$d49e499a4608ab3aca09b91fe5950492b6$__90634911362090613320905f908590600401615bba565b5f6040518083038186803b158015613336575f80fd5b505af4158015613348573d5f803e3d5ffd5b505060405163a083c0ab60e01b815273__$d49e499a4608ab3aca09b91fe5950492b6$__925063a083c0ab9150610dac905f908590600401615bba565b610f0c6040518060600160405280838036038101906133a49190615bff565b81523360208201819052604090910152611c61565b5f80516020615e028339815191525460ff16156133e95760405163d93c066560e01b815260040160405180910390fd5b565b5f6133f683836126bf565b1561340357506001610d00565b601c546001600160a01b031661341a57505f610d00565b601c54604051632474521560e21b8152600481018590526001600160a01b038481166024830152909116906391d1485490604401602060405180830381865afa158015613469573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061348d9190615b84565b9050610d00565b5f61137583600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134ec573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613510919061546b565b61351b90600a615cf9565b6135259084615d04565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa15801561356f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135939190615d1b565b61359e90600a615d3b565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa1580156135e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061360c9190615d1b565b61361790600a615d3b565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa158015613661573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613685919061546b565b61368f9190615d04565b613e1f565b5f6136b1836136a38685613e2b565b670de0b6b3a7640000613e1f565b949350505050565b610f0c8133613e3e565b5f5f80516020615de28339815191526136dc84846126bf565b61375b575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556137113390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610d00565b5f915050610d00565b5092915050565b5f5f80516020615de283398151915261378484846126bf565b1561375b575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610d00565b6137ec613e77565b5f80516020615e02833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806138c957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166138bd5f80516020615dc2833981519152546001600160a01b031690565b6001600160a01b031614155b156133e95760405163703e46dd60e11b815260040160405180910390fd5b5f6138f281336133eb565b611b9c5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613972575060408051601f3d908101601f1916820190925261396f9181019061546b565b60015b61399a57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e08565b5f80516020615dc283398151915281146139ca57604051632a87526960e21b815260048101829052602401610e08565b6115038383613ea6565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146133e95760405163703e46dd60e11b815260040160405180910390fd5b613a256133b9565b5f80516020615e02833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833613825565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610d00565b6133e9613efb565b60198301805460ff60a01b1916600160a01b179055601a830154604080516318160ddd60e01b815290516060925f926001600160a01b03909116916318160ddd916004808201926020929091908290030181865afa158015613af9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613b1d919061546b565b90505f85600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b75573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613b99919061546b565b9050836001600160401b03811115613bb357613bb3614342565b604051908082528060200260200182016040528015613be657816020015b6060815260200190600190039081613bd15790505b5092505f5b84811015613c7957613c5430878784818110613c0957613c09615d49565b9050602002810190613c1b9190615d5d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613f2092505050565b848281518110613c6657613c66615d49565b6020908102919091010152600101613beb565b50601a860154604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015613cc3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613ce7919061546b565b90505f87600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d3f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d63919061546b565b60405163111a6a5d60e31b8152600481018a90526024810186905260448101859052606481018490526084810182905290915073__$bfec599912fc5b0c81449b9d06b4dcb311$",
    "sourceMap": "3695:13121:237:-:0;;;1171:4:80;1128:48;;4548:53:237;;;;;;;;;-1:-1:-1;4572:22:237;:20;:22::i;:::-;3695:13121;;7709:422:79;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:79;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:79;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:79;-1:-1:-1;;;;;8033:33:79;;;;;8085:29;;158:50:418;;;8085:29:79;;146:2:418;131:18;8085:29:79;;;;;;;7979:146;7758:373;7709:422::o;14:200:418:-;3695:13121:237;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/market/libraries/CapsLibrary.sol": {
        "CapsLibrary": [
          { "start": 5082, "length": 20 },
          { "start": 6928, "length": 20 },
          { "start": 16024, "length": 20 }
        ]
      },
      "src/market/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 4371, "length": 20 },
          { "start": 7961, "length": 20 },
          { "start": 8122, "length": 20 },
          { "start": 9254, "length": 20 },
          { "start": 11134, "length": 20 }
        ]
      },
      "src/market/libraries/OfferLibrary.sol": {
        "OfferLibrary": [
          { "start": 5290, "length": 20 },
          { "start": 13245, "length": 20 }
        ]
      },
      "src/market/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 4979, "length": 20 },
          { "start": 5859, "length": 20 },
          { "start": 6194, "length": 20 },
          { "start": 6669, "length": 20 },
          { "start": 11577, "length": 20 },
          { "start": 11650, "length": 20 },
          { "start": 12244, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 7785, "length": 20 },
          { "start": 7884, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 4715, "length": 20 },
          { "start": 4817, "length": 20 },
          { "start": 5444, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 12417, "length": 20 },
          { "start": 12516, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 5969, "length": 20 },
          { "start": 6068, "length": 20 }
        ]
      },
      "src/market/libraries/actions/CopyLimitOrders.sol": {
        "CopyLimitOrders": [
          { "start": 9987, "length": 20 },
          { "start": 10086, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 13302, "length": 20 },
          { "start": 13401, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 10404, "length": 20 },
          { "start": 10537, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 11896, "length": 20 },
          { "start": 11995, "length": 20 },
          { "start": 12120, "length": 20 }
        ]
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 6452, "length": 20 },
          { "start": 6554, "length": 20 },
          { "start": 6812, "length": 20 }
        ]
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "PartialRepay": [
          { "start": 3613, "length": 20 },
          { "start": 3712, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 9733, "length": 20 },
          { "start": 9831, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 7592, "length": 20 },
          { "start": 7726, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 7351, "length": 20 },
          { "start": 7450, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5701, "length": 20 },
          { "start": 11311, "length": 20 },
          { "start": 11413, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 4134, "length": 20 },
          { "start": 4233, "length": 20 }
        ]
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3872, "length": 20 },
          { "start": 3971, "length": 20 },
          { "start": 4595, "length": 20 },
          { "start": 9488, "length": 20 },
          { "start": 9620, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 12575, "length": 20 },
          { "start": 12674, "length": 20 }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103c9575f3560e01c80635cbc51eb116101f4578063b5ec748711610113578063e5af06ce116100a8578063f7e7d1fd11610078578063f7e7d1fd14610c45578063f85c3cd414610c64578063fa7a5b1014610c83578063fa823af514610caa578063fd17174a14610cbd575f80fd5b8063e5af06ce14610bed578063f052e7a414610c0c578063f45bf01c14610c1f578063f54ae18b14610c32575f80fd5b8063ccd8d4d1116100e3578063ccd8d4d114610b95578063d547741f14610ba8578063d8d933a514610bc7578063e05001f514610bda575f80fd5b8063b5ec748714610b18578063c73d983314610b44578063ca40742c14610b57578063ccc9681514610b76575f80fd5b80638628babd11610189578063a475207611610159578063a475207614610a7d578063ac9650d814610a9c578063ad3cb1cc14610abc578063b36116f614610aec575f80fd5b80638628babd14610a255780638e57277614610a3857806391d1485414610a4b578063a217fddf14610a6a575f80fd5b80637c90a6ca116101c45780637c90a6ca1461095e5780637dc0d1d0146109bd5780637f417c06146109fe5780638456cb5914610a11575f80fd5b80635cbc51eb146107c357806364eb0a71146107ef57806373d4a13a1461080e57806376c1b82f14610932575f80fd5b80632ed28ba2116102eb5780634cbd882c11610280578063536b9c7911610250578063536b9c791461072657806353e043d41461073957806354137c7e1461074c57806354fd4d501461076b5780635c975abb146107a0575f80fd5b80634cbd882c146106cd5780634f1ef286146106ec5780634fd9a8a5146106ff57806352d1902d14610712575f80fd5b806337501921116102bb57806337501921146106675780633ae6d7c3146106935780633e3c119b146106a65780633f4ba83a146106b9575f80fd5b80632ed28ba2146105ea5780632f2ff15d1461061657806336568abe146106355780633746f85814610654575f80fd5b80631ca3b0cb116103615780632b4c9a20116103315780632b4c9a20146105865780632c60185c146105995780632cc884c5146105b85780632e106f21146105d7575f80fd5b80631ca3b0cb146104c75780631e5eb1d0146104f05780631fcd4a3414610554578063248a9ca314610567575f80fd5b8063134f3f961161039c578063134f3f96146104485780631970e5ea1461045b57806319a7359b146104885780631c4fd41c1461049b575f80fd5b806301ffc9a7146103cd57806302f2855a146104015780630317b9df146104165780630cf8542f14610435575b5f80fd5b3480156103d8575f80fd5b506103ec6103e73660046142aa565b610cd0565b60405190151581526020015b60405180910390f35b61041461040f3660046142e7565b610d06565b005b348015610421575f80fd5b50610414610430366004614311565b610ddb565b6104146104433660046142e7565b610edf565b610414610456366004614559565b610f0f565b348015610466575f80fd5b5061047a6104753660046145d7565b610fb5565b6040519081526020016103f8565b6104146104963660046145ee565b610fc0565b3480156104a6575f80fd5b506104ba6104b53660046145d7565b610ff4565b6040516103f891906145fe565b3480156104d2575f80fd5b506104db61106f565b604080519283526020830191909152016103f8565b3480156104fb575f80fd5b506105046110a2565b6040516103f89190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b6104146105623660046146ec565b611154565b348015610572575f80fd5b5061047a6105813660046145d7565b6112fc565b6104146105943660046142e7565b61131c565b3480156105a4575f80fd5b5061047a6105b3366004614707565b611349565b3480156105c3575f80fd5b5061047a6105d2366004614727565b61137c565b6104146105e5366004614751565b611407565b3480156105f5575f80fd5b50610609610604366004614787565b61142d565b6040516103f891906147cf565b348015610621575f80fd5b5061041461063036600461482e565b6114ae565b348015610640575f80fd5b5061041461064f36600461482e565b6114d0565b610414610662366004614311565b611508565b348015610672575f80fd5b50610686610681366004614787565b61152e565b6040516103f8919061485c565b6104146106a13660046148e0565b6115af565b6104db6106b436600461491e565b6117ca565b3480156106c4575f80fd5b50610414611a62565b3480156106d8575f80fd5b506104146106e736600461492e565b611abb565b6104146106fa366004614954565b611b81565b61041461070d366004614b5f565b611ba0565b34801561071d575f80fd5b5061047a611c46565b610414610734366004614bcf565b611c61565b610414610747366004614b5f565b611d52565b348015610757575f80fd5b5061047a6107663660046145d7565b611df8565b348015610776575f80fd5b5060408051808201909152600481526376312e3760e01b60208201525b6040516103f89190614c6d565b3480156107ab575f80fd5b505f80516020615e028339815191525460ff166103ec565b3480156107ce575f80fd5b506107e26107dd366004614c7f565b611ee4565b6040516103f89190614d68565b3480156107fa575f80fd5b506103ec6108093660046145d7565b6122f6565b348015610819575f80fd5b506108c160408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e09283015190911691810191909152610100016103f8565b34801561093d575f80fd5b5061095161094c3660046145d7565b612302565b6040516103f89190614e0a565b348015610969575f80fd5b506109726123c8565b6040516103f891905f60c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b3480156109c8575f80fd5b506109d161246c565b6040805182516001600160a01b031681526020928301516001600160401b031692810192909252016103f8565b610414610a0c366004614e18565b6124ef565b348015610a1c575f80fd5b50610414612593565b610414610a33366004614ee6565b6125ec565b610414610a463660046142e7565b612692565b348015610a56575f80fd5b506103ec610a6536600461482e565b6126bf565b348015610a75575f80fd5b5061047a5f81565b348015610a88575f80fd5b50610414610a97366004614f2a565b6126f5565b610aaf610aaa366004614f94565b612965565b6040516103f89190615002565b348015610ac7575f80fd5b50610793604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610af7575f80fd5b50610b0b610b06366004614c7f565b61297a565b6040516103f89190615094565b348015610b23575f80fd5b50610b37610b323660046145d7565b612a32565b6040516103f891906150cc565b610414610b523660046146ec565b612b18565b348015610b62575f80fd5b5061047a610b71366004614c7f565b612c5b565b348015610b81575f80fd5b506103ec610b903660046145d7565b612cde565b610414610ba3366004614311565b612ce9565b348015610bb3575f80fd5b50610414610bc236600461482e565b612d0f565b610414610bd5366004614787565b612d2b565b61047a610be83660046142e7565b612d60565b348015610bf8575f80fd5b506103ec610c073660046145d7565b612eb5565b610414610c1a366004615100565b612f30565b610414610c2d366004615121565b612f5d565b610414610c403660046151ae565b613008565b348015610c50575f80fd5b50610414610c5f366004614c7f565b6130ae565b348015610c6f575f80fd5b5061047a610c7e366004614727565b61328f565b348015610c8e575f80fd5b50601c546040516001600160a01b0390911681526020016103f8565b610414610cb83660046151ae565b6132df565b610414610ccb366004615121565b613385565b5f6001600160e01b03198216637965db0b60e01b1480610d0057506301ffc9a760e01b6001600160e01b03198316145b92915050565b610d0e6133b9565b604051635fed4de960e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__90635fed4de990610d47905f9085906004016151c8565b5f6040518083038186803b158015610d5d575f80fd5b505af4158015610d6f573d5f803e3d5ffd5b505060405163d96aec4360e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__925063d96aec439150610dac905f9085906004016151c8565b5f6040518083038186803b158015610dc2575f80fd5b505af4158015610dd4573d5f803e3d5ffd5b5050505050565b5f610de681336133eb565b610e115760405163e2517d3f60e01b8152336004820152602481018290526044015b60405180910390fd5b60405163e57980dd60e01b815273__$72c16261390208f563094e6a4fc9f74031$__9063e57980dd90610e4a905f90869060040161520a565b5f6040518083038186803b158015610e60575f80fd5b505af4158015610e72573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$72c16261390208f563094e6a4fc9f74031$__9250634752b3b39150610eaf905f90869060040161520a565b5f6040518083038186803b158015610ec5575f80fd5b505af4158015610ed7573d5f803e3d5ffd5b505050505050565b610f0c604051806040016040528083803603810190610efe919061528e565b8152336020909101526132df565b50565b610f176133b9565b6040516333d4ade560e01b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__906333d4ade590610f50905f9085906004016152a8565b5f6040518083038186803b158015610f66575f80fd5b505af4158015610f78573d5f803e3d5ffd5b505060405163178bcac760e11b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__9250632f17958e9150610dac905f9085906004016152a8565b5f610d008183613494565b610f0c604051806060016040528083803603810190610fdf9190614787565b81523360208201819052604090910152611154565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$674c94602fbdb88ca53d9ba4295c8813fa$__90637d62a7e090604401602060405180830381865af415801561104b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615318565b6011545f90819061108190829061534a565b61108d60025f1961535d565b60125461109a919061534a565b915091509091565b6110de6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__906386617e779060240160c060405180830381865af415801561112b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f919061537c565b905090565b61115c6133b9565b604051631e55c20b60e31b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9063f2ae105890611195905f908590600401615456565b5f6040518083038186803b1580156111ab575f80fd5b505af41580156111bd573d5f803e3d5ffd5b5050604051630f6470bd60e01b81525f925073__$909b104b05b98ab9b02bd00c4a2f54926d$__9150630f6470bd906111fc9084908690600401615456565b602060405180830381865af4158015611217573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123b919061546b565b8251602001519091506001016112be578151516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb6906044015b5f6040518083038186803b1580156112a7575f80fd5b505af41580156112b9573d5f803e3d5ffd5b505050505b60405163bfbfe8ab60e01b81525f60048201526024810182905273__$bfec599912fc5b0c81449b9d06b4dcb311$__9063bfbfe8ab90604401610eaf565b5f9081525f80516020615de2833981519152602052604090206001015490565b610f0c60405180604001604052808380360381019061133b919061528e565b815233602090910152613008565b5f815f0361136a576040516301c85f6760e71b815260040160405180910390fd5b6113755f8484613694565b9392505050565b60405163327ad2cd60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__9063327ad2cd906064015b602060405180830381865af41580156113e3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611375919061546b565b610f0c60405180604001604052808361141f90615482565b815233602090910152610f0f565b6114356140de565b604051631c81982560e11b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__90633903304a9061146e905f90869060040161548d565b61014060405180830381865af415801561148a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0091906154f8565b6114b7826112fc565b6114c0816136b9565b6114ca83836136c3565b50505050565b6001600160a01b03811633146114f95760405163334bd91960e11b815260040160405180910390fd5b611503828261376b565b505050565b610f0c60405180604001604052808361152090615570565b815233602090910152611d52565b611536614124565b60405163301d1d1560e21b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063c07474549061156f905f90869060040161548d565b61012060405180830381865af415801561158b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d00919061557b565b6115b76133b9565b602081015160405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af415801561161b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061163f919061546b565b60405163f9c417bd60e01b815290915073__$7fa168b5d238863382c2bf886894022425$__9063f9c417bd9061167b905f9087906004016155dd565b5f6040518083038186803b158015611691575f80fd5b505af41580156116a3573d5f803e3d5ffd5b5050604051634971bf9960e01b815273__$7fa168b5d238863382c2bf886894022425$__9250634971bf9991506116e0905f9087906004016155dd565b5f6040518083038186803b1580156116f6575f80fd5b505af4158015611708573d5f803e3d5ffd5b505060405163046dbd1360e11b81525f600482018190526001600160a01b0386166024830152925073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__91506308db7a2690604401602060405180830381865af415801561176b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061178f919061546b565b90508181116114ca5760405163625a84dd60e01b81526001600160a01b03841660048201526024810183905260448101829052606401610e08565b5f806117d46133b9565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab6117ff81336133eb565b6118255760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b604051639f53ee0f60e01b815273__$d00168f5747027b5a56099c751031d7e40$__90639f53ee0f9061185e905f908890600401615658565b5f6040518083038186803b158015611874575f80fd5b505af4158015611886573d5f803e3d5ffd5b505060405163647a4b7560e11b81525f925073__$d00168f5747027b5a56099c751031d7e40$__915063c8f496ea906118c59084908990600401615658565b606060405180830381865af41580156118e0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611904919061566c565b9095509350905073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__632d77afb65f6119366040890160208a01614c7f565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b158015611979575f80fd5b505af415801561198b573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$d00168f5747027b5a56099c751031d7e40$__9250636e6595c191506119ca905f9089908990600401615697565b5f6040518083038186803b1580156119e0575f80fd5b505af41580156119f2573d5f803e3d5ffd5b505060405163bfbfe8ab60e01b81525f60048201526024810184905273__$bfec599912fc5b0c81449b9d06b4dcb311$__925063bfbfe8ab91506044015f6040518083038186803b158015611a45575f80fd5b505af4158015611a57573d5f803e3d5ffd5b505050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a611a8d81336133eb565b611ab35760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b610f0c6137e4565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd24038611ae681336133eb565b611b0c5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611b89613843565b611b92826138e7565b611b9c8282613918565b5050565b611ba86133b9565b604051637125eda960e11b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__9063e24bdb5290611be1905f90859060040161576c565b5f6040518083038186803b158015611bf7575f80fd5b505af4158015611c09573d5f803e3d5ffd5b505060405163184d91f360e31b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__925063c26c8f989150610dac905f90859060040161576c565b5f611c4f6139d4565b505f80516020615dc283398151915290565b611c696133b9565b604080516325f2df6f60e01b81525f6004820152825151602482015260208301516001600160a01b03908116604483015291830151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__906325f2df6f906084015f6040518083038186803b158015611cdb575f80fd5b505af4158015611ced573d5f803e3d5ffd5b5050604080516330e78a9160e11b81525f6004820152845151602482015260208501516001600160a01b03908116604483015291850151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__92506361cf15229150608401610dac565b611d5a6133b9565b604051632d0c1e8b60e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__90632d0c1e8b90611d93905f90859060040161576c565b5f6040518083038186803b158015611da9575f80fd5b505af4158015611dbb573d5f803e3d5ffd5b505060405163c0c66ed960e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__925063c0c66ed99150610dac905f90859060040161576c565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015611e51573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e75919061546b565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$674c94602fbdb88ca53d9ba4295c8813fa$__906345ffd36d906113c8905f908590600401615784565b611eec61415b565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611f7e57602002820191905f5260205f20905b815481526020019060010190808311611f6a575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611fd457602002820191905f5260205f20905b815481526020019060010190808311611fc0575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561202a57602002820191905f5260205f20905b815481526020019060010190808311612016575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f82018054806020026020016040519081016040528092919081815260200182805480156120b057602002820191905f5260205f20905b81548152602001906001019080831161209c575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561210657602002820191905f5260205f20905b8154815260200190600101908083116120f2575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561215c57602002820191905f5260205f20905b815481526020019060010190808311612148575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa1580156121e2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612206919061546b565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015612256573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061227a919061546b565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa1580156122ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122ee919061546b565b905292915050565b6011545f908210610d00565b61230a614195565b604051633978289f60e01b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90633978289f90604401602060405180830381865af415801561235e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612382919061546b565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b6123fb6040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063dd378fd69060240160c060405180830381865af4158015612448573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f91906157bf565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063d72f4008906024016040805180830381865af41580156124cb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114f919061582b565b6124f76133b9565b6040516210aa0b60e31b815273__$45d7492db284be01938913cb41b9cac2a6$__90628550589061252e905f90859060040161585e565b5f6040518083038186803b158015612544575f80fd5b505af4158015612556573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$45d7492db284be01938913cb41b9cac2a6$__92506364140a839150610dac905f90859060040161585e565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6125be81336133eb565b6125e45760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b610f0c613a1d565b6125f46133b9565b6040516315868ea760e21b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__9063561a3a9c9061262d905f908590600401615896565b5f6040518083038186803b158015612643575f80fd5b505af4158015612655573d5f803e3d5ffd5b50506040516389e70deb60e01b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__92506389e70deb9150610dac905f908590600401615896565b610f0c6040518060400160405280838036038101906126b191906158f0565b8152336020909101526115af565b5f9182525f80516020615de2833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f6126fe613a65565b805490915060ff600160401b82041615906001600160401b03165f811580156127245750825b90505f826001600160401b0316600114801561273f5750303b155b90508115801561274d575080155b1561276b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561279557845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__906369777eb9906127d6905f908e908e908e908e908e90600401615a23565b5f6040518083038186803b1580156127ec575f80fd5b505af41580156127fe573d5f803e3d5ffd5b5050505061280a613a8d565b612812613a8d565b61281a613a8d565b604051632ffdac7160e21b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__9063bff6b1c490612859905f908d908d908d908d90600401615aad565b5f6040518083038186803b15801561286f575f80fd5b505af4158015612881573d5f803e3d5ffd5b505050506128915f801b8b6136c3565b506128bc7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b6136c3565b506128e77ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b6136c3565b506129127f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b6136c3565b50831561295957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b606061296f6133b9565b6113755f8484613a95565b6129826141c4565b506001600160a01b039081165f908152601b602090815260409182902082516060808201855282549095168152835160a08082018652600184015482526002840154828601526003840154828701526004840154828801526005840154608080840191909152838601929092528551908101865260068401548152600784015494810194909452600883015484860152600983015495840195909552600a90910154938201939093529082015290565b612a6260405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015612ab6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ada919061546b565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b612b206133b9565b60405163160b9e6b60e31b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063b05cf35890612b59905f908590600401615456565b5f6040518083038186803b158015612b6f575f80fd5b505af4158015612b81573d5f803e3d5ffd5b5050604051639f46aa4160e01b81525f925073__$c58e2605104bb31274ad8c04841b6a7550$__9150639f46aa4190612bc09084908690600401615456565b602060405180830381865af4158015612bdb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612bff919061546b565b8251602001519091506001016112be5760208201516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401611291565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af4158015612cba573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d00919061546b565b5f610d008183613dfc565b610f0c604051806040016040528083612d0190615570565b815233602090910152611ba0565b612d18826112fc565b612d21816136b9565b6114ca838361376b565b610f0c6040518060600160405280838152602001336001600160a01b03168152602001336001600160a01b0316815250612b18565b5f612d696133b9565b6040516320b5435f60e11b815273__$04d32033081e1e9356971d8f4b5098bcad$__9063416a86be90612da2905f908690600401615b26565b5f6040518083038186803b158015612db8575f80fd5b505af4158015612dca573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$04d32033081e1e9356971d8f4b5098bcad$__925063341a672c9150612e07905f908690600401615b26565b602060405180830381865af4158015612e22573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e46919061546b565b60405163489d188160e01b815290915073__$04d32033081e1e9356971d8f4b5098bcad$__9063489d188190612e84905f9086908690600401615b4e565b5f6040518083038186803b158015612e9a575f80fd5b505af4158015612eac573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__9063325191d290604401602060405180830381865af4158015612f0c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d009190615b84565b610f0c604051806040016040528083803603810190612f4f9190615b9f565b8152336020909101526125ec565b612f656133b9565b604051635792057f60e11b81525f60048201528135602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__9063af240afe906044015f6040518083038186803b158015612fb4575f80fd5b505af4158015612fc6573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__92506341d373f29150604401610dac565b6130106133b9565b604051631005beb160e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__9063802df58890613049905f908590600401615bba565b5f6040518083038186803b15801561305f575f80fd5b505af4158015613071573d5f803e3d5ffd5b5050604051631cc17ae560e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__925063e60bd7289150610dac905f908590600401615bba565b5f6130b981336133eb565b6130df5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b6129cc5f6130eb613a65565b8054909150600160401b900460ff1680613112575080546001600160401b03808416911610155b156131305760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b03831617600160401b1781556001600160a01b0384166131785760405163de0ce17d60e01b815260040160405180910390fd5b601c546001600160a01b0316156131a25760405163f1b06c8d60e01b815260040160405180910390fd5b6040516337649a6d60e11b81523060048201526001600160a01b03851690636ec934da90602401602060405180830381865afa1580156131e4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132089190615b84565b6132275760405163e2a7bea360e01b8152306004820152602401610e08565b601c80546001600160a01b0319166001600160a01b038616179055805460ff60401b191681556040516001600160401b03831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b6040516333c7c71f60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__906333c7c71f906064016113c8565b6132e76133b9565b60405163024889b160e51b815273__$d49e499a4608ab3aca09b91fe5950492b6$__90634911362090613320905f908590600401615bba565b5f6040518083038186803b158015613336575f80fd5b505af4158015613348573d5f803e3d5ffd5b505060405163a083c0ab60e01b815273__$d49e499a4608ab3aca09b91fe5950492b6$__925063a083c0ab9150610dac905f908590600401615bba565b610f0c6040518060600160405280838036038101906133a49190615bff565b81523360208201819052604090910152611c61565b5f80516020615e028339815191525460ff16156133e95760405163d93c066560e01b815260040160405180910390fd5b565b5f6133f683836126bf565b1561340357506001610d00565b601c546001600160a01b031661341a57505f610d00565b601c54604051632474521560e21b8152600481018590526001600160a01b038481166024830152909116906391d1485490604401602060405180830381865afa158015613469573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061348d9190615b84565b9050610d00565b5f61137583600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134ec573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613510919061546b565b61351b90600a615cf9565b6135259084615d04565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa15801561356f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906135939190615d1b565b61359e90600a615d3b565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa1580156135e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061360c9190615d1b565b61361790600a615d3b565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa158015613661573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613685919061546b565b61368f9190615d04565b613e1f565b5f6136b1836136a38685613e2b565b670de0b6b3a7640000613e1f565b949350505050565b610f0c8133613e3e565b5f5f80516020615de28339815191526136dc84846126bf565b61375b575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556137113390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610d00565b5f915050610d00565b5092915050565b5f5f80516020615de283398151915261378484846126bf565b1561375b575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610d00565b6137ec613e77565b5f80516020615e02833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806138c957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166138bd5f80516020615dc2833981519152546001600160a01b031690565b6001600160a01b031614155b156133e95760405163703e46dd60e11b815260040160405180910390fd5b5f6138f281336133eb565b611b9c5760405163e2517d3f60e01b815233600482015260248101829052604401610e08565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613972575060408051601f3d908101601f1916820190925261396f9181019061546b565b60015b61399a57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e08565b5f80516020615dc283398151915281146139ca57604051632a87526960e21b815260048101829052602401610e08565b6115038383613ea6565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146133e95760405163703e46dd60e11b815260040160405180910390fd5b613a256133b9565b5f80516020615e02833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833613825565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610d00565b6133e9613efb565b60198301805460ff60a01b1916600160a01b179055601a830154604080516318160ddd60e01b815290516060925f926001600160a01b03909116916318160ddd916004808201926020929091908290030181865afa158015613af9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613b1d919061546b565b90505f85600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613b75573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613b99919061546b565b9050836001600160401b03811115613bb357613bb3614342565b604051908082528060200260200182016040528015613be657816020015b6060815260200190600190039081613bd15790505b5092505f5b84811015613c7957613c5430878784818110613c0957613c09615d49565b9050602002810190613c1b9190615d5d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613f2092505050565b848281518110613c6657613c66615d49565b6020908102919091010152600101613beb565b50601a860154604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015613cc3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613ce7919061546b565b90505f87600e01600a015f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d3f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d63919061546b565b60405163111a6a5d60e31b8152600481018a90526024810186905260448101859052606481018490526084810182905290915073__$bfec599912fc5b0c81449b9d06b4dcb311$__906388d352e89060a4015f6040518083038186803b158015613dcb575f80fd5b505af4158015613ddd573d5f803e3d5ffd5b5050506019909801805460ff60a01b1916905550929695505050505050565b5f613e0960025f1961535d565b8210158015611375575050601291909101541190565b5f6136b1848484613f92565b81545f9061137590836301e13380613e1f565b613e4882826126bf565b611b9c5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610e08565b5f80516020615e028339815191525460ff166133e957604051638dfc202b60e01b815260040160405180910390fd5b613eaf82613fbe565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115613ef3576115038282613f20565b611b9c614021565b613f03614040565b6133e957604051631afcd79f60e31b815260040160405180910390fd5b60605f80846001600160a01b031684604051613f3c9190615da6565b5f60405180830381855af49150503d805f8114613f74576040519150601f19603f3d011682016040523d82523d5f602084013e613f79565b606091505b5091509150613f89858383614059565b95945050505050565b5f825f190484118302158202613faf5763ad251c275f526004601cfd5b50910281810615159190040190565b806001600160a01b03163b5f03613ff357604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e08565b5f80516020615dc283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b34156133e95760405163b398979f60e01b815260040160405180910390fd5b5f614049613a65565b54600160401b900460ff16919050565b60608261406e57614069826140b5565b611375565b815115801561408557506001600160a01b0384163b155b156140ae57604051639996b31560e01b81526001600160a01b0385166004820152602401610e08565b5080611375565b8051156140c55780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6040518060e001604052806140f1614195565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060c00160405280614137614195565b81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060a0016040528061416e614242565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81525090565b60405180608001604052805f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b60405180606001604052805f6001600160a01b0316815260200161420b6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b815260200161423d6040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b905290565b6040518060800160405280614255614275565b8152602001614262614275565b81525f6020820181905260409091015290565b60405180604001604052805f815260200161423d60405180606001604052806060815260200160608152602001606081525090565b5f602082840312156142ba575f80fd5b81356001600160e01b031981168114611375575f80fd5b5f606082840312156142e1575f80fd5b50919050565b5f606082840312156142f7575f80fd5b61137583836142d1565b5f604082840312156142e1575f80fd5b5f60208284031215614321575f80fd5b81356001600160401b03811115614336575f80fd5b6136b184828501614301565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b038111828210171561437857614378614342565b60405290565b604080519081016001600160401b038111828210171561437857614378614342565b60405160e081016001600160401b038111828210171561437857614378614342565b604051606081016001600160401b038111828210171561437857614378614342565b60405160c081016001600160401b038111828210171561437857614378614342565b604051601f8201601f191681016001600160401b038111828210171561442e5761442e614342565b604052919050565b8015158114610f0c575f80fd5b5f6001600160401b0382111561445b5761445b614342565b5060051b60200190565b5f82601f830112614474575f80fd5b8135602061448961448483614443565b614406565b8083825260208201915060208460051b8701019350868411156144aa575f80fd5b602086015b848110156144c657803583529183019183016144af565b509695505050505050565b5f608082840312156144e1575f80fd5b6144e9614356565b90508135815260208201356144fd81614436565b6020820152604082013561451081614436565b604082015260608201356001600160401b0381111561452d575f80fd5b61453984828501614465565b60608301525092915050565b6001600160a01b0381168114610f0c575f80fd5b5f60208284031215614569575f80fd5b81356001600160401b038082111561457f575f80fd5b9083019060408286031215614592575f80fd5b61459a61437e565b8235828111156145a8575f80fd5b6145b4878286016144d1565b825250602083013592506145c783614545565b6020810192909252509392505050565b5f602082840312156145e7575f80fd5b5035919050565b5f60e082840312156142e1575f80fd5b602081016003831061461e57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60e08284031215614634575f80fd5b61463c6143a0565b9050813561464981614545565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013561468d81614436565b60c082015292915050565b5f61012082840312156146a9575f80fd5b6146b16143c2565b90506146bd8383614624565b815260e08201356146cd81614545565b60208201526101008201356146e181614545565b604082015292915050565b5f61012082840312156146fd575f80fd5b6113758383614698565b5f8060408385031215614718575f80fd5b50508035926020909101359150565b5f8060408385031215614738575f80fd5b823561474381614545565b946020939093013593505050565b5f60208284031215614761575f80fd5b81356001600160401b03811115614776575f80fd5b820160808185031215611375575f80fd5b5f60e08284031215614797575f80fd5b6113758383614624565b80516001600160a01b0316825260208082015115159083015260408082015190830152606090810151910152565b5f610140820190506147e28284516147a1565b60018060a01b036020840151166080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015260c083015161012083015292915050565b5f806040838503121561483f575f80fd5b82359150602083013561485181614545565b809150509250929050565b5f6101208201905061486f8284516147a1565b60208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015292915050565b5f606082840312156148b8575f80fd5b6148c06143c2565b905081358152602082013560208201526040820135604082015292915050565b5f608082840312156148f0575f80fd5b6148f861437e565b61490284846148a8565b8152606083013561491281614545565b60208201529392505050565b5f60a082840312156142e1575f80fd5b5f6020828403121561493e575f80fd5b81356001600160801b0381168114611375575f80fd5b5f8060408385031215614965575f80fd5b823561497081614545565b91506020838101356001600160401b038082111561498c575f80fd5b818601915086601f83011261499f575f80fd5b8135818111156149b1576149b1614342565b6149c3601f8201601f19168501614406565b915080825287848285010111156149d8575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f60408284031215614a05575f80fd5b614a0d61437e565b9050813581526020808301356001600160401b0380821115614a2d575f80fd5b9084019060608287031215614a40575f80fd5b614a486143c2565b823582811115614a56575f80fd5b614a6288828601614465565b8252508383013582811115614a75575f80fd5b8301601f81018813614a85575f80fd5b8035614a9361448482614443565b81815260059190911b8201860190868101908a831115614ab1575f80fd5b928701925b82841015614acf57833582529287019290870190614ab6565b84880152505050604083013582811115614ae7575f80fd5b614af388828601614465565b60408301525080848601525050505092915050565b5f60408284031215614b18575f80fd5b614b2061437e565b905081356001600160401b03811115614b37575f80fd5b614b43848285016149f5565b8252506020820135614b5481614545565b602082015292915050565b5f60208284031215614b6f575f80fd5b81356001600160401b03811115614b84575f80fd5b6136b184828501614b08565b5f60208284031215614ba0575f80fd5b604051602081018181106001600160401b0382111715614bc257614bc2614342565b6040529135825250919050565b5f60608284031215614bdf575f80fd5b614be76143c2565b614bf18484614b90565b81526020830135614c0181614545565b60208201526040830135614c1481614545565b60408201529392505050565b5f5b83811015614c3a578181015183820152602001614c22565b50505f910152565b5f8151808452614c59816020860160208601614c20565b601f01601f19169290920160200192915050565b602081525f6113756020830184614c42565b5f60208284031215614c8f575f80fd5b813561137581614545565b5f815180845260208085019450602084015f5b83811015614cc957815187529582019590820190600101614cad565b509495945050505050565b805182525f602080830151604082860152805160606040870152614cfb60a0870182614c9a565b83830151603f19888303810160608a0152815180845291860193505f929091908601905b80841015614d3f5784518252938601936001939093019290860190614d1f565b5060408501519550818982030160808a0152614d5b8187614c9a565b9998505050505050505050565b602081525f825160a060208401528051608060c0850152614d8d610140850182614cd4565b9050602082015160bf198583030160e0860152614daa8282614cd4565b91505060408201516101008501526060820151151561012085015260208501519150614de160408501836001600160a01b03169052565b6040850151606085015260608501516080850152608085015160a0850152809250505092915050565b60808101610d0082846147a1565b5f60408284031215614e28575f80fd5b6113758383614301565b5f60a08284031215614e42575f80fd5b60405160a081018181106001600160401b0382111715614e6457614e64614342565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b5f6101608284031215614eb0575f80fd5b614eb86143c2565b90508135614ec581614545565b8152614ed48360208401614e32565b60208201526146e18360c08401614e32565b5f6101808284031215614ef7575f80fd5b614eff61437e565b614f098484614e9f565b815261016083013561491281614545565b5f60c082840312156142e1575f80fd5b5f805f805f6102a08688031215614f3f575f80fd5b8535614f4a81614545565b9450614f598760208801614f1a565b9350614f688760e08801614f1a565b9250614f78876101a08801614301565b9150614f88876101e08801614f1a565b90509295509295909350565b5f8060208385031215614fa5575f80fd5b82356001600160401b0380821115614fbb575f80fd5b818501915085601f830112614fce575f80fd5b813581811115614fdc575f80fd5b8660208260051b8501011115614ff0575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561505757603f19888603018452615045858351614c42565b94509285019290850190600101615029565b5092979650505050505050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b81516001600160a01b031681526020808301516101608301916150b990840182615064565b50604083015161376460c0840182615064565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015260808101610d00565b5f61016082840312156142e1575f80fd5b5f602082840312156142e1575f80fd5b5f60208284031215615131575f80fd5b6113758383615111565b5f6060828403121561514b575f80fd5b6151536143c2565b9050813561516081614545565b81526020828101359082015260408201356146e181614545565b5f6080828403121561518a575f80fd5b61519261437e565b905061519e838361513b565b81526060820135614b5481614545565b5f608082840312156151be575f80fd5b611375838361517a565b5f608082019050838252823560208301526020830135604083015260408301356151f181614545565b6001600160a01b03166060929092019190915292915050565b828152604060208201525f8235601e19843603018112615228575f80fd5b83016020810190356001600160401b03811115615243575f80fd5b803603821315615251575f80fd5b604080850152806080850152808260a08601375f60a082860101526020850135606085015260a0601f19601f830116850101925050509392505050565b5f6060828403121561529e575f80fd5b611375838361513b565b828152604060208201525f8251604080840152805160808401526020810151151560a08401526040810151151560c084015260608101519050608060e08401526152f6610100840182614c9a565b602094909401516001600160a01b031660609390930192909252509092915050565b5f60208284031215615328575f80fd5b815160038110611375575f80fd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610d0057610d00615336565b5f8261537757634e487b7160e01b5f52601260045260245ffd5b500490565b5f60c0828403121561538c575f80fd5b6153946143e4565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a08301516153ce81614545565b60a08201529392505050565b80516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a0818101519083015260c0908101511515910152565b6154318282516153da565b60208101516001600160a01b0390811660e08401526040909101511661010090910152565b82815261014081016113756020830184615426565b5f6020828403121561547b575f80fd5b5051919050565b5f610d0036836144d1565b828152610100810161137560208301846153da565b5f608082840312156154b2575f80fd5b6154ba614356565b905081516154c781614545565b815260208201516154d781614436565b80602083015250604082015160408201526060820151606082015292915050565b5f6101408284031215615509575f80fd5b6155116143a0565b61551b84846154a2565b8152608083015161552b81614545565b8060208301525060a0830151604082015260c0830151606082015260e0830151608082015261010083015160a082015261012083015160c08201528091505092915050565b5f610d0036836149f5565b5f610120828403121561558c575f80fd5b6155946143e4565b61559e84846154a2565b81526080830151602082015260a0830151604082015260c0830151606082015260e0830151608082015261010083015160a08201528091505092915050565b918252805180516020808501919091528082015160408086019190915290910151606084015201516001600160a01b0316608082015260a00190565b80358252602081013561562b81614545565b6001600160a01b031660208301526040818101359083015260608082013590830152608090810135910152565b82815260c081016113756020830184615619565b5f805f6060848603121561567e575f80fd5b8351925060208401519150604084015190509250925092565b83815260e081016156ab6020830185615619565b8260c0830152949350505050565b5f815160408452805160408501526020808201519150604060608601528151606060808701526156ec60e0870182614c9a565b82840151607f19888303810160a08a0152815180845291850193505f929091908501905b808410156157305784518252938501936001939093019290850190615710565b5060408601519550818982030160c08a015261574c8187614c9a565b978501516001600160a01b03169890940197909752509395945050505050565b828152604060208201525f6136b160408301846156b9565b82815260a08101611375602083018480516001600160a01b031682526020808201519083015260408082015190830152606090810151910152565b5f60c082840312156157cf575f80fd5b6157d76143e4565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b6001600160401b0381168114610f0c575f80fd5b5f6040828403121561583b575f80fd5b61584361437e565b825161584e81614545565b8152602083015161491281615817565b5f60608201905083825282356020830152602083013561587d81614545565b6001600160a01b03166040929092019190915292915050565b5f6101a082019050838252825160018060a01b0380825116602085015260208201516158c56040860182615064565b50604082015191506158da60e0850183615064565b8060208601511661018085015250509392505050565b5f60608284031215615900575f80fd5b61137583836148a8565b803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a081013561594481614545565b6001600160a01b031660a0929092019190915250565b803561596581614545565b6001600160a01b03168252602081013561597e81615817565b6001600160401b0381166020840152505050565b803561599d81614545565b6001600160a01b0390811683526020820135906159b982614545565b90811660208401526040820135906159d082614545565b90811660408401526060820135906159e782614545565b90811660608401526080820135906159fe82614545565b908116608084015260a082013590615a1582614545565b80821660a085015250505050565b8681526001600160a01b03861660208201526102c08101615a47604083018761590a565b8435610100830152602085013561012083015260408501356101408301526060850135610160830152608085013561018083015260a08501356101a0830152615a946101c083018561595a565b615aa2610200830184615992565b979650505050505050565b8581526102a08101615ac2602083018761590a565b843560e0830152602085013561010083015260408501356101208301526060850135610140830152608085013561016083015260a0850135610180830152615b0e6101a083018561595a565b615b1c6101e0830184615992565b9695505050505050565b8281526080810161137560208301848035825260208082013590830152604090810135910152565b83815260a08101615b7660208301858035825260208082013590830152604090810135910152565b826080830152949350505050565b5f60208284031215615b94575f80fd5b815161137581614436565b5f6101608284031215615bb0575f80fd5b6113758383614e9f565b82815260a081016113756020830184805180516001600160a01b0390811684526020808301518186015260409283015182169285019290925291015116606090910152565b5f60208284031215615c0f575f80fd5b6113758383614b90565b600181815b80851115615c5357815f1904821115615c3957615c39615336565b80851615615c4657918102915b93841c9390800290615c1e565b509250929050565b5f82615c6957506001610d00565b81615c7557505f610d00565b8160018114615c8b5760028114615c9557615cb1565b6001915050610d00565b60ff841115615ca657615ca6615336565b50506001821b610d00565b5060208310610133831016604e8410600b8410161715615cd4575081810a610d00565b615cde8383615c19565b805f1904821115615cf157615cf1615336565b029392505050565b5f6113758383615c5b565b8082028115828204841417610d0057610d00615336565b5f60208284031215615d2b575f80fd5b815160ff81168114611375575f80fd5b5f61137560ff841683615c5b565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e19843603018112615d72575f80fd5b8301803591506001600160401b03821115615d8b575f80fd5b602001915036819003821315615d9f575f80fd5b9250929050565b5f8251615db7818460208701614c20565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212200a637d9bc602fdc52d42a42c438e191d8e10169e273abe5b1c4613c36cc4fa5f64736f6c63430008170033",
    "sourceMapi;:::-;;:::i;:::-;;;470:14:418;;463:22;445:41;;433:2;418:18;3443:202:76;;;;;;;;15429:199:237;;;;;;:::i;:::-;;:::i;:::-;;7360:259;;;;;;;;;;-1:-1:-1;7360:259:237;;;;;:::i;:::-;;:::i;8718:180::-;;;;;;:::i;:::-;;:::i;15930:311::-;;;;;;:::i;:::-;;:::i;2435:196:239:-;;;;;;;;;;-1:-1:-1;2435:196:239;;;;;:::i;:::-;;:::i;:::-;;;6427:25:418;;;6415:2;6400:18;2435:196:239;6281:177:418;10856:259:237;;;;;;:::i;:::-;;:::i;5301:133:239:-;;;;;;;;;;-1:-1:-1;5301:133:239;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5470:244::-;;;;;;;;;;;;;:::i;:::-;;;;7202:25:418;;;7258:2;7243:18;;7236:34;;;;7175:18;5470:244:239;7028:248:418;2667:125:239;;;;;;;;;;;;;:::i;:::-;;;;;;7645:13:418;;7627:32;;7715:4;7703:17;;;7697:24;7675:20;;;7668:54;7778:4;7766:17;;;7760:24;7738:20;;;7731:54;7841:4;7829:17;;;7823:24;7801:20;;;7794:54;7904:4;7892:17;;;7886:24;7864:20;;;7857:54;7987:3;7959:17;;;7953:24;-1:-1:-1;;;;;7949:50:418;7927:20;;;7920:80;;;;7614:3;7599:19;;7390:616;11151:543:237;;;;;;:::i;:::-;;:::i;4759:191:76:-;;;;;;;;;;-1:-1:-1;4759:191:76;;;;;:::i;:::-;;:::i;9201:186:237:-;;;;;;:::i;:::-;;:::i;6434:208:239:-;;;;;;;;;;-1:-1:-1;6434:208:239;;;;;:::i;:::-;;:::i;5949:155::-;;;;;;;;;;-1:-1:-1;5949:155:239;;;;;:::i;:::-;;:::i;15660:234:237:-;;;;;;:::i;:::-;;:::i;6678:238:239:-;;;;;;;;;;-1:-1:-1;6678:238:239;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5246:136:76:-;;;;;;;;;;-1:-1:-1;5246:136:76;;;;;:::i;:::-;;:::i;6348:245::-;;;;;;;;;;-1:-1:-1;6348:245:76;;;;;:::i;:::-;;:::i;9718:210:237:-;;;;;;:::i;:::-;;:::i;6952:243:239:-;;;;;;;;;;-1:-1:-1;6952:243:239;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15064:333:237:-;;;;;;:::i;:::-;;:::i;14040:762::-;;;;;;:::i;:::-;;:::i;8314:116::-;;;;;;;;;;;;;:::i;7656:472::-;;;;;;;;;;-1:-1:-1;7656:472:237;;;;;:::i;:::-;;:::i;4161:214:80:-;;;;;;:::i;:::-;;:::i;10533:291:237:-;;;;;;:::i;:::-;;:::i;3708:134:80:-;;;;;;;;;;;;;:::i;13725:283:237:-;;;;;;:::i;:::-;;:::i;9964:287::-;;;;;;:::i;:::-;;:::i;6140:258:239:-;;;;;;;;;;-1:-1:-1;6140:258:239;;;;;:::i;:::-;;:::i;7231:86::-;;;;;;;;;;-1:-1:-1;7303:7:239;;;;;;;;;;;;-1:-1:-1;;;7303:7:239;;;;7231:86;;;;;;;:::i;2496:145:83:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:83;;;2496:145;;3910:409:239;;;;;;;;;;-1:-1:-1;3910:409:239;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4549:141::-;;;;;;;;;;-1:-1:-1;4549:141:239;;;;;:::i;:::-;;:::i;3144:584::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3217:504:239;;;;;;;;3260:29;;3217:504;;3325:31;;3217:504;;;;3397:36;;-1:-1:-1;;;;;3397:36:239;;;3217:504;;;;;;;3470:32;;;;3217:504;;;;3584:26;;;;3217:504;;;;3638:27;;;;3217:504;;;;3690:20;;;;3217:504;;;;3530:23;;;;;3217:504;;;;;3144:584;;;;;24298:13:418;;24280:32;;24368:4;24356:17;;;24350:24;24328:20;;;24321:54;24410:17;;;24404:24;-1:-1:-1;;;;;24504:21:418;;;24482:20;;;24475:51;;;;24586:4;24574:17;;;24568:24;24564:33;;24542:20;;;24535:63;24658:4;24646:17;;;24640:24;24636:33;;24614:20;;;24607:63;24455:3;24718:17;;;24712:24;24708:33;;24686:20;;;24679:63;24802:4;24790:17;;;24784:24;24780:33;;24758:20;;;24751:63;24874:4;24862:17;;;24856:24;24852:33;;;24830:20;;;24823:63;;;;24267:3;24252:19;3144:584:239;24079:813:418;5101:164:239;;;;;;;;;;-1:-1:-1;5101:164:239;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2828:128::-;;;;;;;;;;;;;:::i;:::-;;;;;;25358:4:418;25400:3;25389:9;25385:19;25377:27;;25437:6;25431:13;25420:9;25413:32;25501:4;25493:6;25489:17;25483:24;25476:4;25465:9;25461:20;25454:54;25564:4;25556:6;25552:17;25546:24;25539:4;25528:9;25524:20;25517:54;25627:4;25619:6;25615:17;25609:24;25602:4;25591:9;25587:20;25580:54;25690:4;25682:6;25678:17;25672:24;25665:4;25654:9;25650:20;25643:54;25753:4;25745:6;25741:17;25735:24;25728:4;25717:9;25713:20;25706:54;25174:592;;;;;2992:116:239;;;;;;;;;;;;;:::i;:::-;;;;26023:13:418;;-1:-1:-1;;;;;26019:39:418;26001:58;;26119:4;26107:17;;;26101:24;-1:-1:-1;;;;;26097:49:418;26075:20;;;26068:79;;;;25974:18;2992:116:239;25771:382:418;12597:171:237;;;;;;:::i;:::-;;:::i;8165:112::-;;;;;;;;;;;;;:::i;16523:291::-;;;;;;:::i;:::-;;:::i;14834:194::-;;;;;;:::i;:::-;;:::i;3732:207:76:-;;;;;;;;;;-1:-1:-1;3732:207:76;;;;;:::i;:::-;;:::i;2317:49::-;;;;;;;;;;-1:-1:-1;2317:49:76;2362:4;2317:49;;4607:627:237;;;;;;;;;;-1:-1:-1;4607:627:237;;;;;:::i;:::-;;:::i;8467:219::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1819:58:80:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:80;;;;;4355:158:239;;;;;;;;;;-1:-1:-1;4355:158:239;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4911:154::-;;;;;;;;;;-1:-1:-1;4911:154:239;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12023:542:237:-;;;;;;:::i;:::-;;:::i;2080:122:239:-;;;;;;;;;;-1:-1:-1;2080:122:239;;;;;:::i;:::-;;:::i;4726:149::-;;;;;;;;;;-1:-1:-1;4726:149:239;;;;;:::i;:::-;;:::i;10283:214:237:-;;;;;;:::i;:::-;;:::i;5662:138:76:-;;;;;;;;;;-1:-1:-1;5662:138:76;;;;;:::i;:::-;;:::i;11726:261:237:-;;;;;;:::i;:::-;;:::i;13003:403::-;;;;;;:::i;:::-;;:::i;2238:161:239:-;;;;;;;;;;-1:-1:-1;2238:161:239;;;;;:::i;:::-;;:::i;16273:214:237:-;;;;;;:::i;:::-;;:::i;12800:171::-;;;;;;:::i;:::-;;:::i;9423:263::-;;;;;;:::i;:::-;;:::i;5816:856::-;;;;;;;;;;-1:-1:-1;5816:856:237;;;;;:::i;:::-;;:::i;5750:163:239:-;;;;;;;;;;-1:-1:-1;5750:163:239;;;;;:::i;:::-;;:::i;3768:106::-;;;;;;;;;;-1:-1:-1;3845:22:239;;3768:106;;-1:-1:-1;;;;;3845:22:239;;;35501:51:418;;35489:2;35474:18;3768:106:239;35333:225:418;8934:235:237;;;;;;:::i;:::-;;:::i;13438:251::-;;;;;;:::i;:::-;;:::i;3443:202:76:-;3528:4;-1:-1:-1;;;;;;3551:47:76;;-1:-1:-1;;;3551:47:76;;:87;;-1:-1:-1;;;;;;;;;;1134:40:84;;;3602:36:76;3544:94;3443:202;-1:-1:-1;;3443:202:76:o;15429:199:237:-;1979:19:83;:17;:19::i;:::-;15544:34:237::1;::::0;-1:-1:-1;;;15544:34:237;;:26:::1;::::0;::::1;::::0;:34:::1;::::0;:5:::1;::::0;15571:6;;15544:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;15588:33:237::1;::::0;-1:-1:-1;;;15588:33:237;;:25:::1;::::0;-1:-1:-1;15588:25:237::1;::::0;-1:-1:-1;15588:33:237::1;::::0;:5:::1;::::0;15614:6;;15588:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15429:199:::0;:::o;7360:259::-;2362:4:76;5683:26:237;2362:4:76;5698:10:237;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:237;;5765:10;5732:50;;;36870:51:418;36937:18;;;36930:34;;;36843:18;;5732:50:237;;;;;;;;5678:115;7535:34:::1;::::0;-1:-1:-1;;;7535:34:237;;:26:::1;::::0;::::1;::::0;:34:::1;::::0;:5:::1;::::0;7562:6;;7535:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7579:33:237::1;::::0;-1:-1:-1;;;7579:33:237;;:25:::1;::::0;-1:-1:-1;7579:25:237::1;::::0;-1:-1:-1;7579:33:237::1;::::0;:5:::1;::::0;7605:6;;7579:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7360:259:::0;;:::o;8718:180::-;8807:84;8825:65;;;;;;;;8858:6;8825:65;;;;;;;;;;:::i;:::-;;;8878:10;8825:65;;;;;8807:17;:84::i;:::-;8718:180;:::o;15930:311::-;1979:19:83;:17;:19::i;:::-;16125:50:237::1;::::0;-1:-1:-1;;;16125:50:237;;:34:::1;::::0;::::1;::::0;:50:::1;::::0;:5:::1;::::0;16160:14;;16125:50:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;16185:49:237::1;::::0;-1:-1:-1;;;16185:49:237;;:33:::1;::::0;-1:-1:-1;16185:33:237::1;::::0;-1:-1:-1;16185:49:237::1;::::0;:5:::1;::::0;16219:14;;16185:49:::1;;;:::i;2435:196:239:-:0;2534:7;2560:64;2534:7;2605:18;2560:44;:64::i;10856:259:237:-;10963:145;11002:96;;;;;;;;11043:6;11002:96;;;;;;;;;;:::i;:::-;;;11063:10;11002:96;;;;;;;;;;;10963:25;:145::i;5301:133:239:-;5396:31;;-1:-1:-1;;;5396:31:239;;5367:10;5396:31;;;7202:25:418;;;7243:18;;;7236:34;;;5367:10:239;5396:19;;;;7175:18:418;;5396:31:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5470:244::-;5571:29;;5522:7;;;;5571:54;;5522:7;;5571:54;:::i;:::-;388:21:253;408:1;-1:-1:-1;;388:21:253;:::i;:::-;5639:31:239;;:58;;;;:::i;:::-;5550:157;;;;5470:244;;:::o;2667:125::-;2711:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2711:32:239;2762:23;;-1:-1:-1;;;2762:23:239;;:5;:23;;;6427:25:418;2762:21:239;;;;6400:18:418;;2762:23:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2755:30;;2667:125;:::o;11151:543:237:-;1979:19:83;:17;:19::i;:::-;11336:45:237::1;::::0;-1:-1:-1;;;11336:45:237;;:29:::1;::::0;::::1;::::0;:45:::1;::::0;:5:::1;::::0;11366:14;;11336:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11408:44:237::1;::::0;-1:-1:-1;;;11408:44:237;;11391:14:::1;::::0;-1:-1:-1;11408:28:237::1;::::0;-1:-1:-1;11408:28:237::1;::::0;:44:::1;::::0;11391:14;;11437;;11408:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11466:21:::0;;:38:::1;;::::0;11391:61;;-1:-1:-1;11466:53:237;;11462:164:::1;;11584:21:::0;;:30;11535:80:::1;::::0;-1:-1:-1;;;11535:80:237;;:5:::1;:80;::::0;::::1;42881:25:418::0;-1:-1:-1;;;;;42942:32:418;;;42922:18;;;42915:60;11535:48:237::1;::::0;::::1;::::0;42854:18:418;;11535:80:237::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11462:164;11635:52;::::0;-1:-1:-1;;;11635:52:237;;:5:::1;:52;::::0;::::1;7202:25:418::0;7243:18;;;7236:34;;;11635:44:237::1;::::0;::::1;::::0;7175:18:418;;11635:52:237::1;7028:248:418::0;4759:191:76;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:76;;;;;:24;;;;4759:191::o;9201:186:237:-;9294:86;9313:66;;;;;;;;9347:6;9313:66;;;;;;;;;;:::i;:::-;;;9367:10;9313:66;;;;;9294:18;:86::i;6434:208:239:-;6504:7;6527:5;6536:1;6527:10;6523:67;;6560:19;;-1:-1:-1;;;6560:19:239;;;;;;;;;;;6523:67;6606:29;:5;6623:4;6629:5;6606:16;:29::i;:::-;6599:36;6434:208;-1:-1:-1;;;6434:208:239:o;5949:155::-;6054:43;;-1:-1:-1;;;6054:43:239;;6028:7;6054:43;;;43469:25:418;;;-1:-1:-1;;;;;43530:32:418;;43510:18;;;43503:60;43579:18;;;43572:34;;;6028:7:239;6054:28;;;;43442:18:418;;6054:43:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15660:234:237:-;15777:110;15808:78;;;;;;;;15854:6;15808:78;;;:::i;:::-;;;15874:10;15808:78;;;;;15777:30;:110::i;6678:238:239:-;6798:46;;:::i;:::-;6867:42;;-1:-1:-1;;;6867:42:239;;:15;;:27;;:42;;6895:5;;6902:6;;6867:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5246:136:76:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:76;;966:10:81;6441:34:76;6437:102;;6498:30;;-1:-1:-1;;;6498:30:76;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;9718:210:237:-;9823:98;9848:72;;;;;;;;9888:6;9848:72;;;:::i;:::-;;;9908:10;9848:72;;;;;9823:24;:98::i;6952:243:239:-;7074:48;;:::i;:::-;7145:43;;-1:-1:-1;;;7145:43:239;;:16;;:28;;:43;;7174:5;;7181:6;;7145:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15064:333:237:-;1979:19:83;:17;:19::i;:::-;15260:25:237::1;::::0;::::1;::::0;7013:33:::1;::::0;-1:-1:-1;;;7013:33:237;;6981:29:::1;7013:33;::::0;::::1;42881:25:418::0;;;-1:-1:-1;;;;;42942:32:418;;42922:18;;;42915:60;6981:29:237;7013:21:::1;::::0;::::1;::::0;42854:18:418;;7013:33:237::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15301:40:::2;::::0;-1:-1:-1;;;15301:40:237;;6981:65;;-1:-1:-1;15301:24:237::2;::::0;::::2;::::0;:40:::2;::::0;:5:::2;::::0;15326:14;;15301:40:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;15351:39:237::2;::::0;-1:-1:-1;;;15351:39:237;;:23:::2;::::0;-1:-1:-1;15351:23:237::2;::::0;-1:-1:-1;15351:39:237::2;::::0;:5:::2;::::0;15375:14;;15351:39:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;7098:33:237::1;::::0;-1:-1:-1;;;7098:33:237;;7067:28:::1;7098:33;::::0;::::1;42881:25:418::0;;;-1:-1:-1;;;;;42942:32:418;;42922:18;;;42915:60;7067:28:237;-1:-1:-1;7098:21:237::1;::::0;-1:-1:-1;7098:21:237::1;::::0;42854:18:418;;7098:33:237::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7067:64;;7169:21;7145:20;:45;7141:176;;7213:93;::::0;-1:-1:-1;;;7213:93:237;;-1:-1:-1;;;;;47744:32:418;;7213:93:237::1;::::0;::::1;47726:51:418::0;47793:18;;;47786:34;;;47836:18;;;47829:34;;;47699:18;;7213:93:237::1;47524:345:418::0;14040:762:237;14268:39;14309:35;1979:19:83;:17;:19::i;:::-;934:24:230::1;5683:26:237;5692:4;5698:10;5683:8;:26::i;:::-;5678:115;;5732:50;::::0;-1:-1:-1;;;5732:50:237;;5765:10:::1;5732:50;::::0;::::1;36870:51:418::0;36937:18;;;36930:34;;;36843:18;;5732:50:237::1;36696:274:418::0;5678:115:237::1;14360:46:::2;::::0;-1:-1:-1;;;14360:46:237;;:38:::2;::::0;::::2;::::0;:46:::2;::::0;:5:::2;::::0;14399:6;;14360:46:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;14525:45:237::2;::::0;-1:-1:-1;;;14525:45:237;;14416:14:::2;::::0;-1:-1:-1;14525:37:237::2;::::0;-1:-1:-1;14525:37:237::2;::::0;:45:::2;::::0;14416:14;;14563:6;;14525:45:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14440:130:::0;;-1:-1:-1;14440:130:237;-1:-1:-1;14440:130:237;-1:-1:-1;14580:48:237::2;;:5;14629:15;::::0;;;::::2;::::0;::::2;;:::i;:::-;14580:65;::::0;-1:-1:-1;;;;;;14580:65:237::2;::::0;;;;;;::::2;::::0;::::2;42881:25:418::0;;;;-1:-1:-1;;;;;42942:32:418;42922:18;;;42915:60;42854:18;;14580:65:237::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;14655:78:237::2;::::0;-1:-1:-1;;;14655:78:237;;:37:::2;::::0;-1:-1:-1;14655:37:237::2;::::0;-1:-1:-1;14655:78:237::2;::::0;:5:::2;::::0;14693:6;;14701:31;;14655:78:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;14743:52:237::2;::::0;-1:-1:-1;;;14743:52:237;;:5:::2;:52;::::0;::::2;7202:25:418::0;7243:18;;;7236:34;;;14743:44:237::2;::::0;-1:-1:-1;14743:44:237::2;::::0;-1:-1:-1;7175:18:418;;14743:52:237::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;14350:452;2008:1:83::1;14040:762:237::0;;;:::o;8314:116::-;991:24:230;5683:26:237;5692:4;5698:10;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:237;;5765:10;5732:50;;;36870:51:418;36937:18;;;36930:34;;;36843:18;;5732:50:237;36696:274:418;5678:115:237;8413:10:::1;:8;:10::i;7656:472::-:0;1061:37:230;5683:26:237;5692:4;5698:10;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:237;;5765:10;5732:50;;;36870:51:418;36937:18;;;36930:34;;;36843:18;;5732:50:237;36696:274:418;5678:115:237;7858:35;;;-1:-1:-1;;;;;7903:48:237;;::::1;-1:-1:-1::0;;;;;;7961:70:237;;;;-1:-1:-1;;;8015:15:237::1;-1:-1:-1::0;;;;;7961:70:237::1;;;::::0;;;8046:75:::1;::::0;;7858:35;;;::::1;49851:34:418::0;;;49916:2;49901:18;;49894:43;;;;8083:10:237::1;::::0;8046:75:::1;::::0;49771:18:418;8046:75:237::1;;;;;;;7824:304;7656:472:::0;;:::o;4161:214:80:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;10533:291:237:-;1979:19:83;:17;:19::i;:::-;10718:45:237::1;::::0;-1:-1:-1;;;10718:45:237;;:29:::1;::::0;::::1;::::0;:45:::1;::::0;:5:::1;::::0;10748:14;;10718:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10773:44:237::1;::::0;-1:-1:-1;;;10773:44:237;;:28:::1;::::0;-1:-1:-1;10773:28:237::1;::::0;-1:-1:-1;10773:44:237::1;::::0;:5:::1;::::0;10802:14;;10773:44:::1;;;:::i;3708:134:80:-:0;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:80;:::o;13725:283:237:-;1979:19:83;:17;:19::i;:::-;13906:43:237::1;::::0;;-1:-1:-1;;;13906:43:237;;:5:::1;:43;::::0;::::1;52006:25:418::0;52073:13;;52067:20;52047:18;;;52040:48;52062:2;52123:15;;52117:22;-1:-1:-1;;;;;52213:21:418;;;52193:18;;;52186:49;52281:15;;;52275:22;52271:31;;;52251:18;;;52244:59;13906:27:237::1;::::0;::::1;::::0;51978:19:418;;13906:43:237::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13959:42:237::1;::::0;;-1:-1:-1;;;13959:42:237;;:5:::1;:42;::::0;::::1;52006:25:418::0;52073:13;;52067:20;52047:18;;;52040:48;52062:2;52123:15;;52117:22;-1:-1:-1;;;;;52213:21:418;;;52193:18;;;52186:49;52281:15;;;52275:22;52271:31;;;52251:18;;;52244:59;13959:26:237::1;::::0;-1:-1:-1;13959:26:237::1;::::0;-1:-1:-1;51978:19:418;;13959:42:237::1;51700:609:418::0;9964:287:237;1979:19:83;:17;:19::i;:::-;10147:44:237::1;::::0;-1:-1:-1;;;10147:44:237;;:28:::1;::::0;::::1;::::0;:44:::1;::::0;:5:::1;::::0;10176:14;;10147:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10201:43:237::1;::::0;-1:-1:-1;;;10201:43:237;;:27:::1;::::0;-1:-1:-1;10201:27:237::1;::::0;-1:-1:-1;10201:43:237::1;::::0;:5:::1;::::0;10229:14;;10201:43:::1;;;:::i;6140:258:239:-:0;6284:37;;-1:-1:-1;;;6284:37:239;;6230:7;6284:37;;;7202:25:418;;;7243:18;;;7236:34;;;6230:7:239;;;6284:21;;;;7175:18:418;;6284:37:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6249:72;;;;;;;;;;-1:-1:-1;;;;;6249:72:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;6338:53;-1:-1:-1;;;6338:53:239;;6249:72;;-1:-1:-1;6338:39:239;;;;:53;;-1:-1:-1;;6249:72:239;;6338:53;;;:::i;3910:409::-;3968:15;;:::i;:::-;4002:310;;;-1:-1:-1;;;;;4031:22:239;;-1:-1:-1;4031:22:239;;;:10;:22;;;;;;;;4002:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4031:22;;4002:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4002:310:239;;;;-1:-1:-1;;;4002:310:239;;-1:-1:-1;4002:310:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4002:310:239;;;;;;;;;4118:26;;:42;;-1:-1:-1;;;4118:42:239;;;;;35501:51:418;;;;4002:310:239;;;;;4118:26;;;;:36;;35474:18:418;;4118:42:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4002:310;;4195:27;;:43;;-1:-1:-1;;;4195:43:239;;-1:-1:-1;;;;;35519:32:418;;;4195:43:239;;;35501:51:418;4002:310:239;;;;;4195:27;;;;:37;;35474:18:418;;4195:43:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4002:310;;4265:20;;:36;;-1:-1:-1;;;4265:36:239;;-1:-1:-1;;;;;35519:32:418;;;4265:36:239;;;35501:51:418;4002:310:239;;;;;4265:20;;;;:30;;35474:18:418;;4265:36:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4002:310;;3995:317;3910:409;-1:-1:-1;;3910:409:239:o;4549:141::-;2298:29:253;;4622:4:239;;-1:-1:-1;;4645:38:239;2132:202:253;5101:164:239;5177:21;;:::i;:::-;5217:41;;-1:-1:-1;;;5217:41:239;;:5;:41;;;7202:25:418;7243:18;;;7236:34;;;5217:23:239;;;;7175:18:418;;5217:41:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5210:48;;;;;;;;;;-1:-1:-1;;;;;5210:48:239;;;;-1:-1:-1;;;5210:48:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5101:164:239:o;2828:128::-;2873:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2873:33:239;2925:24;;-1:-1:-1;;;2925:24:239;;:5;:24;;;6427:25:418;2925:22:239;;;;6400:18:418;;2925:24:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2992:116::-;-1:-1:-1;;;;;;;;;;;;;;;;;3081:20:239;;-1:-1:-1;;;3081:20:239;;:5;:20;;;6427:25:418;3081:18:239;;;;6400::418;;3081:20:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12597:171:237:-;1979:19:83;:17;:19::i;:::-;12698:27:237::1;::::0;-1:-1:-1;;;12698:27:237;;:19:::1;::::0;::::1;::::0;:27:::1;::::0;:5:::1;::::0;12718:6;;12698:27:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12735:26:237::1;::::0;-1:-1:-1;;;12735:26:237;;:18:::1;::::0;-1:-1:-1;12735:18:237::1;::::0;-1:-1:-1;12735:26:237::1;::::0;:5:::1;::::0;12754:6;;12735:26:::1;;;:::i;8165:112::-:0;991:24:230;5683:26:237;5692:4;5698:10;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:237;;5765:10;5732:50;;;36870:51:418;36937:18;;;36930:34;;;36843:18;;5732:50:237;36696:274:418;5678:115:237;8262:8:::1;:6;:8::i;16523:291::-:0;1979:19:83;:17;:19::i;:::-;16708:45:237::1;::::0;-1:-1:-1;;;16708:45:237;;:29:::1;::::0;::::1;::::0;:45:::1;::::0;:5:::1;::::0;16738:14;;16708:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;16763:44:237::1;::::0;-1:-1:-1;;;16763:44:237;;:28:::1;::::0;-1:-1:-1;16763:28:237::1;::::0;-1:-1:-1;16763:44:237::1;::::0;:5:::1;::::0;16792:14;;16763:44:::1;;;:::i;14834:194::-:0;14931:90;14952:68;;;;;;;;14988:6;14952:68;;;;;;;;;;:::i;:::-;;;15008:10;14952:68;;;;;14931:20;:90::i;3732:207:76:-;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:76;;;;;;;;-1:-1:-1;;;;;3901:31:76;;;;;;;;;;;;;;;3732:207::o;4607:627:237:-;4158:30:79;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:79;-1:-1:-1;;;4302:15:79;;;4301:16;;-1:-1:-1;;;;;4348:14:79;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;-1:-1:-1;;;;;4788:16:79;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:79;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:79;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:79;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:79;-1:-1:-1;;;5011:22:79;;;4977:67;4864:43:237::1;::::0;-1:-1:-1;;;4864:43:237;;:24:::1;::::0;::::1;::::0;:43:::1;::::0;:5:::1;::::0;4889;;4896:1;;4899;;4902;;4905;;4864:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4918:22;:20;:22::i;:::-;4950:17;:15;:17::i;:::-;4977:24;:22;:24::i;:::-;5012:35;::::0;-1:-1:-1;;;5012:35:237;;:23:::1;::::0;::::1;::::0;:35:::1;::::0;:5:::1;::::0;5036:1;;5039;;5042;;5045;;5012:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5057:37;2362:4:76;5068:18:237::0;::::1;5088:5;5057:10;:37::i;:::-;;5104:30;991:24:230;5128:5:237;5104:10;:30::i;:::-;;5144;934:24:230;5168:5:237;5144:10;:30::i;:::-;;5184:43;1061:37:230;5221:5:237;5184:10;:43::i;:::-;;5068:14:79::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:79;;;5140:14;;-1:-1:-1;61260:50:418;;5140:14:79;;61248:2:418;61233:18;5140:14:79;;;;;;;5064:101;4092:1079;;;;;4607:627:237;;;;;:::o;8467:219::-;8609:22;1979:19:83;:17;:19::i;:::-;8657:22:237::1;:5;8673::::0;;8657:15:::1;:22::i;4355:158:239:-:0;4424:26;;:::i;:::-;-1:-1:-1;;;;;;4469:37:239;;;:5;:37;;;:31;:37;;;;;;;;;4462:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4355:158::o;4911:154::-;4983:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4983:19:239;5021:37;;-1:-1:-1;;;5021:37:239;;:5;:37;;;7202:25:418;7243:18;;;7236:34;;;5021:21:239;;;;7175:18:418;;5021:37:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5014:44;;;;;;;;;;-1:-1:-1;;;;;5014:44:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4911:154;-1:-1:-1;;4911:154:239:o;12023:542:237:-;1979:19:83;:17;:19::i;:::-;12210:46:237::1;::::0;-1:-1:-1;;;12210:46:237;;:30:::1;::::0;::::1;::::0;:46:::1;::::0;:5:::1;::::0;12241:14;;12210:46:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12283:45:237::1;::::0;-1:-1:-1;;;12283:45:237;;12266:14:::1;::::0;-1:-1:-1;12283:29:237::1;::::0;-1:-1:-1;12283:29:237::1;::::0;:45:::1;::::0;12266:14;;12313;;12283:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12342:21:::0;;:38:::1;;::::0;12266:62;;-1:-1:-1;12342:53:237;;12338:159:::1;;12460:25;::::0;::::1;::::0;12411:75:::1;::::0;-1:-1:-1;;;12411:75:237;;:5:::1;:75;::::0;::::1;42881:25:418::0;-1:-1:-1;;;;;42942:32:418;;;42922:18;;;42915:60;12411:48:237::1;::::0;::::1;::::0;42854:18:418;;12411:75:237::1;42674:307:418::0;2080:122:239;2168:27;;-1:-1:-1;;;2168:27:239;;2142:7;2168:27;;;42881:25:418;;;-1:-1:-1;;;;;42942:32:418;;42922:18;;;42915:60;2142:7:239;2168:21;;;;42854:18:418;;2168:27:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4726:149::-;4803:4;4826:42;4803:4;4851:16;4826:24;:42::i;10283:214:237:-;10390:100;10416:73;;;;;;;;10457:6;10416:73;;;:::i;:::-;;;10477:10;10416:73;;;;;10390:25;:100::i;5662:138:76:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;11726:261:237:-:0;11833:147;11873:97;;;;;;;;11915:6;11873:97;;;;11935:10;-1:-1:-1;;;;;11873:97:237;;;;;11958:10;-1:-1:-1;;;;;11873:97:237;;;;11833:26;:147::i;13003:403::-;13151:39;1979:19:83;:17;:19::i;:::-;13206:31:237::1;::::0;-1:-1:-1;;;13206:31:237;;:23:::1;::::0;::::1;::::0;:31:::1;::::0;:5:::1;::::0;13230:6;;13206:31:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;13281:30:237::1;::::0;-1:-1:-1;;;13281:30:237;;:22:::1;::::0;-1:-1:-1;13281:22:237::1;::::0;-1:-1:-1;13281:30:237::1;::::0;:5:::1;::::0;13304:6;;13281:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13321:78;::::0;-1:-1:-1;;;13321:78:237;;13247:64;;-1:-1:-1;13321:37:237::1;::::0;::::1;::::0;:78:::1;::::0;:5:::1;::::0;13359:6;;13247:64;;13321:78:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13003:403:::0;;;:::o;2238:161:239:-;2344:48;;-1:-1:-1;;;2344:48:239;;2321:4;2344:48;;;7202:25:418;;;7243:18;;;7236:34;;;2321:4:239;2344:32;;;;7175:18:418;;2344:48:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;16273:214:237:-;16380:100;16406:73;;;;;;;;16447:6;16406:73;;;;;;;;;;:::i;:::-;;;16467:10;16406:73;;;;;16380:25;:100::i;12800:171::-;1979:19:83;:17;:19::i;:::-;12901:27:237::1;::::0;-1:-1:-1;;;12901:27:237;;:5:::1;:27;::::0;::::1;63892:25:418::0;63953:20;;63933:18;;;63926:48;12901:19:237::1;::::0;::::1;::::0;63865:18:418;;12901:27:237::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12938:26:237::1;::::0;-1:-1:-1;;;12938:26:237;;:5:::1;:26;::::0;::::1;63892:25:418::0;63953:20;;63933:18;;;63926:48;12938:18:237::1;::::0;-1:-1:-1;12938:18:237::1;::::0;-1:-1:-1;63865:18:418;;12938:26:237::1;63621:359:418::0;9423:263:237;1979:19:83;:17;:19::i;:::-;9594:38:237::1;::::0;-1:-1:-1;;;9594:38:237;;:22:::1;::::0;::::1;::::0;:38:::1;::::0;:5:::1;::::0;9617:14;;9594:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9642:37:237::1;::::0;-1:-1:-1;;;9642:37:237;;:21:::1;::::0;-1:-1:-1;9642:21:237::1;::::0;-1:-1:-1;9642:37:237::1;::::0;:5:::1;::::0;9664:14;;9642:37:::1;;;:::i;5816:856::-:0;2362:4:76;5683:26:237;2362:4:76;5698:10:237;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:237;;5765:10;5732:50;;;36870:51:418;36937:18;;;36930:34;;;36843:18;;5732:50:237;36696:274:418;5678:115:237;5989:7:::1;6355:30:79;6388:26;:24;:26::i;:::-;6429:15:::0;;;;-1:-1:-1;;;;6429:15:79;::::1;;;::::0;:44:::1;;-1:-1:-1::0;6448:14:79;;-1:-1:-1;;;;;6448:25:79;;::::1;:14:::0;::::1;:25;;6429:44;6425:105;;;6496:23;;-1:-1:-1::0;;;6496:23:79::1;;;;;;;;;;;6425:105;6539:24:::0;;-1:-1:-1;;6573:22:79;-1:-1:-1;;;;;6539:24:79;::::1;6573:22:::0;-1:-1:-1;;;6573:22:79::1;::::0;;-1:-1:-1;;;;;6049:35:237;::::2;6045:191;;6204:21;;-1:-1:-1::0;;;6204:21:237::2;;;;;;;;;;;6045:191;6257:22:::0;;-1:-1:-1;;;;;6257:22:237::2;6249:45:::0;6245:208:::2;;6420:22;;-1:-1:-1::0;;;6420:22:237::2;;;;;;;;;;;6245:208;6467:36;::::0;-1:-1:-1;;;6467:36:237;;6497:4:::2;6467:36;::::0;::::2;35501:51:418::0;-1:-1:-1;;;;;6467:21:237;::::2;::::0;::::2;::::0;35474:18:418;;6467:36:237::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6462:156;;6571:36;::::0;-1:-1:-1;;;6571:36:237;;6601:4:::2;6571:36;::::0;::::2;35501:51:418::0;35474:18;;6571:36:237::2;35333:225:418::0;6462:156:237::2;6628:22:::0;:37;;-1:-1:-1;;;;;;6628:37:237::2;-1:-1:-1::0;;;;;6628:37:237;::::2;;::::0;;6616:23:79;;-1:-1:-1;;;;6616:23:79::1;::::0;;6654:20:::1;::::0;-1:-1:-1;;;;;61278:31:418;;61260:50;;6654:20:79::1;::::0;61248:2:418;61233:18;6654:20:79::1;;;;;;;6289:392;5802:1:237;5816:856:::0;;:::o;5750:163:239:-;5859:47;;-1:-1:-1;;;5859:47:239;;5833:7;5859:47;;;43469:25:418;;;-1:-1:-1;;;;;43530:32:418;;43510:18;;;43503:60;43579:18;;;43572:34;;;5833:7:239;5859:30;;;;43442:18:418;;5859:47:239;43234:378:418;8934:235:237;1979:19:83;:17;:19::i;:::-;9095:29:237::1;::::0;-1:-1:-1;;;9095:29:237;;:21:::1;::::0;::::1;::::0;:29:::1;::::0;:5:::1;::::0;9117:6;;9095:29:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9134:28:237::1;::::0;-1:-1:-1;;;9134:28:237;;:20:::1;::::0;-1:-1:-1;9134:20:237::1;::::0;-1:-1:-1;9134:28:237::1;::::0;:5:::1;::::0;9155:6;;9134:28:::1;;;:::i;13438:251::-:0;13541:141;13578:94;;;;;;;;13617:6;13578:94;;;;;;;;;;:::i;:::-;;;13637:10;13578:94;;;;;;;;;;;13541:23;:141::i;2709:128:83:-;-1:-1:-1;;;;;;;;;;;2625:9:83;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:83;;;;;;;;;;;2770:61;2709:128::o;5240:370:237:-;5312:4;5332:22;5340:4;5346:7;5332;:22::i;:::-;5328:276;;;-1:-1:-1;5377:4:237;5370:11;;5328:276;5410:22;;-1:-1:-1;;;;;5410:22:237;5398:206;;-1:-1:-1;5470:5:237;5463:12;;5398:206;5546:22;;5513:80;;-1:-1:-1;;;5513:80:237;;;;;42881:25:418;;;-1:-1:-1;;;;;42942:32:418;;;42922:18;;;42915:60;5546:22:237;;;;5513:65;;42854:18:418;;5513:80:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5506:87;;;;1013:477:248;1154:29;1223:260;1274:5;:12;;:22;;;;;;;;;;-1:-1:-1;;;;;1274:22:248;-1:-1:-1;;;;;1274:31:248;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1268:39;;:2;:39;:::i;:::-;1250:57;;:15;:57;:::i;:::-;1327:36;;;;:47;;;-1:-1:-1;;;1327:47:248;;;;-1:-1:-1;;;;;1327:36:248;;;;:45;;:47;;;;;;;;;;;;;;;:36;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1321:53;;:2;:53;:::i;:::-;1430:32;;;;:43;;;-1:-1:-1;;;1430:43:248;;;;-1:-1:-1;;;;;1430:32:248;;;;:41;;:43;;;;;;;;;;;;;;;:32;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1424:49;;:2;:49;:::i;:::-;1388:12;;;:22;:33;;;-1:-1:-1;;;1388:33:248;;;;-1:-1:-1;;;;;1388:22:248;;;;:31;;:33;;;;;;;;;;;;;;;:22;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;1223:13;:260::i;8668:187::-;8761:7;8787:61;8801:4;8807:31;8825:5;8832;8807:17;:31::i;:::-;179:4:254;8787:13:248;:61::i;:::-;8780:68;8668:187;-1:-1:-1;;;;8668:187:248:o;4148:103:76:-;4214:30;4225:4;966:10:81;4214::76;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:76;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:76;;;;;;;;;:38;;-1:-1:-1;;7475:38:76;7509:4;7475:38;;;7559:12;966:10:81;;887:96;7559:12:76;-1:-1:-1;;;;;7532:40:76;7550:7;-1:-1:-1;;;;;7532:40:76;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7432:219;7353:304;7270:387;;;;:::o;7894:388::-;7972:4;-1:-1:-1;;;;;;;;;;;8061:22:76;8069:4;8075:7;8061;:22::i;:::-;8057:219;;;8133:5;8099:14;;;;;;;;;;;-1:-1:-1;;;;;8099:31:76;;;;;;;;;;:39;;-1:-1:-1;;8099:39:76;;;8157:40;966:10:81;;8099:14:76;;8157:40;;8133:5;8157:40;8218:4;8211:11;;;;;3478:178:83;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:83;;-1:-1:-1;;3595:17:83::1;::::0;;3627:22:::1;966:10:81::0;3636:12:83::1;3627:22;::::0;-1:-1:-1;;;;;35519:32:418;;;35501:51;;35489:2;35474:18;3627:22:83::1;;;;;;;3526:130;3478:178::o:0;4578:312:80:-;4658:4;-1:-1:-1;;;;;4667:6:80;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:80;:32;-1:-1:-1;;;;;;;;;;;1519:53:96;-1:-1:-1;;;;;1519:53:96;;1441:138;4728:32:80;-1:-1:-1;;;;;4728:42:80;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:80;;;;;;;;;;;6678:151:237;2362:4:76;5683:26:237;2362:4:76;5698:10:237;5683:8;:26::i;:::-;5678:115;;5732:50;;-1:-1:-1;;;5732:50:237;;5765:10;5732:50;;;36870:51:418;36937:18;;;36930:34;;;36843:18;;5732:50:237;36696:274:418;6032:538:80;6149:17;-1:-1:-1;;;;;6131:50:80;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:80;;;;;;;;-1:-1:-1;;6131:52:80;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:80;;-1:-1:-1;;;;;35519:32:418;;6493:60:80;;;35501:51:418;35474:18;;6493:60:80;35333:225:418;6127:437:80;-1:-1:-1;;;;;;;;;;;6225:40:80;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:80;;;;;6427:25:418;;;6400:18;;6292:34:80;6281:177:418;6221:120:80;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:80;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:80;;;;;;;;;;;3170:176:83;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:83;;-1:-1:-1;;3288:16:83::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:81::0;3326:12:83::1;887:96:81::0;9071:205:79;9129:30;;3147:66;9186:27;8819:122;3231:65:76;6929:20:79;:18;:20::i;1377:885:255:-;1492:22;;;:29;;-1:-1:-1;;;;1492:29:255;-1:-1:-1;;;1492:29:255;;;1567:27;;;;:41;;;-1:-1:-1;;;1567:41:255;;;;1458:22;;1492:29;;-1:-1:-1;;;;;1567:27:255;;;;:39;;:41;;;;;;;;;;;;;;;:27;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1532:76;;1618:29;1650:5;:10;;:20;;;;;;;;;;-1:-1:-1;;;;;1650:20:255;-1:-1:-1;;;;;1650:32:255;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1618:66;-1:-1:-1;1717:4:255;-1:-1:-1;;;;;1705:24:255;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:34;;1744:9;1739:132;1759:15;;;1739:132;;;1808:52;1845:4;1852;;1857:1;1852:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1808:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1808:28:255;;-1:-1:-1;;;1808:52:255:i;:::-;1795:7;1803:1;1795:10;;;;;;;;:::i;:::-;;;;;;;;;;:65;1776:3;;1739:132;;;-1:-1:-1;1915:27:255;;;;:41;;;-1:-1:-1;;;1915:41:255;;;;1881:31;;-1:-1:-1;;;;;1915:27:255;;:39;;:41;;;;;;;;;;;;;;:27;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1881:75;;1966:28;1997:5;:10;;:20;;;;;;;;;;-1:-1:-1;;;;;1997:20:255;-1:-1:-1;;;;;1997:32:255;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:172;;-1:-1:-1;;;2042:172:255;;;;;69019:25:418;;;69060:18;;;69053:34;;;69103:18;;;69096:34;;;69146:18;;;69139:34;;;69189:19;;;69182:35;;;1966:65:255;;-1:-1:-1;2042:54:255;;;;68991:19:418;;2042:172:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2225:22:255;;;;:30;;-1:-1:-1;;;;2225:30:255;;;-1:-1:-1;1377:885:255;;;-1:-1:-1;;;;;;1377:885:255:o;2559:208:253:-;2651:4;388:21;408:1;-1:-1:-1;;388:21:253;:::i;:::-;2674:10;:38;;:86;;;;-1:-1:-1;;2729:31:253;;;;;;-1:-1:-1;2716:44:253;2559:208::o;614:142:254:-;688:7;714:35;741:1;744;747;714:26;:35::i;8042:173:248:-;8168:26;;8128:7;;8154:54;;8196:5;230:8:254;8154:13:248;:54::i;4381:197:76:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:76;;-1:-1:-1;;;;;36888:32:418;;4514:47:76;;;36870:51:418;36937:18;;;36930:34;;;36843:18;;4514:47:76;36696:274:418;2909:126:83;-1:-1:-1;;;;;;;;;;;2625:9:83;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:83;;;;;;;;;;;2264:344:96;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:96;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;7082:141:79:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:79;;;;;;;;;;;3916:253:105;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:105;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:105:o;25271:508:156:-;25345:9;25568:1;25564;25560:6;25556:14;25553:1;25550:21;25547:1;25543:29;25536:37;25533:1;25529:45;25519:169;;25607:10;25601:4;25594:24;25669:4;25663;25656:18;25519:169;-1:-1:-1;25749:9:156;;25724:17;;;25717:25;25710:33;25745:17;;;25706:57;;25271:508::o;1671:281:96:-;1748:17;-1:-1:-1;;;;;1748:29:96;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:96;;-1:-1:-1;;;;;35519:32:418;;1805:47:96;;;35501:51:418;35474:18;;1805:47:96;35333:225:418;1744:119:96;-1:-1:-1;;;;;;;;;;;1872:73:96;;-1:-1:-1;;;;;;1872:73:96;-1:-1:-1;;;;;1872:73:96;;;;;;;;;;1671:281::o;6113:122::-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:96;;;;;;;;;;;8485:120:79;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:79;;;;;;-1:-1:-1;8485:120:79:o;4437:582:105:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:105;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:105;;-1:-1:-1;;;;;35519:32:418;;4933:24:105;;;35501:51:418;35474:18;;4933:24:105;35333:225:418;4853:119:105;-1:-1:-1;4992:10:105;4985:17;;5559:487;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:105;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:418;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:418;;209:43;;199:71;;266:1;263;256:12;497:166;568:5;613:2;604:6;599:3;595:16;591:25;588:45;;;629:1;626;619:12;588:45;-1:-1:-1;651:6:418;497:166;-1:-1:-1;497:166:418:o;668:262::-;767:6;820:2;808:9;799:7;795:23;791:32;788:52;;;836:1;833;826:12;788:52;859:65;916:7;905:9;859:65;:::i;935:166::-;1006:5;1051:2;1042:6;1037:3;1033:16;1029:25;1026:45;;;1067:1;1064;1057:12;1106:380;1205:6;1258:2;1246:9;1237:7;1233:23;1229:32;1226:52;;;1274:1;1271;1264:12;1226:52;1314:9;1301:23;-1:-1:-1;;;;;1339:6:418;1336:30;1333:50;;;1379:1;1376;1369:12;1333:50;1402:78;1472:7;1463:6;1452:9;1448:22;1402:78;:::i;1753:127::-;1814:10;1809:3;1805:20;1802:1;1795:31;1845:4;1842:1;1835:15;1869:4;1866:1;1859:15;1885:253;1957:2;1951:9;1999:4;1987:17;;-1:-1:-1;;;;;2019:34:418;;2055:22;;;2016:62;2013:88;;;2081:18;;:::i;:::-;2117:2;2110:22;1885:253;:::o;2143:257::-;2215:4;2209:11;;;2247:17;;-1:-1:-1;;;;;2279:34:418;;2315:22;;;2276:62;2273:88;;;2341:18;;:::i;2405:253::-;2477:2;2471:9;2519:4;2507:17;;-1:-1:-1;;;;;2539:34:418;;2575:22;;;2536:62;2533:88;;;2601:18;;:::i;2663:253::-;2735:2;2729:9;2777:4;2765:17;;-1:-1:-1;;;;;2797:34:418;;2833:22;;;2794:62;2791:88;;;2859:18;;:::i;2921:252::-;2993:2;2987:9;3035:3;3023:16;;-1:-1:-1;;;;;3054:34:418;;3090:22;;;3051:62;3048:88;;;3116:18;;:::i;3178:275::-;3249:2;3243:9;3314:2;3295:13;;-1:-1:-1;;3291:27:418;3279:40;;-1:-1:-1;;;;;3334:34:418;;3370:22;;;3331:62;3328:88;;;3396:18;;:::i;:::-;3432:2;3425:22;3178:275;;-1:-1:-1;3178:275:418:o;3458:118::-;3544:5;3537:13;3530:21;3523:5;3520:32;3510:60;;3566:1;3563;3556:12;3581:183;3641:4;-1:-1:-1;;;;;3666:6:418;3663:30;3660:56;;;3696:18;;:::i;:::-;-1:-1:-1;3741:1:418;3737:14;3753:4;3733:25;;3581:183::o;3769:668::-;3823:5;3876:3;3869:4;3861:6;3857:17;3853:27;3843:55;;3894:1;3891;3884:12;3843:55;3930:6;3917:20;3956:4;3980:60;3996:43;4036:2;3996:43;:::i;:::-;3980:60;:::i;:::-;4062:3;4086:2;4081:3;4074:15;4114:4;4109:3;4105:14;4098:21;;4171:4;4165:2;4162:1;4158:10;4150:6;4146:23;4142:34;4128:48;;4199:3;4191:6;4188:15;4185:35;;;4216:1;4213;4206:12;4185:35;4252:4;4244:6;4240:17;4266:142;4282:6;4277:3;4274:15;4266:142;;;4348:17;;4336:30;;4386:12;;;;4299;;4266:142;;;-1:-1:-1;4426:5:418;3769:668;-1:-1:-1;;;;;;3769:668:418:o;4442:710::-;4515:5;4563:4;4551:9;4546:3;4542:19;4538:30;4535:50;;;4581:1;4578;4571:12;4535:50;4603:22;;:::i;:::-;4594:31;;4661:9;4648:23;4641:5;4634:38;4724:2;4713:9;4709:18;4696:32;4737:30;4759:7;4737:30;:::i;:::-;4794:2;4783:14;;4776:31;4859:2;4844:18;;4831:32;4872:30;4831:32;4872:30;:::i;:::-;4929:2;4918:14;;4911:31;4993:2;4978:18;;4965:32;-1:-1:-1;;;;;5009:30:418;;5006:50;;;5052:1;5049;5042:12;5006:50;5088:57;5141:3;5132:6;5121:9;5117:22;5088:57;:::i;:::-;5083:2;5076:5;5072:14;5065:81;;4442:710;;;;:::o;5157:131::-;-1:-1:-1;;;;;5232:31:418;;5222:42;;5212:70;;5278:1;5275;5268:12;5293:798;5408:6;5461:2;5449:9;5440:7;5436:23;5432:32;5429:52;;;5477:1;5474;5467:12;5429:52;5517:9;5504:23;-1:-1:-1;;;;;5587:2:418;5579:6;5576:14;5573:34;;;5603:1;5600;5593:12;5573:34;5626:22;;;;5682:4;5664:16;;;5660:27;5657:47;;;5700:1;5697;5690:12;5657:47;5726:22;;:::i;:::-;5786:2;5773:16;5814:2;5804:8;5801:16;5798:36;;;5830:1;5827;5820:12;5798:36;5857:72;5921:7;5910:8;5906:2;5902:17;5857:72;:::i;:::-;5850:5;5843:87;;5975:2;5971;5967:11;5954:25;5939:40;;5988:33;6013:7;5988:33;:::i;:::-;6048:2;6037:14;;6030:31;;;;-1:-1:-1;6041:5:418;5293:798;-1:-1:-1;;;5293:798:418:o;6096:180::-;6155:6;6208:2;6196:9;6187:7;6183:23;6179:32;6176:52;;;6224:1;6221;6214:12;6176:52;-1:-1:-1;6247:23:418;;6096:180;-1:-1:-1;6096:180:418:o;6463:210::-;6565:6;6618:3;6606:9;6597:7;6593:23;6589:33;6586:53;;;6635:1;6632;6625:12;6678:345;6827:2;6812:18;;6860:1;6849:13;;6839:144;;6905:10;6900:3;6896:20;6893:1;6886:31;6940:4;6937:1;6930:15;6968:4;6965:1;6958:15;6839:144;6992:25;;;6678:345;:::o;8011:770::-;8079:5;8127:4;8115:9;8110:3;8106:19;8102:30;8099:50;;;8145:1;8142;8135:12;8099:50;8167:22;;:::i;:::-;8158:31;;8226:9;8213:23;8245:33;8270:7;8245:33;:::i;:::-;8301:7;8294:5;8287:22;;8369:2;8358:9;8354:18;8341:32;8336:2;8329:5;8325:14;8318:56;8434:2;8423:9;8419:18;8406:32;8401:2;8394:5;8390:14;8383:56;8499:2;8488:9;8484:18;8471:32;8466:2;8459:5;8455:14;8448:56;8565:3;8554:9;8550:19;8537:33;8531:3;8524:5;8520:15;8513:58;8632:3;8621:9;8617:19;8604:33;8598:3;8591:5;8587:15;8580:58;8690:3;8679:9;8675:19;8662:33;8704:30;8726:7;8704:30;:::i;:::-;8761:3;8750:15;;8743:32;8754:5;8011:770;-1:-1:-1;;8011:770:418:o;8786:557::-;8864:5;8912:6;8900:9;8895:3;8891:19;8887:32;8884:52;;;8932:1;8929;8922:12;8884:52;8954:22;;:::i;:::-;8945:31;;8999:55;9050:3;9039:9;8999:55;:::i;:::-;8992:5;8985:70;9107:3;9096:9;9092:19;9079:33;9121;9146:7;9121:33;:::i;:::-;9181:4;9170:16;;9163:33;9248:3;9233:19;;9220:33;9262;9220;9262;:::i;:::-;9322:4;9311:16;;9304:33;9315:5;8786:557;-1:-1:-1;;8786:557:418:o;9348:278::-;9458:6;9511:3;9499:9;9490:7;9486:23;9482:33;9479:53;;;9528:1;9525;9518:12;9479:53;9551:69;9612:7;9601:9;9551:69;:::i;10261:248::-;10329:6;10337;10390:2;10378:9;10369:7;10365:23;10361:32;10358:52;;;10406:1;10403;10396:12;10358:52;-1:-1:-1;;10429:23:418;;;10499:2;10484:18;;;10471:32;;-1:-1:-1;10261:248:418:o;10514:315::-;10582:6;10590;10643:2;10631:9;10622:7;10618:23;10614:32;10611:52;;;10659:1;10656;10649:12;10611:52;10698:9;10685:23;10717:31;10742:5;10717:31;:::i;:::-;10767:5;10819:2;10804:18;;;;10791:32;;-1:-1:-1;;;10514:315:418:o;10834:408::-;10941:6;10994:2;10982:9;10973:7;10969:23;10965:32;10962:52;;;11010:1;11007;11000:12;10962:52;11050:9;11037:23;-1:-1:-1;;;;;11075:6:418;11072:30;11069:50;;;11115:1;11112;11105:12;11069:50;11138:22;;11194:3;11176:16;;;11172:26;11169:46;;;11211:1;11208;11201:12;11247:258;11347:6;11400:3;11388:9;11379:7;11375:23;11371:33;11368:53;;;11417:1;11414;11407:12;11368:53;11440:59;11491:7;11480:9;11440:59;:::i;11510:309::-;11594:12;;-1:-1:-1;;;;;11590:38:418;11578:51;;11692:4;11681:16;;;11675:23;11668:31;11661:39;11645:14;;;11638:63;11750:4;11739:16;;;11733:23;11717:14;;;11710:47;11806:4;11795:16;;;11789:23;11773:14;;11766:47;11510:309::o;11824:705::-;12002:4;12044:3;12033:9;12029:19;12021:27;;12057:58;12105:9;12096:6;12090:13;12057:58;:::i;:::-;12200:1;12196;12191:3;12187:11;12183:19;12175:4;12167:6;12163:17;12157:24;12153:50;12146:4;12135:9;12131:20;12124:80;12260:4;12252:6;12248:17;12242:24;12235:4;12224:9;12220:20;12213:54;12323:4;12315:6;12311:17;12305:24;12298:4;12287:9;12283:20;12276:54;12386:4;12378:6;12374:17;12368:24;12361:4;12350:9;12346:20;12339:54;12451:4;12443:6;12439:17;12433:24;12424:6;12413:9;12409:22;12402:56;12516:4;12508:6;12504:17;12498:24;12489:6;12478:9;12474:22;12467:56;11824:705;;;;:::o;12534:315::-;12602:6;12610;12663:2;12651:9;12642:7;12638:23;12634:32;12631:52;;;12679:1;12676;12669:12;12631:52;12715:9;12702:23;12692:33;;12775:2;12764:9;12760:18;12747:32;12788:31;12813:5;12788:31;:::i;:::-;12838:5;12828:15;;;12534:315;;;;;:::o;13505:616::-;13685:4;13727:3;13716:9;13712:19;13704:27;;13740:58;13788:9;13779:6;13773:13;13740:58;:::i;:::-;13854:4;13846:6;13842:17;13836:24;13829:4;13818:9;13814:20;13807:54;13917:4;13909:6;13905:17;13899:24;13892:4;13881:9;13877:20;13870:54;13980:4;13972:6;13968:17;13962:24;13955:4;13944:9;13940:20;13933:54;14043:4;14035:6;14031:17;14025:24;14018:4;14007:9;14003:20;13996:54;14108:4;14100:6;14096:17;14090:24;14081:6;14070:9;14066:22;14059:56;13505:616;;;;:::o;14126:356::-;14189:5;14237:4;14225:9;14220:3;14216:19;14212:30;14209:50;;;14255:1;14252;14245:12;14209:50;14277:22;;:::i;:::-;14268:31;;14335:9;14322:23;14315:5;14308:38;14406:2;14395:9;14391:18;14378:32;14373:2;14366:5;14362:14;14355:56;14471:2;14460:9;14456:18;14443:32;14438:2;14431:5;14427:14;14420:56;14126:356;;;;:::o;14487:471::-;14592:6;14645:3;14633:9;14624:7;14620:23;14616:33;14613:53;;;14662:1;14659;14652:12;14613:53;14688:22;;:::i;:::-;14733:54;14779:7;14768:9;14733:54;:::i;:::-;14726:5;14719:69;14840:2;14829:9;14825:18;14812:32;14853:33;14878:7;14853:33;:::i;:::-;14913:4;14902:16;;14895:33;14906:5;14487:471;-1:-1:-1;;;14487:471:418:o;14963:219::-;15074:6;15127:3;15115:9;15106:7;15102:23;15098:33;15095:53;;;15144:1;15141;15134:12;15187:301;15246:6;15299:2;15287:9;15278:7;15274:23;15270:32;15267:52;;;15315:1;15312;15305:12;15267:52;15354:9;15341:23;-1:-1:-1;;;;;15397:5:418;15393:46;15386:5;15383:57;15373:85;;15454:1;15451;15444:12;15493:898;15570:6;15578;15631:2;15619:9;15610:7;15606:23;15602:32;15599:52;;;15647:1;15644;15637:12;15599:52;15686:9;15673:23;15705:31;15730:5;15705:31;:::i;:::-;15755:5;-1:-1:-1;15779:2:418;15817:18;;;15804:32;-1:-1:-1;;;;;15885:14:418;;;15882:34;;;15912:1;15909;15902:12;15882:34;15950:6;15939:9;15935:22;15925:32;;15995:7;15988:4;15984:2;15980:13;15976:27;15966:55;;16017:1;16014;16007:12;15966:55;16053:2;16040:16;16075:2;16071;16068:10;16065:36;;;16081:18;;:::i;:::-;16123:53;16166:2;16147:13;;-1:-1:-1;;16143:27:418;16139:36;;16123:53;:::i;:::-;16110:66;;16199:2;16192:5;16185:17;16239:7;16234:2;16229;16225;16221:11;16217:20;16214:33;16211:53;;;16260:1;16257;16250:12;16211:53;16315:2;16310;16306;16302:11;16297:2;16290:5;16286:14;16273:45;16359:1;16354:2;16349;16342:5;16338:14;16334:23;16327:34;;16380:5;16370:15;;;;;15493:898;;;;;:::o;16396:1616::-;16464:5;16512:4;16500:9;16495:3;16491:19;16487:30;16484:50;;;16530:1;16527;16520:12;16484:50;16552:22;;:::i;:::-;16543:31;;16610:9;16597:23;16590:5;16583:38;16640:2;16693;16682:9;16678:18;16665:32;-1:-1:-1;;;;;16757:2:418;16749:6;16746:14;16743:34;;;16773:1;16770;16763:12;16743:34;16796:22;;;;16848:4;16834:12;;;16830:23;16827:43;;;16866:1;16863;16856:12;16827:43;16894:22;;:::i;:::-;16954:2;16941:16;16982:2;16972:8;16969:16;16966:36;;;16998:1;16995;16988:12;16966:36;17027:52;17075:3;17064:8;17060:2;17056:17;17027:52;:::i;:::-;17018:7;17011:69;;17126:2;17122;17118:11;17105:25;17155:2;17145:8;17142:16;17139:36;;;17171:1;17168;17161:12;17139:36;17194:17;;17242:4;17234:13;;17230:23;-1:-1:-1;17220:51:418;;17267:1;17264;17257:12;17220:51;17303:2;17290:16;17326:60;17342:43;17382:2;17342:43;:::i;17326:60::-;17420:15;;;17502:1;17498:10;;;;17490:19;;17486:28;;;17451:12;;;;17526:15;;;17523:35;;;17554:1;17551;17544:12;17523:35;17578:11;;;;17598:142;17614:6;17609:3;17606:15;17598:142;;;17680:17;;17668:30;;17631:12;;;;17718;;;;17598:142;;;17756:16;;;17749:31;-1:-1:-1;;;17826:4:418;17818:13;;17805:27;17844:16;;;17841:36;;;17873:1;17870;17863:12;17841:36;17913:52;17961:3;17950:8;17946:2;17942:17;17913:52;:::i;:::-;17906:4;17897:7;17893:18;17886:80;;17998:7;17993:2;17986:5;17982:14;17975:31;;;;;16396:1616;;;;:::o;18017:529::-;18095:5;18143:4;18131:9;18126:3;18122:19;18118:30;18115:50;;;18161:1;18158;18151:12;18115:50;18183:22;;:::i;:::-;18174:31;;18241:9;18228:23;-1:-1:-1;;;;;18266:6:418;18263:30;18260:50;;;18306:1;18303;18296:12;18260:50;18333:68;18397:3;18388:6;18377:9;18373:22;18333:68;:::i;:::-;18326:5;18319:83;;18454:2;18443:9;18439:18;18426:32;18467:33;18492:7;18467:33;:::i;:::-;18527:2;18516:14;;18509:31;18520:5;18017:529;-1:-1:-1;;18017:529:418:o;18551:395::-;18661:6;18714:2;18702:9;18693:7;18689:23;18685:32;18682:52;;;18730:1;18727;18720:12;18682:52;18770:9;18757:23;-1:-1:-1;;;;;18795:6:418;18792:30;18789:50;;;18835:1;18832;18825:12;18789:50;18858:82;18932:7;18923:6;18912:9;18908:22;18858:82;:::i;18951:418::-;19017:5;19065:4;19053:9;19048:3;19044:19;19040:30;19037:50;;;19083:1;19080;19073:12;19037:50;19116:2;19110:9;19158:4;19150:6;19146:17;19229:6;19217:10;19214:22;-1:-1:-1;;;;;19181:10:418;19178:34;19175:62;19172:88;;;19240:18;;:::i;:::-;19276:2;19269:22;19339:23;;19324:39;;-1:-1:-1;19309:6:418;18951:418;-1:-1:-1;18951:418:418:o;19374:612::-;19482:6;19535:2;19523:9;19514:7;19510:23;19506:32;19503:52;;;19551:1;19548;19541:12;19503:52;19577:22;;:::i;:::-;19622:57;19671:7;19660:9;19622:57;:::i;:::-;19615:5;19608:72;19732:2;19721:9;19717:18;19704:32;19745:33;19770:7;19745:33;:::i;:::-;19805:2;19794:14;;19787:31;19870:2;19855:18;;19842:32;19883:33;19842:32;19883:33;:::i;:::-;19943:2;19932:14;;19925:31;19936:5;19374:612;-1:-1:-1;;;19374:612:418:o;20390:250::-;20475:1;20485:113;20499:6;20496:1;20493:13;20485:113;;;20575:11;;;20569:18;20556:11;;;20549:39;20521:2;20514:10;20485:113;;;-1:-1:-1;;20632:1:418;20614:16;;20607:27;20390:250::o;20645:271::-;20687:3;20725:5;20719:12;20752:6;20747:3;20740:19;20768:76;20837:6;20830:4;20825:3;20821:14;20814:4;20807:5;20803:16;20768:76;:::i;:::-;20898:2;20877:15;-1:-1:-1;;20873:29:418;20864:39;;;;20905:4;20860:50;;20645:271;-1:-1:-1;;20645:271:418:o;20921:220::-;21070:2;21059:9;21052:21;21033:4;21090:45;21131:2;21120:9;21116:18;21108:6;21090:45;:::i;21146:247::-;21205:6;21258:2;21246:9;21237:7;21233:23;21229:32;21226:52;;;21274:1;21271;21264:12;21226:52;21313:9;21300:23;21332:31;21357:5;21332:31;:::i;21398:439::-;21451:3;21489:5;21483:12;21516:6;21511:3;21504:19;21542:4;21571;21566:3;21562:14;21555:21;;21610:4;21603:5;21599:16;21633:1;21643:169;21657:6;21654:1;21651:13;21643:169;;;21718:13;;21706:26;;21752:12;;;;21787:15;;;;21679:1;21672:9;21643:169;;;-1:-1:-1;21828:3:418;;21398:439;-1:-1:-1;;;;;21398:439:418:o;21842:1081::-;21931:5;21925:12;21920:3;21913:25;21895:3;21957:4;22007:2;22000:5;21996:14;21990:21;22041:4;22036:2;22031:3;22027:12;22020:26;22083:12;22077:19;22128:4;22121;22116:3;22112:14;22105:28;22154:59;22208:3;22203;22199:13;22183:14;22154:59;:::i;:::-;22250:21;;;22244:28;-1:-1:-1;;22334:14:418;;;22330:23;;22323:4;22314:14;;22307:47;22403:21;;22433:20;;;22507:23;;;;-1:-1:-1;22548:1:418;;22291:7;;22471:13;;;;22558:175;22572:6;22569:1;22566:13;22558:175;;;22635:13;;22621:28;;22708:15;;;;22594:1;22587:9;;;;;22671:14;;;;22558:175;;;22562:3;22788:4;22774:12;22770:23;22764:30;22742:52;;22846:2;22840:3;22833:5;22829:15;22825:24;22819:3;22814;22810:13;22803:47;22866:51;22911:5;22895:14;22866:51;:::i;:::-;22859:58;21842:1081;-1:-1:-1;;;;;;;;;21842:1081:418:o;22928:1146::-;23111:2;23100:9;23093:21;23074:4;23149:6;23143:13;23192:4;23187:2;23176:9;23172:18;23165:32;23234:12;23228:19;23284:4;23278:3;23267:9;23263:19;23256:33;23312:65;23372:3;23361:9;23357:19;23341:14;23312:65;:::i;:::-;23298:79;;23432:2;23418:12;23414:21;23408:28;23505:3;23501:8;23489:9;23481:6;23477:22;23473:37;23467:3;23456:9;23452:19;23445:66;23534:52;23579:6;23563:14;23534:52;:::i;:::-;23520:66;;;23647:4;23633:12;23629:23;23623:30;23617:3;23606:9;23602:19;23595:59;23729:4;23715:12;23711:23;23705:30;23698:38;23691:46;23685:3;23674:9;23670:19;23663:75;23787:2;23779:6;23775:15;23769:22;23747:44;;23800:56;23850:4;23839:9;23835:20;23819:14;-1:-1:-1;;;;;7347:31:418;7335:44;;7281:104;23800:56;23912:4;23904:6;23900:17;23894:24;23887:4;23876:9;23872:20;23865:54;23975:4;23967:6;23963:17;23957:24;23950:4;23939:9;23935:20;23928:54;24038:4;24030:6;24026:17;24020:24;24013:4;24002:9;23998:20;23991:54;24062:6;24054:14;;;;22928:1146;;;;:::o;24897:272::-;25099:3;25084:19;;25112:51;25088:9;25145:6;25112:51;:::i;26158:255::-;26250:6;26303:2;26291:9;26282:7;26278:23;26274:32;26271:52;;;26319:1;26316;26309:12;26271:52;26342:65;26399:7;26388:9;26342:65;:::i;26418:679::-;26479:5;26527:4;26515:9;26510:3;26506:19;26502:30;26499:50;;;26545:1;26542;26535:12;26499:50;26578:2;26572:9;26620:4;26612:6;26608:17;26691:6;26679:10;26676:22;-1:-1:-1;;;;;26643:10:418;26640:34;26637:62;26634:88;;;26702:18;;:::i;:::-;26742:10;26738:2;26731:22;;26771:6;26762:15;;26814:9;26801:23;26793:6;26786:39;26886:2;26875:9;26871:18;26858:32;26853:2;26845:6;26841:15;26834:57;26952:2;26941:9;26937:18;26924:32;26919:2;26911:6;26907:15;26900:57;27018:2;27007:9;27003:18;26990:32;26985:2;26977:6;26973:15;26966:57;27085:3;27074:9;27070:19;27057:33;27051:3;27043:6;27039:16;27032:59;;26418:679;;;;:::o;27102:489::-;27170:5;27218:6;27206:9;27201:3;27197:19;27193:32;27190:52;;;27238:1;27235;27228:12;27190:52;27260:22;;:::i;:::-;27251:31;;27319:9;27306:23;27338:33;27363:7;27338:33;:::i;:::-;27380:22;;27434:57;27487:3;27482:2;27467:18;;27434:57;:::i;:::-;27429:2;27422:5;27418:14;27411:81;27526:58;27580:3;27574;27563:9;27559:19;27526:58;:::i;27596:482::-;27706:6;27759:3;27747:9;27738:7;27734:23;27730:33;27727:53;;;27776:1;27773;27766:12;27727:53;27802:22;;:::i;:::-;27847:59;27898:7;27887:9;27847:59;:::i;:::-;27840:5;27833:74;27959:3;27948:9;27944:19;27931:33;27973;27998:7;27973:33;:::i;28348:174::-;28426:5;28471:3;28462:6;28457:3;28453:16;28449:26;28446:46;;;28488:1;28485;28478:12;28527:893;28803:6;28811;28819;28827;28835;28888:3;28876:9;28867:7;28863:23;28859:33;28856:53;;;28905:1;28902;28895:12;28856:53;28944:9;28931:23;28963:31;28988:5;28963:31;:::i;:::-;29013:5;-1:-1:-1;29037:81:418;29110:7;29105:2;29090:18;;29037:81;:::i;:::-;29027:91;;29137:82;29211:7;29205:3;29194:9;29190:19;29137:82;:::i;:::-;29127:92;;29238:75;29305:7;29299:3;29288:9;29284:19;29238:75;:::i;:::-;29228:85;;29332:82;29406:7;29400:3;29389:9;29385:19;29332:82;:::i;:::-;29322:92;;28527:893;;;;;;;;:::o;29425:626::-;29522:6;29530;29583:2;29571:9;29562:7;29558:23;29554:32;29551:52;;;29599:1;29596;29589:12;29551:52;29639:9;29626:23;-1:-1:-1;;;;;29709:2:418;29701:6;29698:14;29695:34;;;29725:1;29722;29715:12;29695:34;29763:6;29752:9;29748:22;29738:32;;29808:7;29801:4;29797:2;29793:13;29789:27;29779:55;;29830:1;29827;29820:12;29779:55;29870:2;29857:16;29896:2;29888:6;29885:14;29882:34;;;29912:1;29909;29902:12;29882:34;29965:7;29960:2;29950:6;29947:1;29943:14;29939:2;29935:23;29931:32;29928:45;29925:65;;;29986:1;29983;29976:12;29925:65;30017:2;30009:11;;;;;30039:6;;-1:-1:-1;29425:626:418;;-1:-1:-1;;;;29425:626:418:o;30056:801::-;30216:4;30245:2;30285;30274:9;30270:18;30315:2;30304:9;30297:21;30338:6;30373;30367:13;30404:6;30396;30389:22;30442:2;30431:9;30427:18;30420:25;;30504:2;30494:6;30491:1;30487:14;30476:9;30472:30;30468:39;30454:53;;30542:2;30534:6;30530:15;30563:1;30573:255;30587:6;30584:1;30581:13;30573:255;;;30680:2;30676:7;30664:9;30656:6;30652:22;30648:36;30643:3;30636:49;30708:40;30741:6;30732;30726:13;30708:40;:::i;:::-;30698:50;-1:-1:-1;30806:12:418;;;;30771:15;;;;30609:1;30602:9;30573:255;;;-1:-1:-1;30845:6:418;;30056:801;-1:-1:-1;;;;;;;30056:801:418:o;30862:323::-;30948:5;30942:12;30937:3;30930:25;31004:4;30997:5;30993:16;30987:23;30980:4;30975:3;30971:14;30964:47;31060:4;31053:5;31049:16;31043:23;31036:4;31031:3;31027:14;31020:47;31116:4;31109:5;31105:16;31099:23;31092:4;31087:3;31083:14;31076:47;31172:4;31165:5;31161:16;31155:23;31148:4;31143:3;31139:14;31132:47;;;30862:323::o;31190:551::-;31435:13;;-1:-1:-1;;;;;31431:39:418;31413:58;;31518:4;31506:17;;;31500:24;31400:3;31385:19;;;31533:68;;31580:20;;31500:24;31533:68;:::i;:::-;;31650:4;31642:6;31638:17;31632:24;31665:70;31729:4;31718:9;31714:20;31698:14;31665:70;:::i;32042:266::-;31828:12;;-1:-1:-1;;;;;31824:38:418;31812:51;;31912:4;31901:16;;;31895:23;31879:14;;;31872:47;31968:4;31957:16;;;31951:23;31935:14;;;31928:47;32024:4;32013:16;;;32007:23;31991:14;;;31984:47;32240:3;32225:19;;32253:49;31746:291;33249:210;33351:6;33404:3;33392:9;33383:7;33379:23;33375:33;33372:53;;;33421:1;33418;33411:12;33464:159;33528:5;33573:2;33564:6;33559:3;33555:16;33551:25;33548:45;;;33589:1;33586;33579:12;33628:248;33720:6;33773:2;33761:9;33752:7;33748:23;33744:32;33741:52;;;33789:1;33786;33779:12;33741:52;33812:58;33862:7;33851:9;33812:58;:::i;33881:500::-;33942:5;33990:4;33978:9;33973:3;33969:19;33965:30;33962:50;;;34008:1;34005;33998:12;33962:50;34030:22;;:::i;:::-;34021:31;;34089:9;34076:23;34108:33;34133:7;34108:33;:::i;:::-;34150:22;;34232:2;34217:18;;;34204:32;34188:14;;;34181:56;34289:2;34274:18;;34261:32;34302:33;34261:32;34302:33;:::i;34386:399::-;34457:5;34505:4;34493:9;34488:3;34484:19;34480:30;34477:50;;;34523:1;34520;34513:12;34477:50;34545:22;;:::i;:::-;34536:31;;34590:48;34634:3;34623:9;34590:48;:::i;:::-;34583:5;34576:63;34691:2;34680:9;34676:18;34663:32;34704:33;34729:7;34704:33;:::i;34790:264::-;34893:6;34946:3;34934:9;34925:7;34921:23;34917:33;34914:53;;;34963:1;34960;34953:12;34914:53;34986:62;35040:7;35029:9;34986:62;:::i;36092:599::-;36323:4;36365:3;36354:9;36350:19;36342:27;;36396:6;36385:9;36378:25;36452:6;36439:20;36434:2;36423:9;36419:18;36412:48;36521:2;36513:6;36509:15;36496:29;36491:2;36480:9;36476:18;36469:57;36573:2;36565:6;36561:15;36548:29;36586:31;36611:5;36586:31;:::i;:::-;-1:-1:-1;;;;;36653:31:418;36648:2;36633:18;;;;36626:59;;;;36092:599;;-1:-1:-1;;36092:599:418:o;36975:1072::-;37243:6;37232:9;37225:25;37286:2;37281;37270:9;37266:18;37259:30;37206:4;37337:6;37324:20;37424:2;37420:7;37411:6;37395:14;37391:27;37387:41;37367:18;37363:66;37353:94;;37443:1;37440;37433:12;37353:94;37469:31;;37577:2;37566:14;;;37523:19;-1:-1:-1;;;;;37592:30:418;;37589:50;;;37635:1;37632;37625:12;37589:50;37684:6;37668:14;37664:27;37655:7;37651:41;37648:61;;;37705:1;37702;37695:12;37648:61;37745:2;37740;37729:9;37725:18;37718:30;37785:6;37779:3;37768:9;37764:19;37757:35;37844:6;37835:7;37829:3;37818:9;37814:19;37801:50;37901:1;37895:3;37886:6;37875:9;37871:22;37867:32;37860:43;37964:2;37956:6;37952:15;37939:29;37934:2;37923:9;37919:18;37912:57;38037:3;38030:2;38026:7;38021:2;38013:6;38009:15;38005:29;37994:9;37990:45;37986:55;37978:63;;;;36975:1072;;;;;:::o;38052:242::-;38144:6;38197:2;38185:9;38176:7;38172:23;38168:32;38165:52;;;38213:1;38210;38203:12;38165:52;38236;38280:7;38269:9;38236:52;:::i;38299:950::-;38601:6;38590:9;38583:25;38644:2;38639;38628:9;38624:18;38617:30;38564:4;38682:6;38676:13;38725:2;38720;38709:9;38705:18;38698:30;38771:12;38765:19;38759:3;38748:9;38744:19;38737:48;38860:2;38846:12;38842:21;38836:28;38829:36;38822:44;38816:3;38805:9;38801:19;38794:73;38942:2;38928:12;38924:21;38918:28;38911:36;38904:44;38898:3;38887:9;38883:19;38876:73;39004:4;38990:12;38986:23;38980:30;38958:52;;39047:3;39041;39030:9;39026:19;39019:32;39071:65;39131:3;39120:9;39116:19;39100:14;39071:65;:::i;:::-;39196:2;39184:15;;;;39178:22;-1:-1:-1;;;;;39174:48:418;39167:4;39152:20;;;;39145:78;;;;-1:-1:-1;39060:76:418;;38299:950;-1:-1:-1;;38299:950:418:o;39540:277::-;39627:6;39680:2;39668:9;39659:7;39655:23;39651:32;39648:52;;;39696:1;39693;39686:12;39648:52;39728:9;39722:16;39767:1;39760:5;39757:12;39747:40;;39783:1;39780;39773:12;39822:127;39883:10;39878:3;39874:20;39871:1;39864:31;39914:4;39911:1;39904:15;39938:4;39935:1;39928:15;39954:128;40021:9;;;40042:11;;;40039:37;;;40056:18;;:::i;40087:217::-;40127:1;40153;40143:132;;40197:10;40192:3;40188:20;40185:1;40178:31;40232:4;40229:1;40222:15;40260:4;40257:1;40250:15;40143:132;-1:-1:-1;40289:9:418;;40087:217::o;40524:670::-;40639:6;40692:3;40680:9;40671:7;40667:23;40663:33;40660:53;;;40709:1;40706;40699:12;40660:53;40735:22;;:::i;:::-;40786:9;40780:16;40773:5;40766:31;40850:2;40839:9;40835:18;40829:25;40824:2;40817:5;40813:14;40806:49;40908:2;40897:9;40893:18;40887:25;40882:2;40875:5;40871:14;40864:49;40966:2;40955:9;40951:18;40945:25;40940:2;40933:5;40929:14;40922:49;41025:3;41014:9;41010:19;41004:26;40998:3;40991:5;40987:15;40980:51;41076:3;41065:9;41061:19;41055:26;41090:33;41115:7;41090:33;:::i;:::-;41150:3;41139:15;;41132:32;41143:5;40524:670;-1:-1:-1;;;40524:670:418:o;41199:484::-;41290:12;;-1:-1:-1;;;;;41286:38:418;41274:51;;41374:4;41363:16;;;41357:23;41341:14;;;41334:47;41430:4;41419:16;;;41413:23;41397:14;;;41390:47;41486:4;41475:16;;;41469:23;41453:14;;;41446:47;41542:4;41531:16;;;41525:23;41509:14;;;41502:47;41312:3;41587:16;;;41581:23;41565:14;;;41558:47;41668:4;41657:16;;;41651:23;41644:31;41637:39;41621:14;;41614:63;41199:484::o;41688:360::-;41773:58;41827:3;41819:5;41813:12;41773:58;:::i;:::-;41877:4;41866:16;;41860:23;-1:-1:-1;;;;;41953:21:418;;;41946:4;41937:14;;41930:45;42030:4;42019:16;;;42013:23;42009:32;42000:6;41991:16;;;41984:58;41688:360::o;42053:427::-;42363:25;;;42350:3;42335:19;;42397:77;42470:2;42455:18;;42447:6;42397:77;:::i;42485:184::-;42555:6;42608:2;42596:9;42587:7;42583:23;42579:32;42576:52;;;42624:1;42621;42614:12;42576:52;-1:-1:-1;42647:16:418;;42485:184;-1:-1:-1;42485:184:418:o;43617:254::-;43761:9;43798:67;43850:14;43843:5;43798:67;:::i;43876:393::-;44162:25;;;44149:3;44134:19;;44196:67;44259:2;44244:18;;44236:6;44196:67;:::i;44274:545::-;44346:5;44394:4;44382:9;44377:3;44373:19;44369:30;44366:50;;;44412:1;44409;44402:12;44366:50;44434:22;;:::i;:::-;44425:31;;44486:9;44480:16;44505:33;44530:7;44505:33;:::i;:::-;44547:22;;44614:2;44599:18;;44593:25;44627:30;44593:25;44627:30;:::i;:::-;44689:7;44684:2;44677:5;44673:14;44666:31;;44750:2;44739:9;44735:18;44729:25;44724:2;44717:5;44713:14;44706:49;44808:2;44797:9;44793:18;44787:25;44782:2;44775:5;44771:14;44764:49;44274:545;;;;:::o;44824:785::-;44937:6;44990:3;44978:9;44969:7;44965:23;44961:33;44958:53;;;45007:1;45004;44997:12;44958:53;45033:22;;:::i;:::-;45078:63;45133:7;45122:9;45078:63;:::i;:::-;45071:5;45064:78;45187:3;45176:9;45172:19;45166:26;45201:33;45226:7;45201:33;:::i;:::-;45268:7;45261:4;45254:5;45250:16;45243:33;;45331:3;45320:9;45316:19;45310:26;45303:4;45296:5;45292:16;45285:52;45392:3;45381:9;45377:19;45371:26;45364:4;45357:5;45353:16;45346:52;45452:4;45441:9;45437:20;45431:27;45425:3;45418:5;45414:15;45407:52;45513:3;45502:9;45498:19;45492:26;45486:3;45479:5;45475:15;45468:51;45573:3;45562:9;45558:19;45552:26;45546:3;45539:5;45535:15;45528:51;45598:5;45588:15;;;44824:785;;;;:::o;45614:237::-;45746:9;45783:62;45830:14;45823:5;45783:62;:::i;46256:653::-;46370:6;46423:3;46411:9;46402:7;46398:23;46394:33;46391:53;;;46440:1;46437;46430:12;46391:53;46466:22;;:::i;:::-;46511:63;46566:7;46555:9;46511:63;:::i;:::-;46504:5;46497:78;46630:3;46619:9;46615:19;46609:26;46602:4;46595:5;46591:16;46584:52;46691:3;46680:9;46676:19;46670:26;46663:4;46656:5;46652:16;46645:52;46752:4;46741:9;46737:20;46731:27;46724:4;46717:5;46713:16;46706:53;46813:3;46802:9;46798:19;46792:26;46786:3;46779:5;46775:15;46768:51;46873:3;46862:9;46858:19;46852:26;46846:3;46839:5;46835:15;46828:51;46898:5;46888:15;;;46256:653;;;;:::o;46914:605::-;47214:25;;;47258:13;;47307:9;;47302:2;47287:18;;;47280:37;;;;47359:11;;;47353:18;47348:2;47333:18;;;47326:46;;;;47414:11;;;47408:18;47403:2;47388:18;;47381:46;47474:15;47468:22;-1:-1:-1;;;;;47464:48:418;47458:3;47443:19;;47436:77;47201:3;47186:19;;46914:605::o;47874:482::-;47992:5;47979:19;47974:3;47967:32;48047:4;48040:5;48036:16;48023:30;48062:33;48087:7;48062:33;:::i;:::-;-1:-1:-1;;;;;48127:33:418;48120:4;48111:14;;48104:57;48217:4;48206:16;;;48193:30;48177:14;;;48170:54;48280:4;48269:16;;;48256:30;48240:14;;;48233:54;48343:4;48332:16;;;48319:30;48303:14;;48296:54;47874:482::o;48361:435::-;48671:25;;;48658:3;48643:19;;48705:85;48786:2;48771:18;;48763:6;48705:85;:::i;48801:306::-;48889:6;48897;48905;48958:2;48946:9;48937:7;48933:23;48929:32;48926:52;;;48974:1;48971;48964:12;48926:52;49003:9;48997:16;48987:26;;49053:2;49042:9;49038:18;49032:25;49022:35;;49097:2;49086:9;49082:18;49076:25;49066:35;;48801:306;;;;;:::o;49112:507::-;49450:25;;;49437:3;49422:19;;49484:85;49565:2;49550:18;;49542:6;49484:85;:::i;:::-;49606:6;49600:3;49589:9;49585:19;49578:35;49112:507;;;;;;:::o;49948:1304::-;50022:3;50066:5;50060:12;50093:4;50088:3;50081:17;50136:12;50130:19;50123:4;50118:3;50114:14;50107:43;50169:4;50228:2;50214:12;50210:21;50204:28;50182:50;;50262:4;50257:2;50252:3;50248:12;50241:26;50304:14;50298:21;50350:2;50344:3;50339;50335:13;50328:25;50374:59;50428:3;50423;50419:13;50403:14;50374:59;:::i;:::-;50470:23;;;50464:30;-1:-1:-1;;50556:14:418;;;50552:23;;50546:3;50537:13;;50530:46;50625:21;;50655:20;;;50729:23;;;;-1:-1:-1;50770:1:418;;50513:8;;50693:13;;;;50780:175;50794:6;50791:1;50788:13;50780:175;;;50857:13;;50843:28;;50930:15;;;;50816:1;50809:9;;;;;50893:14;;;;50780:175;;;50784:3;51012:4;50996:14;50992:25;50986:32;50964:54;;51070:2;51064:3;51057:5;51053:15;51049:24;51043:3;51038;51034:13;51027:47;51096:51;51141:5;51125:14;51096:51;:::i;:::-;51187:14;;;51181:21;-1:-1:-1;;;;;51177:47:418;51163:12;;;;51156:69;;;;-1:-1:-1;51083:64:418;;49948:1304;-1:-1:-1;;;;;49948:1304:418:o;51257:438::-;51549:6;51538:9;51531:25;51592:2;51587;51576:9;51572:18;51565:30;51512:4;51612:77;51685:2;51674:9;51670:18;51662:6;51612:77;:::i;52977:370::-;53249:25;;;53236:3;53221:19;;53283:58;53337:2;53322:18;;53314:6;31828:12;;-1:-1:-1;;;;;31824:38:418;31812:51;;31912:4;31901:16;;;31895:23;31879:14;;;31872:47;31968:4;31957:16;;;31951:23;31935:14;;;31928:47;32024:4;32013:16;;;32007:23;31991:14;;31984:47;31746:291;53784:598;53900:6;53953:3;53941:9;53932:7;53928:23;53924:33;53921:53;;;53970:1;53967;53960:12;53921:53;53996:22;;:::i;:::-;54047:9;54041:16;54034:5;54027:31;54111:2;54100:9;54096:18;54090:25;54085:2;54078:5;54074:14;54067:49;54169:2;54158:9;54154:18;54148:25;54143:2;54136:5;54132:14;54125:49;54227:2;54216:9;54212:18;54206:25;54201:2;54194:5;54190:14;54183:49;54286:3;54275:9;54271:19;54265:26;54259:3;54252:5;54248:15;54241:51;54346:3;54335:9;54331:19;54325:26;54319:3;54312:5;54308:15;54301:51;54371:5;54361:15;;;53784:598;;;;:::o;54387:129::-;-1:-1:-1;;;;;54465:5:418;54461:30;54454:5;54451:41;54441:69;;54506:1;54503;54496:12;54521:502;54633:6;54686:2;54674:9;54665:7;54661:23;54657:32;54654:52;;;54702:1;54699;54692:12;54654:52;54728:22;;:::i;:::-;54780:9;54774:16;54799:33;54824:7;54799:33;:::i;:::-;54841:22;;54908:2;54893:18;;54887:25;54921:32;54887:25;54921:32;:::i;55028:518::-;55245:4;55287:2;55276:9;55272:18;55264:26;;55317:6;55306:9;55299:25;55373:6;55360:20;55355:2;55344:9;55340:18;55333:48;55428:2;55420:6;55416:15;55403:29;55441:31;55466:5;55441:31;:::i;:::-;-1:-1:-1;;;;;55508:31:418;55503:2;55488:18;;;;55481:59;;;;55028:518;;-1:-1:-1;;55028:518:418:o;55551:784::-;55806:4;55848:3;55837:9;55833:19;55825:27;;55879:6;55868:9;55861:25;55911:6;55905:13;55954:1;55950;55945:3;55941:11;55937:19;56007:2;56002;55996:9;55992:18;55987:2;55976:9;55972:18;55965:46;56054:2;56050;56046:11;56040:18;56067:66;56129:2;56118:9;56114:18;56100:12;56067:66;:::i;:::-;;56178:2;56174;56170:11;56164:18;56142:40;;56191:69;56255:3;56244:9;56240:19;56224:14;56191:69;:::i;:::-;56325:2;56319;56311:6;56307:15;56301:22;56297:31;56291:3;56280:9;56276:19;56269:60;;;55551:784;;;;;:::o;56340:247::-;56435:6;56488:2;56476:9;56467:7;56463:23;56459:32;56456:52;;;56504:1;56501;56494:12;56456:52;56527:54;56573:7;56562:9;56527:54;:::i;56592:540::-;56705:5;56692:19;56687:3;56680:32;56768:4;56761:5;56757:16;56744:30;56737:4;56732:3;56728:14;56721:54;56831:4;56824:5;56820:16;56807:30;56800:4;56795:3;56791:14;56784:54;56894:4;56887:5;56883:16;56870:30;56863:4;56858:3;56854:14;56847:54;56957:4;56950:5;56946:16;56933:30;56926:4;56921:3;56917:14;56910:54;57012:4;57005:5;57001:16;56988:30;57027:33;57052:7;57027:33;:::i;:::-;-1:-1:-1;;;;;57092:33:418;57113:3;57076:14;;;;57069:57;;;;-1:-1:-1;56592:540:418:o;57584:382::-;57697:5;57684:19;57712:33;57737:7;57712:33;:::i;:::-;-1:-1:-1;;;;;57766:33:418;57754:46;;57848:4;57837:16;;57824:30;57863:32;57824:30;57863:32;:::i;:::-;-1:-1:-1;;;;;57931:7:418;57927:32;57920:4;57915:3;57911:14;57904:56;;57584:382;;:::o;57971:966::-;58082:5;58069:19;58097:33;58122:7;58097:33;:::i;:::-;-1:-1:-1;;;;;58189:16:418;;;58177:29;;58254:4;58243:16;;58230:30;;58269:33;58230:30;58269:33;:::i;:::-;58334:16;;;58327:4;58318:14;;58311:40;58399:4;58388:16;;58375:30;;58414:33;58375:30;58414:33;:::i;:::-;58479:16;;;58472:4;58463:14;;58456:40;58544:4;58533:16;;58520:30;;58559:33;58520:30;58559:33;:::i;:::-;58624:16;;;58617:4;58608:14;;58601:40;58689:4;58678:16;;58665:30;;58704:33;58665:30;58704:33;:::i;:::-;58769:16;;;58762:4;58753:14;;58746:40;58834:4;58823:16;;58810:30;;58849:33;58810:30;58849:33;:::i;:::-;58927:2;58918:7;58914:16;58907:4;58902:3;58898:14;58891:40;;;57971:966;;:::o;58942:1126::-;59616:25;;;-1:-1:-1;;;;;59677:32:418;;59672:2;59657:18;;59650:60;59603:3;59588:19;;59719:80;59795:2;59780:18;;59772:6;59719:80;:::i;:::-;57238:19;;59885:3;59870:19;;57226:32;57314:4;57303:16;;57290:30;57274:14;;;57267:54;57377:4;57366:16;;57353:30;57337:14;;;57330:54;57440:4;57429:16;;57416:30;57400:14;;;57393:54;57503:4;57492:16;;57479:30;57463:14;;;57456:54;57566:4;57555:16;;57542:30;57526:14;;;57519:54;59899:78;59972:3;59961:9;59957:19;59949:6;59899:78;:::i;:::-;59986:76;60057:3;60046:9;60042:19;60034:6;59986:76;:::i;:::-;58942:1126;;;;;;;;;:::o;60073:1029::-;60719:25;;;60706:3;60691:19;;60753:80;60829:2;60814:18;;60806:6;60753:80;:::i;:::-;57238:19;;60919:3;60904:19;;57226:32;57314:4;57303:16;;57290:30;57274:14;;;57267:54;57377:4;57366:16;;57353:30;57337:14;;;57330:54;57440:4;57429:16;;57416:30;57400:14;;;57393:54;57503:4;57492:16;;57479:30;57463:14;;;57456:54;57566:4;57555:16;;57542:30;57526:14;;;57519:54;60933:78;61006:3;60995:9;60991:19;60983:6;60933:78;:::i;:::-;61020:76;61091:3;61080:9;61076:19;61068:6;61020:76;:::i;:::-;60073:1029;;;;;;;;:::o;62246:390::-;62526:25;;;62513:3;62498:19;;62560:70;62626:2;62611:18;;62603:6;62089:19;;62077:32;;62165:4;62154:16;;;62141:30;62125:14;;;62118:54;62228:4;62217:16;;;62204:30;62188:14;;62181:54;61999:242;62641:462;62949:25;;;62936:3;62921:19;;62983:70;63049:2;63034:18;;63026:6;62089:19;;62077:32;;62165:4;62154:16;;;62141:30;62125:14;;;62118:54;62228:4;62217:16;;;62204:30;62188:14;;62181:54;61999:242;62983:70;63090:6;63084:3;63073:9;63069:19;63062:35;62641:462;;;;;;:::o;63108:245::-;63175:6;63228:2;63216:9;63207:7;63203:23;63199:32;63196:52;;;63244:1;63241;63234:12;63196:52;63276:9;63270:16;63295:28;63317:5;63295:28;:::i;63358:258::-;63458:6;63511:3;63499:9;63490:7;63486:23;63482:33;63479:53;;;63528:1;63525;63518:12;63479:53;63551:59;63602:7;63591:9;63551:59;:::i;64354:406::-;64650:25;;;64637:3;64622:19;;64684:70;64750:2;64735:18;;64727:6;64073:12;;64148:9;;-1:-1:-1;;;;;64144:18:418;;;64132:31;;64209:4;64201:13;;;64195:20;64179:14;;;64172:44;64266:4;64258:13;;;64252:20;64248:29;;64232:14;;;64225:53;;;;64320:16;;64314:23;64310:32;64303:4;64294:14;;;64287:56;63985:364;65379:253;65477:6;65530:2;65518:9;65509:7;65505:23;65501:32;65498:52;;;65546:1;65543;65536:12;65498:52;65569:57;65618:7;65607:9;65569:57;:::i;65916:416::-;66005:1;66042:5;66005:1;66056:270;66077:7;66067:8;66064:21;66056:270;;;66136:4;66132:1;66128:6;66124:17;66118:4;66115:27;66112:53;;;66145:18;;:::i;:::-;66195:7;66185:8;66181:22;66178:55;;;66215:16;;;;66178:55;66294:22;;;;66254:15;;;;66056:270;;;66060:3;65916:416;;;;;:::o;66337:806::-;66386:5;66416:8;66406:80;;-1:-1:-1;66457:1:418;66471:5;;66406:80;66505:4;66495:76;;-1:-1:-1;66542:1:418;66556:5;;66495:76;66587:4;66605:1;66600:59;;;;66673:1;66668:130;;;;66580:218;;66600:59;66630:1;66621:10;;66644:5;;;66668:130;66705:3;66695:8;66692:17;66689:43;;;66712:18;;:::i;:::-;-1:-1:-1;;66768:1:418;66754:16;;66783:5;;66580:218;;66882:2;66872:8;66869:16;66863:3;66857:4;66854:13;66850:36;66844:2;66834:8;66831:16;66826:2;66820:4;66817:12;66813:35;66810:77;66807:159;;;-1:-1:-1;66919:19:418;;;66951:5;;66807:159;66998:34;67023:8;67017:4;66998:34;:::i;:::-;67068:6;67064:1;67060:6;67056:19;67047:7;67044:32;67041:58;;;67079:18;;:::i;:::-;67117:20;;66337:806;-1:-1:-1;;;66337:806:418:o;67148:131::-;67208:5;67237:36;67264:8;67258:4;67237:36;:::i;67284:168::-;67357:9;;;67388;;67405:15;;;67399:22;;67385:37;67375:71;;67426:18;;:::i;67457:273::-;67525:6;67578:2;67566:9;67557:7;67553:23;67549:32;67546:52;;;67594:1;67591;67584:12;67546:52;67626:9;67620:16;67676:4;67669:5;67665:16;67658:5;67655:27;67645:55;;67696:1;67693;67686:12;67735:140;67793:5;67822:47;67863:4;67853:8;67849:19;67843:4;67822:47;:::i;68069:127::-;68130:10;68125:3;68121:20;68118:1;68111:31;68161:4;68158:1;68151:15;68185:4;68182:1;68175:15;68201:521;68278:4;68284:6;68344:11;68331:25;68438:2;68434:7;68423:8;68407:14;68403:29;68399:43;68379:18;68375:68;68365:96;;68457:1;68454;68447:12;68365:96;68484:33;;68536:20;;;-1:-1:-1;;;;;;68568:30:418;;68565:50;;;68611:1;68608;68601:12;68565:50;68644:4;68632:17;;-1:-1:-1;68675:14:418;68671:27;;;68661:38;;68658:58;;;68712:1;68709;68702:12;68658:58;68201:521;;;;;:::o;69228:287::-;69357:3;69395:6;69389:13;69411:66;69470:6;69465:3;69458:4;69450:6;69446:17;69411:66;:::i;:::-;69493:16;;;;;69228:287;-1:-1:-1;;69228:287:418:o",
    "linkReferences": {
      "src/market/libraries/CapsLibrary.sol": {
        "CapsLibrary": [
          { "start": 4826, "length": 20 },
          { "start": 6672, "length": 20 },
          { "start": 15768, "length": 20 }
        ]
      },
      "src/market/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 4115, "length": 20 },
          { "start": 7705, "length": 20 },
          { "start": 7866, "length": 20 },
          { "start": 8998, "length": 20 },
          { "start": 10878, "length": 20 }
        ]
      },
      "src/market/libraries/OfferLibrary.sol": {
        "OfferLibrary": [
          { "start": 5034, "length": 20 },
          { "start": 12989, "length": 20 }
        ]
      },
      "src/market/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 4723, "length": 20 },
          { "start": 5603, "length": 20 },
          { "start": 5938, "length": 20 },
          { "start": 6413, "length": 20 },
          { "start": 11321, "length": 20 },
          { "start": 11394, "length": 20 },
          { "start": 11988, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 7529, "length": 20 },
          { "start": 7628, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 4459, "length": 20 },
          { "start": 4561, "length": 20 },
          { "start": 5188, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 12161, "length": 20 },
          { "start": 12260, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 5713, "length": 20 },
          { "start": 5812, "length": 20 }
        ]
      },
      "src/market/libraries/actions/CopyLimitOrders.sol": {
        "CopyLimitOrders": [
          { "start": 9731, "length": 20 },
          { "start": 9830, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 13046, "length": 20 },
          { "start": 13145, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 10148, "length": 20 },
          { "start": 10281, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 11640, "length": 20 },
          { "start": 11739, "length": 20 },
          { "start": 11864, "length": 20 }
        ]
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 6196, "length": 20 },
          { "start": 6298, "length": 20 },
          { "start": 6556, "length": 20 }
        ]
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "PartialRepay": [
          { "start": 3357, "length": 20 },
          { "start": 3456, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 9477, "length": 20 },
          { "start": 9575, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 7336, "length": 20 },
          { "start": 7470, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 7095, "length": 20 },
          { "start": 7194, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5445, "length": 20 },
          { "start": 11055, "length": 20 },
          { "start": 11157, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 3878, "length": 20 },
          { "start": 3977, "length": 20 }
        ]
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3616, "length": 20 },
          { "start": 3715, "length": 20 },
          { "start": 4339, "length": 20 },
          { "start": 9232, "length": 20 },
          { "start": 9364, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 12319, "length": 20 },
          { "start": 12418, "length": 20 }
        ]
      }
    },
    "immutableReferences": {
      "50164": [
        { "start": 14414, "length": 32 },
        { "start": 14455, "length": 32 },
        { "start": 14815, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": "3746f858",
    "buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": "53e043d4",
    "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "19a7359b",
    "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": "1fcd4a34",
    "claim((uint256))": "f45bf01c",
    "collateralRatio(address)": "ca40742c",
    "compensate((uint256,uint256,uint256))": "8e572776",
    "compensateOnBehalfOf(((uint256,uint256,uint256),address))": "3ae6d7c3",
    "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": "f052e7a4",
    "copyLimitOrdersOnBehalfOf(((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))": "8628babd",
    "data()": "73d4a13a",
    "debtTokenAmountToCollateralTokenAmount(uint256)": "1970e5ea",
    "deposit((address,uint256,address))": "0cf8542f",
    "depositOnBehalfOf(((address,uint256,address),address))": "fa823af5",
    "feeConfig()": "1e5eb1d0",
    "getBorrowOfferAPR(address,uint256)": "f85c3cd4",
    "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "2ed28ba2",
    "getCreditPosition(uint256)": "76c1b82f",
    "getDebtPosition(uint256)": "b5ec7487",
    "getDebtPositionAssignedCollateral(uint256)": "54137c7e",
    "getLoanOfferAPR(address,uint256)": "2cc884c5",
    "getLoanStatus(uint256)": "1c4fd41c",
    "getPositionsCount()": "1ca3b0cb",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "37501921",
    "getSwapFee(uint256,uint256)": "2c60185c",
    "getUserCopyLimitOrders(address)": "b36116f6",
    "getUserView(address)": "5cbc51eb",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,(uint256,uint256,uint256,uint256,uint256,address),(uint256,uint256,uint256,uint256,uint256,uint256),(address,uint64),(address,address,address,address,address,address))": "a4752076",
    "isCreditPositionId(uint256)": "ccc96815",
    "isDebtPositionId(uint256)": "64eb0a71",
    "isDebtPositionLiquidatable(uint256)": "e5af06ce",
    "liquidate((uint256,uint256,uint256))": "e05001f5",
    "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": "3e3c119b",
    "multicall(bytes[])": "ac9650d8",
    "oracle()": "7dc0d1d0",
    "partialRepay((uint256,uint256,address))": "02f2855a",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proxiableUUID()": "52d1902d",
    "reinitialize(address)": "f7e7d1fd",
    "renounceRole(bytes32,address)": "36568abe",
    "repay((uint256,address))": "7f417c06",
    "revokeRole(bytes32,address)": "d547741f",
    "riskConfig()": "7c90a6ca",
    "selfLiquidate((uint256))": "fd17174a",
    "selfLiquidateOnBehalfOf(((uint256),address,address))": "536b9c79",
    "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": "ccd8d4d1",
    "sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": "4fd9a8a5",
    "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "d8d933a5",
    "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": "c73d9833",
    "setUserConfiguration((uint256,bool,bool,uint256[]))": "2e106f21",
    "setUserConfigurationOnBehalfOf(((uint256,bool,bool,uint256[]),address))": "134f3f96",
    "setVariablePoolBorrowRate(uint128)": "4cbd882c",
    "sizeFactory()": "fa7a5b10",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpause()": "3f4ba83a",
    "updateConfig((string,uint256))": "0317b9df",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "version()": "54fd4d50",
    "withdraw((address,uint256,address))": "2b4c9a20",
    "withdrawOnBehalfOf(((address,uint256,address),address))": "f54ae18b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"}],\"name\":\"INVALID_MARKET\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"crBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crAfter\",\"type\":\"uint256\"}],\"name\":\"MUST_IMPROVE_COLLATERAL_RATIO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_TENOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldBorrowRate\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newBorrowRate\",\"type\":\"uint128\"}],\"name\":\"VariablePoolBorrowRateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditLimitOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimitOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditMarketOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarketOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"compensate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct CompensateOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"compensateOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct CopyLimitOrdersParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"copyLimitOrders\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct CopyLimitOrdersParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct CopyLimitOrdersOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"copyLimitOrdersOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nextDebtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextCreditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableScaledTokenV1_5\",\"name\":\"borrowAToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"debtToken\",\"type\":\"address\"},{\"internalType\":\"contract IPool\",\"name\":\"variablePool\",\"type\":\"address\"}],\"internalType\":\"struct DataView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowATokenAmount\",\"type\":\"uint256\"}],\"name\":\"debtTokenAmountToCollateralTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct DepositOnBehalfOfParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"depositOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getBorrowOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getBuyCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCreditMarket.SwapDataBuyCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"getCreditPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"futureValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndexAtRepayment\",\"type\":\"uint256\"}],\"internalType\":\"struct DebtPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPositionAssignedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getLoanOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"getLoanStatus\",\"outputs\":[{\"internalType\":\"enum LoanStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPositionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getSellCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct SellCreditMarket.SwapDataSellCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getSwapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCopyLimitOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct UserCopyLimitOrders\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserView\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"loanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"borrowOffer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"}],\"internalType\":\"struct User\",\"name\":\"user\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct UserView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"f\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowAToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"r\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variablePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowATokenV1_5\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sizeFactory\",\"type\":\"address\"}],\"internalType\":\"struct InitializeDataParams\",\"name\":\"d\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"isCreditPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionLiquidatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateWithReplacementParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidateWithReplacement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitBorrowToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct PartialRepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"partialRepay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISizeFactory\",\"name\":\"_sizeFactory\",\"type\":\"address\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct RepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowAToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowATokenCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"selfLiquidate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct SelfLiquidateOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"selfLiquidateOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditLimitOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimitOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditMarketOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarketOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setUserConfiguration\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SetUserConfigurationOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"setUserConfigurationOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"}],\"name\":\"setVariablePoolBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeFactory\",\"outputs\":[{\"internalType\":\"contract ISizeFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct UpdateConfigParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"withdrawOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Size (https://size.credit/)\",\"custom:security-contact\":\"security@size.credit\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)\"}},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"}},\"buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"details\":\"When emitting the `SwapData` event, the recipient is set as the `lender` param, which is inconsistent with the `BuyCreditMarket` event emitted just before,        where `lender` is passed as `onBehalfOf`. The reason is that `SwapData` emits only debt/credit recipients, while `BuyCreditMarket` emits both and also `onBehalfOf`.\"},\"claim((uint256))\":{\"details\":\"Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before\",\"params\":{\"params\":\"ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim\"}},\"collateralRatio(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The collateral ratio of the user\"}},\"compensate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"details\":\"Does not erase the user's loan offer and borrow offer\",\"params\":{\"params\":\"CopyLimitOrdersParams struct containing the following fields:     - address copyAddress: The address of the user to copy from     - CopyLimitOrder copyLoanOffer: The loan offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied loan offer     - CopyLimitOrder copyBorrowOffer: The borrow offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied borrow offer\"}},\"data()\":{\"returns\":{\"_0\":\"The data view\"}},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"params\":{\"borrowATokenAmount\":\"The amount of borrow A tokens\"},\"returns\":{\"_0\":\"The equivalent amount of collateral tokens\"}},\"deposit((address,uint256,address))\":{\"details\":\"The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens\",\"params\":{\"params\":\"DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit\"}},\"feeConfig()\":{\"returns\":{\"_0\":\"The fee configuration parameters\"}},\"getBorrowOfferAPR(address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the borrow offer\"}},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for buying credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for buying credit as a market order\"}},\"getCreditPosition(uint256)\":{\"params\":{\"creditPositionId\":\"The ID of the credit position\"},\"returns\":{\"_0\":\"The CreditPosition struct containing the details of the credit position\"}},\"getDebtPosition(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The DebtPosition struct containing the details of the debt position\"}},\"getDebtPositionAssignedCollateral(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The assigned collateral amount\"}},\"getLoanOfferAPR(address,uint256)\":{\"params\":{\"lender\":\"The address of the lender\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the loan offer\"}},\"getLoanStatus(uint256)\":{\"params\":{\"positionId\":\"The ID of the position\"},\"returns\":{\"_0\":\"The loan status\"}},\"getPositionsCount()\":{\"returns\":{\"_0\":\"The count of debt positions and credit positions\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for selling credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for selling credit as a market order\"}},\"getSwapFee(uint256,uint256)\":{\"params\":{\"cash\":\"The cash amount\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The swap fee\"}},\"getUserCopyLimitOrders(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user copy limit orders\"}},\"getUserView(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user view\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isCreditPositionId(uint256)\":{\"params\":{\"creditPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a credit position ID, false otherwise\"}},\"isDebtPositionId(uint256)\":{\"params\":{\"debtPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a debt position ID, false otherwise\"}},\"isDebtPositionLiquidatable(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"True if the debt position is liquidatable, false otherwise\"}},\"liquidate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)\"},\"returns\":{\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens the the fee recipient received from the liquidation\"}},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"details\":\"This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned\",\"params\":{\"params\":\"LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"},\"returns\":{\"liquidatorProfitBorrowToken\":\"The amount of borrow tokens liquidator received from the liquidation\",\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens liquidator received from the liquidation\"}},\"multicall(bytes[])\":{\"details\":\"This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.\",\"params\":{\"data\":\"An array of bytes encoded function calls to be executed in sequence.\"},\"returns\":{\"results\":\"An array of bytes representing the return data from each function call executed.\"}},\"oracle()\":{\"returns\":{\"_0\":\"The oracle parameters\"}},\"partialRepay((uint256,uint256,address))\":{\"details\":\"The partial repay amount should be less than the debt position future value\",\"params\":{\"params\":\"PartialRepayParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position with debt to repay     - uint256 amount: The amount of tokens to repay (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - address borrower: The address of the borrower\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"repay((uint256,address))\":{\"details\":\"The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim\",\"params\":{\"params\":\"RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"riskConfig()\":{\"returns\":{\"_0\":\"The risk configuration parameters\"}},\"selfLiquidate((uint256))\":{\"details\":\"The user is prevented to self liquidate if a regular liquidation would be profitable\",\"params\":{\"params\":\"SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate\"}},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)\"}},\"sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)\"}},\"sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"details\":\"When emitting the `SwapData` event, the `recipient` parameter is left out. The reason is that `SwapData` emits only debt/credit recipients,      while `SellCreditMarket` emits both and also the cash recipient.\"},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"details\":\"By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.\",\"params\":{\"params\":\"SetUserConfigurationParams struct containing the following fields:     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions\"}},\"setVariablePoolBorrowRate(uint128)\":{\"details\":\"The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero\",\"params\":{\"borrowRate\":\"The new borrow rate\"}},\"sizeFactory()\":{\"returns\":{\"_0\":\"The size factory\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateConfig((string,uint256))\":{\"details\":\"For `address` parameters, the `value` is converted to `uint160` and then to `address`\",\"params\":{\"params\":\"UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"version()\":{\"returns\":{\"_0\":\"The version of the Size protocol\"}},\"withdraw((address,uint256,address))\":{\"details\":\"This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens\",\"params\":{\"params\":\"WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal\"}}},\"title\":\"Size\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new loan offer in the orderbook\"},\"buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))\":{\"notice\":\"Same as `buyCreditLimit` but `onBehalfOf`\"},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Obtains credit via lending or buying existing credit\"},\"buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"notice\":\"Same as `buyCreditMarket` but `onBehalfOf`\"},\"claim((uint256))\":{\"notice\":\"Claim the repayment of a loan with accrued interest from the Variable Pool\"},\"collateralRatio(address)\":{\"notice\":\"Get the collateral ratio of a user\"},\"compensateOnBehalfOf(((uint256,uint256,uint256),address))\":{\"notice\":\"Same as `compensate` but `onBehalfOf`\"},\"copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"notice\":\"Copy limit orders from a user\"},\"copyLimitOrdersOnBehalfOf(((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))\":{\"notice\":\"Same as `copyLimitOrders` but `onBehalfOf`\"},\"data()\":{\"notice\":\"Get the data view\"},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"notice\":\"Convert debt token amount to collateral token amount\"},\"deposit((address,uint256,address))\":{\"notice\":\"Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Variable Pool,         Collateral tokens are deposited into the Size contract through the DepositTokenLibrary\"},\"depositOnBehalfOf(((address,uint256,address),address))\":{\"notice\":\"Same as `deposit` but `onBehalfOf`\"},\"feeConfig()\":{\"notice\":\"Get the fee configuration parameters\"},\"getBorrowOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a borrow offer\"},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Gets the swap data for buying credit as a market order\"},\"getCreditPosition(uint256)\":{\"notice\":\"Get the details of a credit position\"},\"getDebtPosition(uint256)\":{\"notice\":\"Get the details of a debt position\"},\"getDebtPositionAssignedCollateral(uint256)\":{\"notice\":\"Get the assigned collateral for a debt position\"},\"getLoanOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a loan offer\"},\"getLoanStatus(uint256)\":{\"notice\":\"Get the loan status for a given position ID\"},\"getPositionsCount()\":{\"notice\":\"Get the count of debt and credit positions\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Returns the swap data for selling credit as a market order\"},\"getSwapFee(uint256,uint256)\":{\"notice\":\"Get the swap fee for a given cash and tenor\"},\"getUserCopyLimitOrders(address)\":{\"notice\":\"Get the user copy limit orders for a given user\"},\"getUserView(address)\":{\"notice\":\"Get the user view for a given user\"},\"isCreditPositionId(uint256)\":{\"notice\":\"Check if a given ID is a credit position ID\"},\"isDebtPositionId(uint256)\":{\"notice\":\"Check if a given ID is a debt position ID\"},\"isDebtPositionLiquidatable(uint256)\":{\"notice\":\"Check if a debt position is liquidatable\"},\"liquidate((uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower\"},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position with a replacement borrower\"},\"multicall(bytes[])\":{\"notice\":\"Executes multiple calls in a single transaction\"},\"oracle()\":{\"notice\":\"Get the oracle parameters\"},\"partialRepay((uint256,uint256,address))\":{\"notice\":\"Partial repay a debt position by selecting a specific CreditPosition\"},\"pause()\":{\"notice\":\"Pauses the protocol         Only callable by the PAUSER_ROLE\"},\"repay((uint256,address))\":{\"notice\":\"Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported\"},\"riskConfig()\":{\"notice\":\"Get the risk configuration parameters\"},\"selfLiquidate((uint256))\":{\"notice\":\"Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees\"},\"selfLiquidateOnBehalfOf(((uint256),address,address))\":{\"notice\":\"Same as `selfLiquidate` but `onBehalfOf`\"},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new borrow offer in the orderbook\"},\"sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))\":{\"notice\":\"Same as `sellCreditLimit` but `onBehalfOf`\"},\"sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"notice\":\"Same as `sellCreditMarket` but `onBehalfOf`\"},\"setUserConfiguration((uint256,bool,bool,uint256[]))\":{\"notice\":\"Set the credit positions for sale\"},\"setUserConfigurationOnBehalfOf(((uint256,bool,bool,uint256[]),address))\":{\"notice\":\"Same as `setUserConfiguration` but `onBehalfOf`\"},\"setVariablePoolBorrowRate(uint128)\":{\"notice\":\"Sets the variable borrow rate         Only callable by the BORROW_RATE_UPDATER_ROLE\"},\"sizeFactory()\":{\"notice\":\"Get the size factory\"},\"unpause()\":{\"notice\":\"Unpauses the protocol         Only callable by the UNPAUSER_ROLE\"},\"updateConfig((string,uint256))\":{\"notice\":\"Updates the configuration of the protocol         Only callable by the DEFAULT_ADMIN_ROLE\"},\"version()\":{\"notice\":\"Get the version of the Size protocol\"},\"withdraw((address,uint256,address))\":{\"notice\":\"Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Variable Pool         Collateral tokens are withdrawn from the Size contract through the DepositTokenLibrary\"},\"withdrawOnBehalfOf(((address,uint256,address),address))\":{\"notice\":\"Same as `withdraw` but `onBehalfOf`\"}},\"notice\":\"See the documentation in {ISize}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/market/Size.sol\":\"Size\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/aave-v3-core/contracts/\",\":@chainlink/=lib/chainlink/\",\":@chimera/=lib/chimera/src/\",\":@crytic/properties/=lib/properties/\",\":@deprecated/=deprecated/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pendle/=lib/pendle-core-v2-public/\",\":@safe-utils/=lib/safe-utils/src/\",\":@script/=script/\",\":@solady/=lib/solady/src/\",\":@src/=src/\",\":@tenderly-utils/=lib/tenderly-utils/src/\",\":@test/=test/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ERC-7540-Reference/=lib/ERC-7540-Reference/src/\",\":ERC4626/=lib/properties/lib/ERC4626/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":chainlink/=lib/chainlink/contracts/\",\":chimera/=lib/chimera/src/\",\":ds-test/=lib/solady/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\",\":properties/=lib/properties/contracts/\",\":safe-smart-account/=lib/safe-utils/lib/safe-smart-account/\",\":safe-utils/=lib/safe-utils/src/\",\":solady/=lib/solady/\",\":solidity-http/=lib/solidity-http/src/\",\":solidity-stringutils/=lib/solidity-http/lib/solidity-stringutils/\",\":solmate/=lib/properties/lib/solmate/src/\",\":tenderly-utils/=lib/tenderly-utils/src/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"lib/aave-v3-core/contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa\",\"dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf\"]},\"lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol\":{\"keccak256\":\"0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0\",\"dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7\"]},\"lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol\":{\"keccak256\":\"0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87\",\"dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3\"]},\"lib/aave-v3-core/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d\",\"dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM\"]},\"lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06\",\"dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx\"]},\"lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23\",\"dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da\",\"dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260\",\"dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df\",\"dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E\"]},\"src/factory/interfaces/ISizeFactory.sol\":{\"keccak256\":\"0xebc4426038cc8d0b132bcb99fd436d8099035055535b05b5d34664f82ad876ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a328aa6461e1804f26dc23809f417e67f44899ba37ec2b1b5714029d1e2aa5b\",\"dweb:/ipfs/QmTzGoJUGMTMbKqeoyioDt3uNZQnm7wRNg95bm24a6HB7b\"]},\"src/factory/interfaces/ISizeFactoryOffchainGetters.sol\":{\"keccak256\":\"0x01193f70622dd06fa303e488c255bf9b86f4fd2150ded107df75eabb1c200403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81f74325395f6f3c01d55991aa3e8b2e26c3bd8d80b3e061f3c3d90bea81603d\",\"dweb:/ipfs/QmWKW2CQdeYgK1x5L6i9k43wJVYxu9Qy6QUJD5aFoykQ8p\"]},\"src/factory/interfaces/ISizeFactoryV1_7.sol\":{\"keccak256\":\"0x2cea6fa459a87abe5e964db97204841d3425b344cbb00ee83e5b98455ab67972\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f832221d6b28791cbe98bc832b452936b5acc0092817f1eaeed91fa7974c79b7\",\"dweb:/ipfs/QmXhdbhCm8eKnDbK6jztkPXy6JknGJS23EhF26Cy27ssdu\"]},\"src/factory/libraries/Authorization.sol\":{\"keccak256\":\"0xf42a6c9392e33ad8d3be9045864c896a1552b4c3e4775198b990ea0b165f8908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02603db5e7c1b4df6b1f474e24fbd3b82e33e46deb84de07d0222bb26d2781af\",\"dweb:/ipfs/QmaDuJawdoxgvVvMerZW8CMQZXKJPXhuH4RASMTfuMJX96\"]},\"src/market/Size.sol\":{\"keccak256\":\"0xa8b5dbfd9416582916644462baf324b851ffb22e770f44b3c92802e16fc18583\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7087ea04a2898e8f7ede428c2e6bd78fd8f05f67f6a02becb973f1ca2d19d399\",\"dweb:/ipfs/QmYyNwLJgBdYkoHxdrZLfXa3hYUV3y883FVi1b3FHNC7pV\"]},\"src/market/SizeStorage.sol\":{\"keccak256\":\"0x5761db233e84b406cc8e679ead486311f43996483785581180f1931f0ca796ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed922b076d2b8dc9b512cb9c1a3dc95ae4390fb9023c2d5f9da10be5302e386\",\"dweb:/ipfs/QmPavYUcHvkdBqTcZK6Ph6dwDKXg9258Y19KW772v9uM3i\"]},\"src/market/SizeView.sol\":{\"keccak256\":\"0x9d184507cb8e498010122f0852ccc773b10ead57ce754068f6b03e4df16bb41f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0661bff01b17b1043f57f8f149acc8e5dda2140106ab47c6dec788911484b28b\",\"dweb:/ipfs/QmQgCgbNarjZLKdjS66DYu98EtgZC9c7TK1PEophMNMPP6\"]},\"src/market/SizeViewData.sol\":{\"keccak256\":\"0x06ad8df04416ffaf15415f3be0cdb4c4ac1213c0a7a6f8a869170c620149747b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0fc6d18dbf7eb2270bd70dd0bc10cde18e5968f9e037e2a57586b8bdc0d6f8f\",\"dweb:/ipfs/QmPH6e38WdmHMo9FyhJ4ELpmXFzH7GdreukXjZ5WjS4CVD\"]},\"src/market/interfaces/IMulticall.sol\":{\"keccak256\":\"0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989\",\"dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R\"]},\"src/market/interfaces/ISize.sol\":{\"keccak256\":\"0x506b9707877f37a5c9d63084a3ec35e4fc8b7b131bf4663590d5a760a75ff5eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8de5c7f00281db9031a4623e28474b30f509b41d614769be81780257765eac1a\",\"dweb:/ipfs/QmcEwTS6b35nmPRuuxDbh2BPc1umihBcpyHdDySkvYzNPo\"]},\"src/market/interfaces/ISizeAdmin.sol\":{\"keccak256\":\"0x1f2fda9cf43a960e920186ce0414d596f0c73e20e0ab262a047ffcab5b8a4a9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://092faa4adc6268f096580faebcf426c87def65e02525abfecd04aa1acfceaa88\",\"dweb:/ipfs/QmWtjocrjvMRqKH47XiP7GKPRPKPCX3ApnpgpFjt3X9eRf\"]},\"src/market/interfaces/ISizeView.sol\":{\"keccak256\":\"0x3255e2448b7d70f8e92a2a404211a309d1efff419e7d140479c1d327040f650f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f36c86c141e8f46710cf69b4b69b2a5c4b9fa49a9bf350dd56810bb173dc4bb\",\"dweb:/ipfs/QmcsXpr1jSaN5CEBemR1D4XTxdPdmCPQboDkb2yftv8LEz\"]},\"src/market/interfaces/IWETH.sol\":{\"keccak256\":\"0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e\",\"dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t\"]},\"src/market/interfaces/v1.7/ISizeV1_7.sol\":{\"keccak256\":\"0x5be7f049ece5c38acc45e8230e13ceb1e77c835a3990a854456c7409209958d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8672c19394b2ad6e797614ca28e9341607dc0505ed09c6adfbb859a8c96dbb67\",\"dweb:/ipfs/QmXCeaqdKvnCwXDTkpe5PisAmwzmpq2zy9vtzNoAmHwPqQ\"]},\"src/market/interfaces/v1.7/ISizeViewV1_7.sol\":{\"keccak256\":\"0x1ae3e0e566182a39cea1e4a4b2f3ba8e47c9c5dc8aeed24fd5a90d35a5dd317e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c79e7a02e98992bca9e5bc5eb4513100b557f511b1cb0245f7838e12e87efeb\",\"dweb:/ipfs/QmPZDziwpJsReTqbzF7JiWntq4XitinnAJjDd393ePRB6T\"]},\"src/market/libraries/AccountingLibrary.sol\":{\"keccak256\":\"0xaf63013204ceefcfea23c1843805dcbbdc3ca78f20075c50d1ff1e121b303ce6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48e83453f178df9f745e91a408af5e51feb1a0c932c42052a6f2ada9be795225\",\"dweb:/ipfs/QmUxBEeqETbGSPTsZFttUxkiBGpJSqHr6LZJVuWWhH9giA\"]},\"src/market/libraries/CapsLibrary.sol\":{\"keccak256\":\"0xbc9bb02b6d216723e2dc0ea7431e072c206a7318dab435d5b713c168c0aaaf09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56837fc8e7df66ebc9b65790782d14a0bd14a096dea50d5f1d795bdb5cdfacc8\",\"dweb:/ipfs/QmXKaAPHzCnRsUAXuHKoJyR6cXQiRQ5dZtCdD4ZB2SthcP\"]},\"src/market/libraries/DepositTokenLibrary.sol\":{\"keccak256\":\"0xe11c6f6c228fa1a8f10eb74f6db851e8b23f73664a4f92dd17da7cb0c349e7d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bd0450b84ef1561454628afb863d3edd6248eea4d0deb2580de5fbb1728d34c\",\"dweb:/ipfs/QmakkuB6Pzahjo1SQ9Ybmic4ym96UaQ7e8iEb8btDVqEKv\"]},\"src/market/libraries/Errors.sol\":{\"keccak256\":\"0xb45510436b26e36c1e45c589203678bdbcfbfcf1ab44277c27234e20f9318b6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df58668e11fb5e0108b20fe2db50fd44968001fa59d8a72edf7f9e69209f801\",\"dweb:/ipfs/QmVGKzAUywbQjXZLBosMHwjuu7HsNbfN1Qigb5NmUGYXp3\"]},\"src/market/libraries/Events.sol\":{\"keccak256\":\"0x381f68b7ee89897a3cd38f5b267a0bd7954aa6853283b6235b44fd1af2e24b0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4930543bd6b4b90fe1f06f338cc05955b6d9cce34ef6c817afaebcb0cac4ea8\",\"dweb:/ipfs/QmPQXauGZ9BkhoUgEWKbzjkYr3wpxTpenYGR4K2BYYoKTH\"]},\"src/market/libraries/LoanLibrary.sol\":{\"keccak256\":\"0x93d76a205f0dd0130d1bcf4657edf2c40921ca76b77d468d802c24e42ba9eccb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e10015fa9e6bc78c5a2ef23595c140aea8dd41e44adfa7bb24cb7551ae61cac\",\"dweb:/ipfs/QmP93Yb2WhDBPstvhDkNzTDyqXQsdLmhQd61oj9LFSVfJZ\"]},\"src/market/libraries/Math.sol\":{\"keccak256\":\"0x445f0f8e7e74e16ce74d8563a083fa8c5a54142eb871f7e076f0569a5a940949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c34a2714a25dff091b872aa35056354c8a481112ff475204a31bc8db894eac3\",\"dweb:/ipfs/QmY5oew2GzqxaVA9f39hCr68V8tuhW5k4iB23kpXnPgx38\"]},\"src/market/libraries/Multicall.sol\":{\"keccak256\":\"0x557da60425f64fce42e25de2f1e5da989a01ac24e16bd587d1c8ea04c1bc4c03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf18600b85e8aa19b07f7e0abe082520ba2cebd190665d4a0b2ebe2395911d98\",\"dweb:/ipfs/Qmb3MEsVjEEciWNi3BfArzQbkcZ8aeQMAKVHp8E79GQrUd\"]},\"src/market/libraries/OfferLibrary.sol\":{\"keccak256\":\"0x7926a94b1d39a8870808b0fbef5475f7b424589bde84f7edea97898e81bb13d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d44cc7a629d0d74013efb9fe3980916571416e19f717132a3ef18be95e18a9\",\"dweb:/ipfs/QmNRPBYTT5t2sXFWVCcMjkZCXEmfU3hP4HMqgUHwzmX7Ys\"]},\"src/market/libraries/RiskLibrary.sol\":{\"keccak256\":\"0x8fc54337eb367bfc09ab84a4a6bf7ccd4d2223d39d5b59acb9ba0ef6db920212\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8956d37f6b33b13ad766774742be28f15b31444798eaddc5346743cea90578c\",\"dweb:/ipfs/QmefRwhFvL6XsLVL5h2xxn91qX4JxcFQbhnrd7f37J4yLR\"]},\"src/market/libraries/YieldCurveLibrary.sol\":{\"keccak256\":\"0x8d4b1f45d67387169c3b38cc034305eba91ad306dac7021d4658e3b8bbc9a135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://438376203571e01cbb26ea58c192d3036a1e623c0c5897c52aeafaa90e281cd3\",\"dweb:/ipfs/QmcRNJKsudM9bZvCPCSEQWxPHvVEfQD1u2MPf8S33fh3o3\"]},\"src/market/libraries/actions/BuyCreditLimit.sol\":{\"keccak256\":\"0xccb77182ce62b7ea147ee65ad7e32076f9e565a2605c18842087103e471f79f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571a3265ef2664d9fea268e229af1bc0e430f458efe6898a03532de799d959ef\",\"dweb:/ipfs/QmSA1hphKNeRdqKtKpbfM3yof9TTd13r9X5ei7jNiuhcwQ\"]},\"src/market/libraries/actions/BuyCreditMarket.sol\":{\"keccak256\":\"0xdcd1e28348e63db90f96e882221ddc4d44ca7f00840e26fb6ac4415b7912ef9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c0b52e3901d79c80dd4a098f050ea9192488f71d585f41e9ba1bf10aabe9a50\",\"dweb:/ipfs/QmYvjvBtZVLivFpkw9UWbtW4YvgQNGiJVTJCW2PzcrEqvN\"]},\"src/market/libraries/actions/Claim.sol\":{\"keccak256\":\"0xb71ab7b45ca738fcb802bf2ab29f9e6b37ae98d7463dbfdfa6a51361a1d4bcd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc4357c1be3ccd8a37bb023d8cd8a8e346626423e54b93327e915be294c6de0c\",\"dweb:/ipfs/QmSvfKQ5xtJQmxQmPfyE8zqUaJLgDsxcGq55rQHxrWXftq\"]},\"src/market/libraries/actions/Compensate.sol\":{\"keccak256\":\"0x5fa7ce8b74eeea09d12b78e3b31dbc7b37fca58b235299ad5d9f8e99ea400719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fbeff16ba76d1e3735f4d067ba16da7b0f35176ff9ea501a99f94063936bc5d\",\"dweb:/ipfs/QmYyogfmQmrpEksBc9uSjVQvYAWdaq31pJ3j6aAnc8D1rA\"]},\"src/market/libraries/actions/CopyLimitOrders.sol\":{\"keccak256\":\"0x7c0122a6757ea03a0e466ece6bfe1689804dbc67aa47bbe3959dbfbd9bdf5044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5450e2ddb79dc482d93a34701e6559c972ba2247b6ce2fb2ce02c5ec15964bff\",\"dweb:/ipfs/QmdLeycgcqWjZ8gAvduxZpHRvsXGoa3BpvS9oJvhdH3QwZ\"]},\"src/market/libraries/actions/Deposit.sol\":{\"keccak256\":\"0xdb3dc341ad3b08322939d991f827a11be890163ce1b81bc8944e9da9f276593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://146b20c28ee3528f60fe6c68e19e53c6d232d5bdb4341a54232921325ed02eb5\",\"dweb:/ipfs/QmZv7smGvYeHBsG2VMP6CiAeoLzHmcJpdNosRjRnZEQ8cn\"]},\"src/market/libraries/actions/Initialize.sol\":{\"keccak256\":\"0xb48fd6e618d744052a68a6d963ca5b79c1375d929a5b3b11a38b89603ad8c9d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f7bc6833318ebf3e19764140d1dac326ef602ad276bfae386a855a80e92b61e\",\"dweb:/ipfs/QmRuiU2RmFpqQZjtnJUiu2GaveK7Ykg85hKXrCBHHFxAQT\"]},\"src/market/libraries/actions/Liquidate.sol\":{\"keccak256\":\"0xd3c46e7454dd7932f34149d28ec5a0b6ee4749a8903d78e722dc19163cf2732d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff03c519e678a0557d2a4954d917ae907d0d6a08aa8a7c3cd2be807930c5b9ff\",\"dweb:/ipfs/QmfYXxx4g1RFyg9is7EyuW2xBmd6w5t9s1HnArdqC7opAD\"]},\"src/market/libraries/actions/LiquidateWithReplacement.sol\":{\"keccak256\":\"0xb93fd3da4105662549ce3044ae66cf658aed32e250acb6650df8e243e80d8c47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dc2b2170e792ee45f01e81b6f348c4a3d17b067b8b59015205969d6b08782ca\",\"dweb:/ipfs/QmUVMZeqRaVdVUkFe4LL5PYHXsxN5pmDS4wibsZHUXZXtk\"]},\"src/market/libraries/actions/PartialRepay.sol\":{\"keccak256\":\"0x18c3217aab5882299e55019dced21528174b2b395204f96e9a36004024f6ea93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88f12e5b76e4d12c96236ca96058fe9faf979fc6de8bd0e68e4aa8eabc254b65\",\"dweb:/ipfs/QmSQx1eK9UDebvVWhTMfUfthvJ4GEpo3Uf9zyNJNuLurKW\"]},\"src/market/libraries/actions/Repay.sol\":{\"keccak256\":\"0xe691e25d19c3c5ac9c6f8eb7a5d816b78fe34f859a21250b0ed5cb89511a928a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a6d6057553cd249aed266292e15db36afdabc572cf1b712e9c80a29260639da\",\"dweb:/ipfs/QmU8uMqjL2eDDS1hsMKhBmhDnXPcdB7b89xJDLtYUMrm6F\"]},\"src/market/libraries/actions/SelfLiquidate.sol\":{\"keccak256\":\"0x2d71cff942efc93fb7aa3a0a636e44562e0fa44ba4d503f323c6d08e7fdd8af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdc43c74a42cffbf3844939df1d21a2b392ad3596ece8f1e9a6ebe08c2ec64be\",\"dweb:/ipfs/QmRUScCkvE4EADEUEvdwrsnzfLsq7xjFt1xsSZ4PZfs6J7\"]},\"src/market/libraries/actions/SellCreditLimit.sol\":{\"keccak256\":\"0xe8fe9ab69faccffa8539167973d13c5afe04ca8358316a092540171d084654b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c626cb1ad9347b0eabd162f590c61175cdc687958bc6684843201713c5efa89\",\"dweb:/ipfs/QmNqZc3Zh2Nvj6exvG89XShBY4WtBJSh6iKWr7gZB8sQ3k\"]},\"src/market/libraries/actions/SellCreditMarket.sol\":{\"keccak256\":\"0x9eb93f5b5e2183e9dbef11967f23ff212cdf2e4850166173435425a6ac765664\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8945337e751c520c47f46d708b996f23291e525bed22edaee2d86ee3a26edf8\",\"dweb:/ipfs/QmVmiy7nR5G1VhaXqs6wBVqeraRbET1mFdh6N5Mry51WGj\"]},\"src/market/libraries/actions/SetUserConfiguration.sol\":{\"keccak256\":\"0x2616ee9d1e2a4e0e54e9dd320c6e7a77700c390f9fd03775f0f4318e5e18d3f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882e2fa2d69bdfea68718f7ae79db554f31b9503259a912ab59a4b4f3cbba360\",\"dweb:/ipfs/QmaSHBTBm4SNszTL3wbcTkyzbBDszFA1XgrPtGe2T98yj3\"]},\"src/market/libraries/actions/UpdateConfig.sol\":{\"keccak256\":\"0x7e26d2d7ceb21fec0545a4f73e0b5e9c7edb6218b818003fac3b0ed48193b36c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61c6604b0ea4a2b7aad3d397f51fb9684fa44117146eaec64e36d0382f4de8\",\"dweb:/ipfs/QmPfCFvb8DRLufZ5Ltgf28Rte4Y929APqvRi6LPHMGejzd\"]},\"src/market/libraries/actions/Withdraw.sol\":{\"keccak256\":\"0x66c9620ed432ef9fb53ad41a967432f5c68cc1b48855743f04733ad9f4921d00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b49ebd22fa2c2a4dd6644e87ca4cd2b4ff29978c6c149d0a6acf142d5ddf5e60\",\"dweb:/ipfs/QmUAbuDTEuSxewMbAZjkdnjQ7CG47C3PmyvWmKKeGXTbYz\"]},\"src/market/token/NonTransferrableScaledTokenV1_5.sol\":{\"keccak256\":\"0xf97d987f52e49a11142ab9146ace9979d71feec057eff2d48304d73b57435c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5953d8df62fda44b6b67878e548eddedaf7e3e8f23671c9ed3216c8961dafe3\",\"dweb:/ipfs/QmWK1nKSm7rvEp4G376Pu6opEFSaoDAkNFGZhesxAwynA1\"]},\"src/market/token/NonTransferrableToken.sol\":{\"keccak256\":\"0xf82118604ddbcd5d9ff708d739396e993d9621cff7b07f22a519141ca39a9e17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f371fb37a2ac76630302b1284d62e8657f038b504ce9884723574c2a3de32ec\",\"dweb:/ipfs/QmRsjmBirftC8Jih4jBG2BoJmpe4RRAAsEwsmtLjWicTVf\"]},\"src/oracle/IPriceFeed.sol\":{\"keccak256\":\"0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48\",\"dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ\"]},\"src/oracle/adapters/ChainlinkPriceFeed.sol\":{\"keccak256\":\"0x71a4ccb7d9469f4d7a914a81c754b1278152a387f8154e0f9793e0e3d010a599\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d953653f6481b344d0d00a677a8301f3006a50c3b90744c39cd3eda6f508818b\",\"dweb:/ipfs/QmYR1RvdMboMpH9ykJN5WwuC3AabSvPS2JA4t4afxa7gyh\"]},\"src/oracle/adapters/ChainlinkSequencerUptimeFeed.sol\":{\"keccak256\":\"0x3d200d7fcc7c457a201f2bb32a0b68ea13b2b697cb300bbd587828bff5ffe8b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d72923e346e73eb0d42d055437dc6df059c3a8f27b08ff5aacd7cf7fdf90eec5\",\"dweb:/ipfs/QmPYENtSCwseMxYtQeKAkVe8DuCJYzRGpFRxDgw85xf2g8\"]},\"src/oracle/adapters/UniswapV3PriceFeed.sol\":{\"keccak256\":\"0xea95d62fd50c16d48014c11d4dad500b53406aca773ed4e0632290f696b5998f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81373a8e7c054eaecc7017be89cd4ee7d7f09eab09df8d568c944b72ef7c1abe\",\"dweb:/ipfs/QmQc4gmAoq2oYdBmnTsimDCVWas1tnFAMfxLvykbSTb5kd\"]},\"src/oracle/v1.5.1/PriceFeed.sol\":{\"keccak256\":\"0x36473f98f23968eaab386e44c1404652c7ef88c09db9772ab3195d8305829762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5db471c144f3a43e9e07391890e7b29e39b64ae3fb0e73b66dd313801b03542a\",\"dweb:/ipfs/Qmf5GMB6SdKNCUPCbV4nYmxUjg6z3iKiweYU2ajY9BrGbC\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "EnforcedPause" },
        { "inputs": [], "type": "error", "name": "ExpectedPause" },
        { "inputs": [], "type": "error", "name": "FailedCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "market", "type": "address" }
          ],
          "type": "error",
          "name": "INVALID_MARKET"
        },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "uint256",
              "name": "crBefore",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "crAfter", "type": "uint256" }
          ],
          "type": "error",
          "name": "MUST_IMPROVE_COLLATERAL_RATIO"
        },
        { "inputs": [], "type": "error", "name": "NOT_SUPPORTED" },
        { "inputs": [], "type": "error", "name": "NULL_ADDRESS" },
        { "inputs": [], "type": "error", "name": "NULL_TENOR" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "oldBorrowRate",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "newBorrowRate",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VariablePoolBorrowRateUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BuyCreditLimitParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxDueDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct YieldCurve",
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256[]",
                          "name": "tenors",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "int256[]",
                          "name": "aprs",
                          "type": "int256[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "marketRateMultipliers",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimitOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BuyCreditMarketParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "borrower",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "exactAmountIn",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarketOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct ClaimParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralRatio",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionToCompensateId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensate"
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CompensateParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "creditPositionWithDebtToRepayId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionToCompensateId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensateOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct CopyLimitOrdersParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "copyAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "copyLimitOrders"
        },
        {
          "inputs": [
            {
              "internalType": "struct CopyLimitOrdersOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CopyLimitOrdersParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "copyAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "struct CopyLimitOrder",
                      "name": "copyLoanOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "minTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "int256",
                          "name": "offsetAPR",
                          "type": "int256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct CopyLimitOrder",
                      "name": "copyBorrowOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "minTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "int256",
                          "name": "offsetAPR",
                          "type": "int256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "copyLimitOrdersOnBehalfOf"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "data",
          "outputs": [
            {
              "internalType": "struct DataView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nextDebtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextCreditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableScaledTokenV1_5",
                  "name": "borrowAToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "debtToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IPool",
                  "name": "variablePool",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowATokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "debtTokenAmountToCollateralTokenAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositOnBehalfOfParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DepositParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositOnBehalfOf"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeConfig",
          "outputs": [
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBuyCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCreditPosition",
          "outputs": [
            {
              "internalType": "struct CreditPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                { "internalType": "bool", "name": "forSale", "type": "bool" },
                {
                  "internalType": "uint256",
                  "name": "credit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPosition",
          "outputs": [
            {
              "internalType": "struct DebtPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "futureValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidityIndexAtRepayment",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPositionAssignedCollateral",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "lender", "type": "address" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanStatus",
          "outputs": [
            { "internalType": "enum LoanStatus", "name": "", "type": "uint8" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionsCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSellCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "cash", "type": "uint256" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSwapFee",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserCopyLimitOrders",
          "outputs": [
            {
              "internalType": "struct UserCopyLimitOrders",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "copyAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserView",
          "outputs": [
            {
              "internalType": "struct UserView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct User",
                  "name": "user",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct LimitOrder",
                      "name": "loanOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct LimitOrder",
                      "name": "borrowOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralTokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtBalance",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "f",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "r",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowAToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct InitializeOracleParams",
              "name": "o",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            },
            {
              "internalType": "struct InitializeDataParams",
              "name": "d",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "weth",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "variablePool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "borrowATokenV1_5",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sizeFactory",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCreditPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionLiquidatable",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateWithReplacementParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidateWithReplacement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidatorProfitBorrowToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes[]", "name": "_data", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            { "internalType": "bytes[]", "name": "results", "type": "bytes[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "struct InitializeOracleParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PartialRepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "partialRepay"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ISizeFactory",
              "name": "_sizeFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reinitialize"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct RepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "riskConfig",
          "outputs": [
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowAToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowATokenCap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidate"
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SelfLiquidateParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidateOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SellCreditLimitParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxDueDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct YieldCurve",
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256[]",
                          "name": "tenors",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "int256[]",
                          "name": "aprs",
                          "type": "int256[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "marketRateMultipliers",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimitOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SellCreditMarketParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "exactAmountIn",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarketOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "openingLimitBorrowCR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "creditPositionIdsForSale",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "creditPositionIds",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfiguration"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SetUserConfigurationParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "creditPositionIdsForSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "creditPositionIds",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfigurationOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVariablePoolBorrowRate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sizeFactory",
          "outputs": [
            {
              "internalType": "contract ISizeFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "struct UpdateConfigParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "string", "name": "key", "type": "string" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct WithdrawParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawOnBehalfOf"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)"
            }
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            }
          },
          "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "details": "When emitting the `SwapData` event, the recipient is set as the `lender` param, which is inconsistent with the `BuyCreditMarket` event emitted just before,        where `lender` is passed as `onBehalfOf`. The reason is that `SwapData` emits only debt/credit recipients, while `BuyCreditMarket` emits both and also `onBehalfOf`."
          },
          "claim((uint256))": {
            "details": "Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before",
            "params": {
              "params": "ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim"
            }
          },
          "collateralRatio(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The collateral ratio of the user" }
          },
          "compensate((uint256,uint256,uint256))": {
            "params": {
              "params": "CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)"
            }
          },
          "constructor": { "custom:oz-upgrades-unsafe-allow": "constructor" },
          "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "details": "Does not erase the user's loan offer and borrow offer",
            "params": {
              "params": "CopyLimitOrdersParams struct containing the following fields:     - address copyAddress: The address of the user to copy from     - CopyLimitOrder copyLoanOffer: The loan offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied loan offer     - CopyLimitOrder copyBorrowOffer: The borrow offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied borrow offer"
            }
          },
          "data()": { "returns": { "_0": "The data view" } },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "params": { "borrowATokenAmount": "The amount of borrow A tokens" },
            "returns": { "_0": "The equivalent amount of collateral tokens" }
          },
          "deposit((address,uint256,address))": {
            "details": "The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens",
            "params": {
              "params": "DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit"
            }
          },
          "feeConfig()": {
            "returns": { "_0": "The fee configuration parameters" }
          },
          "getBorrowOfferAPR(address,uint256)": {
            "params": {
              "borrower": "The address of the borrower",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the borrow offer" }
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for buying credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for buying credit as a market order"
            }
          },
          "getCreditPosition(uint256)": {
            "params": { "creditPositionId": "The ID of the credit position" },
            "returns": {
              "_0": "The CreditPosition struct containing the details of the credit position"
            }
          },
          "getDebtPosition(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "The DebtPosition struct containing the details of the debt position"
            }
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": { "_0": "The assigned collateral amount" }
          },
          "getLoanOfferAPR(address,uint256)": {
            "params": {
              "lender": "The address of the lender",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the loan offer" }
          },
          "getLoanStatus(uint256)": {
            "params": { "positionId": "The ID of the position" },
            "returns": { "_0": "The loan status" }
          },
          "getPositionsCount()": {
            "returns": {
              "_0": "The count of debt positions and credit positions"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for selling credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for selling credit as a market order"
            }
          },
          "getSwapFee(uint256,uint256)": {
            "params": {
              "cash": "The cash amount",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The swap fee" }
          },
          "getUserCopyLimitOrders(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user copy limit orders" }
          },
          "getUserView(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user view" }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isCreditPositionId(uint256)": {
            "params": { "creditPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a credit position ID, false otherwise"
            }
          },
          "isDebtPositionId(uint256)": {
            "params": { "debtPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a debt position ID, false otherwise"
            }
          },
          "isDebtPositionLiquidatable(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "True if the debt position is liquidatable, false otherwise"
            }
          },
          "liquidate((uint256,uint256,uint256))": {
            "params": {
              "params": "LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)"
            },
            "returns": {
              "liquidatorProfitCollateralToken": "The amount of collateral tokens the the fee recipient received from the liquidation"
            }
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "details": "This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned",
            "params": {
              "params": "LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            },
            "returns": {
              "liquidatorProfitBorrowToken": "The amount of borrow tokens liquidator received from the liquidation",
              "liquidatorProfitCollateralToken": "The amount of collateral tokens liquidator received from the liquidation"
            }
          },
          "multicall(bytes[])": {
            "details": "This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.",
            "params": {
              "data": "An array of bytes encoded function calls to be executed in sequence."
            },
            "returns": {
              "results": "An array of bytes representing the return data from each function call executed."
            }
          },
          "oracle()": { "returns": { "_0": "The oracle parameters" } },
          "partialRepay((uint256,uint256,address))": {
            "details": "The partial repay amount should be less than the debt position future value",
            "params": {
              "params": "PartialRepayParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position with debt to repay     - uint256 amount: The amount of tokens to repay (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - address borrower: The address of the borrower"
            }
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "repay((uint256,address))": {
            "details": "The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim",
            "params": {
              "params": "RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "riskConfig()": {
            "returns": { "_0": "The risk configuration parameters" }
          },
          "selfLiquidate((uint256))": {
            "details": "The user is prevented to self liquidate if a regular liquidation would be profitable",
            "params": {
              "params": "SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate"
            }
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)"
            }
          },
          "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)"
            }
          },
          "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "details": "When emitting the `SwapData` event, the `recipient` parameter is left out. The reason is that `SwapData` emits only debt/credit recipients,      while `SellCreditMarket` emits both and also the cash recipient."
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "details": "By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.",
            "params": {
              "params": "SetUserConfigurationParams struct containing the following fields:     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions"
            }
          },
          "setVariablePoolBorrowRate(uint128)": {
            "details": "The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero",
            "params": { "borrowRate": "The new borrow rate" }
          },
          "sizeFactory()": { "returns": { "_0": "The size factory" } },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "updateConfig((string,uint256))": {
            "details": "For `address` parameters, the `value` is converted to `uint160` and then to `address`",
            "params": {
              "params": "UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update"
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "version()": {
            "returns": { "_0": "The version of the Size protocol" }
          },
          "withdraw((address,uint256,address))": {
            "details": "This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens",
            "params": {
              "params": "WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new loan offer in the orderbook"
          },
          "buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": {
            "notice": "Same as `buyCreditLimit` but `onBehalfOf`"
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Obtains credit via lending or buying existing credit"
          },
          "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "notice": "Same as `buyCreditMarket` but `onBehalfOf`"
          },
          "claim((uint256))": {
            "notice": "Claim the repayment of a loan with accrued interest from the Variable Pool"
          },
          "collateralRatio(address)": {
            "notice": "Get the collateral ratio of a user"
          },
          "compensateOnBehalfOf(((uint256,uint256,uint256),address))": {
            "notice": "Same as `compensate` but `onBehalfOf`"
          },
          "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "notice": "Copy limit orders from a user"
          },
          "copyLimitOrdersOnBehalfOf(((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))": {
            "notice": "Same as `copyLimitOrders` but `onBehalfOf`"
          },
          "data()": { "notice": "Get the data view" },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "notice": "Convert debt token amount to collateral token amount"
          },
          "deposit((address,uint256,address))": {
            "notice": "Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Variable Pool,         Collateral tokens are deposited into the Size contract through the DepositTokenLibrary"
          },
          "depositOnBehalfOf(((address,uint256,address),address))": {
            "notice": "Same as `deposit` but `onBehalfOf`"
          },
          "feeConfig()": { "notice": "Get the fee configuration parameters" },
          "getBorrowOfferAPR(address,uint256)": {
            "notice": "Get the APR for a borrow offer"
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Gets the swap data for buying credit as a market order"
          },
          "getCreditPosition(uint256)": {
            "notice": "Get the details of a credit position"
          },
          "getDebtPosition(uint256)": {
            "notice": "Get the details of a debt position"
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "notice": "Get the assigned collateral for a debt position"
          },
          "getLoanOfferAPR(address,uint256)": {
            "notice": "Get the APR for a loan offer"
          },
          "getLoanStatus(uint256)": {
            "notice": "Get the loan status for a given position ID"
          },
          "getPositionsCount()": {
            "notice": "Get the count of debt and credit positions"
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Returns the swap data for selling credit as a market order"
          },
          "getSwapFee(uint256,uint256)": {
            "notice": "Get the swap fee for a given cash and tenor"
          },
          "getUserCopyLimitOrders(address)": {
            "notice": "Get the user copy limit orders for a given user"
          },
          "getUserView(address)": {
            "notice": "Get the user view for a given user"
          },
          "isCreditPositionId(uint256)": {
            "notice": "Check if a given ID is a credit position ID"
          },
          "isDebtPositionId(uint256)": {
            "notice": "Check if a given ID is a debt position ID"
          },
          "isDebtPositionLiquidatable(uint256)": {
            "notice": "Check if a debt position is liquidatable"
          },
          "liquidate((uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower"
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position with a replacement borrower"
          },
          "multicall(bytes[])": {
            "notice": "Executes multiple calls in a single transaction"
          },
          "oracle()": { "notice": "Get the oracle parameters" },
          "partialRepay((uint256,uint256,address))": {
            "notice": "Partial repay a debt position by selecting a specific CreditPosition"
          },
          "pause()": {
            "notice": "Pauses the protocol         Only callable by the PAUSER_ROLE"
          },
          "repay((uint256,address))": {
            "notice": "Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported"
          },
          "riskConfig()": { "notice": "Get the risk configuration parameters" },
          "selfLiquidate((uint256))": {
            "notice": "Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees"
          },
          "selfLiquidateOnBehalfOf(((uint256),address,address))": {
            "notice": "Same as `selfLiquidate` but `onBehalfOf`"
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new borrow offer in the orderbook"
          },
          "sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": {
            "notice": "Same as `sellCreditLimit` but `onBehalfOf`"
          },
          "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "notice": "Same as `sellCreditMarket` but `onBehalfOf`"
          },
          "setUserConfiguration((uint256,bool,bool,uint256[]))": {
            "notice": "Set the credit positions for sale"
          },
          "setUserConfigurationOnBehalfOf(((uint256,bool,bool,uint256[]),address))": {
            "notice": "Same as `setUserConfiguration` but `onBehalfOf`"
          },
          "setVariablePoolBorrowRate(uint128)": {
            "notice": "Sets the variable borrow rate         Only callable by the BORROW_RATE_UPDATER_ROLE"
          },
          "sizeFactory()": { "notice": "Get the size factory" },
          "unpause()": {
            "notice": "Unpauses the protocol         Only callable by the UNPAUSER_ROLE"
          },
          "updateConfig((string,uint256))": {
            "notice": "Updates the configuration of the protocol         Only callable by the DEFAULT_ADMIN_ROLE"
          },
          "version()": { "notice": "Get the version of the Size protocol" },
          "withdraw((address,uint256,address))": {
            "notice": "Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Variable Pool         Collateral tokens are withdrawn from the Size contract through the DepositTokenLibrary"
          },
          "withdrawOnBehalfOf(((address,uint256,address),address))": {
            "notice": "Same as `withdraw` but `onBehalfOf`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=lib/aave-v3-core/contracts/",
        "@chainlink/=lib/chainlink/",
        "@chimera/=lib/chimera/src/",
        "@crytic/properties/=lib/properties/",
        "@deprecated/=deprecated/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@pendle/=lib/pendle-core-v2-public/",
        "@safe-utils/=lib/safe-utils/src/",
        "@script/=script/",
        "@solady/=lib/solady/src/",
        "@src/=src/",
        "@tenderly-utils/=lib/tenderly-utils/src/",
        "@test/=test/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "ERC-7540-Reference/=lib/ERC-7540-Reference/src/",
        "ERC4626/=lib/properties/lib/ERC4626/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "chainlink/=lib/chainlink/contracts/",
        "chimera/=lib/chimera/src/",
        "ds-test/=lib/solady/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/",
        "properties/=lib/properties/contracts/",
        "safe-smart-account/=lib/safe-utils/lib/safe-smart-account/",
        "safe-utils/=lib/safe-utils/src/",
        "solady/=lib/solady/",
        "solidity-http/=lib/solidity-http/src/",
        "solidity-stringutils/=lib/solidity-http/lib/solidity-stringutils/",
        "solmate/=lib/properties/lib/solmate/src/",
        "tenderly-utils/=lib/tenderly-utils/src/",
        "v3-core/=lib/v3-core/contracts/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/market/Size.sol": "Size" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
        "keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
        "urls": [
          "bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
          "dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAToken.sol": {
        "keccak256": "0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417",
        "urls": [
          "bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa",
          "dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol": {
        "keccak256": "0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd",
        "urls": [
          "bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0",
          "dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol": {
        "keccak256": "0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee",
        "urls": [
          "bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87",
          "dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPool.sol": {
        "keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
        "urls": [
          "bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
          "dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol": {
        "keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
        "urls": [
          "bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
          "dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol": {
        "keccak256": "0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4",
        "urls": [
          "bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d",
          "dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol": {
        "keccak256": "0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07",
        "urls": [
          "bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06",
          "dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol": {
        "keccak256": "0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88",
        "urls": [
          "bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828",
          "dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534",
        "urls": [
          "bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da",
          "dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716",
        "urls": [
          "bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23",
          "dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63",
        "urls": [
          "bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec",
          "dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
        "keccak256": "0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5",
        "urls": [
          "bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb",
          "dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3",
        "urls": [
          "bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da",
          "dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
        "urls": [
          "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
          "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898",
        "urls": [
          "bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70",
          "dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a",
        "urls": [
          "bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a",
          "dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c",
        "urls": [
          "bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e",
          "dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae",
        "urls": [
          "bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6",
          "dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160",
        "urls": [
          "bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260",
          "dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f",
        "urls": [
          "bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df",
          "dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/factory/interfaces/ISizeFactory.sol": {
        "keccak256": "0xebc4426038cc8d0b132bcb99fd436d8099035055535b05b5d34664f82ad876ed",
        "urls": [
          "bzz-raw://5a328aa6461e1804f26dc23809f417e67f44899ba37ec2b1b5714029d1e2aa5b",
          "dweb:/ipfs/QmTzGoJUGMTMbKqeoyioDt3uNZQnm7wRNg95bm24a6HB7b"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactoryOffchainGetters.sol": {
        "keccak256": "0x01193f70622dd06fa303e488c255bf9b86f4fd2150ded107df75eabb1c200403",
        "urls": [
          "bzz-raw://81f74325395f6f3c01d55991aa3e8b2e26c3bd8d80b3e061f3c3d90bea81603d",
          "dweb:/ipfs/QmWKW2CQdeYgK1x5L6i9k43wJVYxu9Qy6QUJD5aFoykQ8p"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactoryV1_7.sol": {
        "keccak256": "0x2cea6fa459a87abe5e964db97204841d3425b344cbb00ee83e5b98455ab67972",
        "urls": [
          "bzz-raw://f832221d6b28791cbe98bc832b452936b5acc0092817f1eaeed91fa7974c79b7",
          "dweb:/ipfs/QmXhdbhCm8eKnDbK6jztkPXy6JknGJS23EhF26Cy27ssdu"
        ],
        "license": "MIT"
      },
      "src/factory/libraries/Authorization.sol": {
        "keccak256": "0xf42a6c9392e33ad8d3be9045864c896a1552b4c3e4775198b990ea0b165f8908",
        "urls": [
          "bzz-raw://02603db5e7c1b4df6b1f474e24fbd3b82e33e46deb84de07d0222bb26d2781af",
          "dweb:/ipfs/QmaDuJawdoxgvVvMerZW8CMQZXKJPXhuH4RASMTfuMJX96"
        ],
        "license": "MIT"
      },
      "src/market/Size.sol": {
        "keccak256": "0xa8b5dbfd9416582916644462baf324b851ffb22e770f44b3c92802e16fc18583",
        "urls": [
          "bzz-raw://7087ea04a2898e8f7ede428c2e6bd78fd8f05f67f6a02becb973f1ca2d19d399",
          "dweb:/ipfs/QmYyNwLJgBdYkoHxdrZLfXa3hYUV3y883FVi1b3FHNC7pV"
        ],
        "license": "MIT"
      },
      "src/market/SizeStorage.sol": {
        "keccak256": "0x5761db233e84b406cc8e679ead486311f43996483785581180f1931f0ca796ba",
        "urls": [
          "bzz-raw://6ed922b076d2b8dc9b512cb9c1a3dc95ae4390fb9023c2d5f9da10be5302e386",
          "dweb:/ipfs/QmPavYUcHvkdBqTcZK6Ph6dwDKXg9258Y19KW772v9uM3i"
        ],
        "license": "MIT"
      },
      "src/market/SizeView.sol": {
        "keccak256": "0x9d184507cb8e498010122f0852ccc773b10ead57ce754068f6b03e4df16bb41f",
        "urls": [
          "bzz-raw://0661bff01b17b1043f57f8f149acc8e5dda2140106ab47c6dec788911484b28b",
          "dweb:/ipfs/QmQgCgbNarjZLKdjS66DYu98EtgZC9c7TK1PEophMNMPP6"
        ],
        "license": "MIT"
      },
      "src/market/SizeViewData.sol": {
        "keccak256": "0x06ad8df04416ffaf15415f3be0cdb4c4ac1213c0a7a6f8a869170c620149747b",
        "urls": [
          "bzz-raw://a0fc6d18dbf7eb2270bd70dd0bc10cde18e5968f9e037e2a57586b8bdc0d6f8f",
          "dweb:/ipfs/QmPH6e38WdmHMo9FyhJ4ELpmXFzH7GdreukXjZ5WjS4CVD"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/IMulticall.sol": {
        "keccak256": "0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41",
        "urls": [
          "bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989",
          "dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISize.sol": {
        "keccak256": "0x506b9707877f37a5c9d63084a3ec35e4fc8b7b131bf4663590d5a760a75ff5eb",
        "urls": [
          "bzz-raw://8de5c7f00281db9031a4623e28474b30f509b41d614769be81780257765eac1a",
          "dweb:/ipfs/QmcEwTS6b35nmPRuuxDbh2BPc1umihBcpyHdDySkvYzNPo"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISizeAdmin.sol": {
        "keccak256": "0x1f2fda9cf43a960e920186ce0414d596f0c73e20e0ab262a047ffcab5b8a4a9c",
        "urls": [
          "bzz-raw://092faa4adc6268f096580faebcf426c87def65e02525abfecd04aa1acfceaa88",
          "dweb:/ipfs/QmWtjocrjvMRqKH47XiP7GKPRPKPCX3ApnpgpFjt3X9eRf"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISizeView.sol": {
        "keccak256": "0x3255e2448b7d70f8e92a2a404211a309d1efff419e7d140479c1d327040f650f",
        "urls": [
          "bzz-raw://9f36c86c141e8f46710cf69b4b69b2a5c4b9fa49a9bf350dd56810bb173dc4bb",
          "dweb:/ipfs/QmcsXpr1jSaN5CEBemR1D4XTxdPdmCPQboDkb2yftv8LEz"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/IWETH.sol": {
        "keccak256": "0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c",
        "urls": [
          "bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e",
          "dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/v1.7/ISizeV1_7.sol": {
        "keccak256": "0x5be7f049ece5c38acc45e8230e13ceb1e77c835a3990a854456c7409209958d8",
        "urls": [
          "bzz-raw://8672c19394b2ad6e797614ca28e9341607dc0505ed09c6adfbb859a8c96dbb67",
          "dweb:/ipfs/QmXCeaqdKvnCwXDTkpe5PisAmwzmpq2zy9vtzNoAmHwPqQ"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/v1.7/ISizeViewV1_7.sol": {
        "keccak256": "0x1ae3e0e566182a39cea1e4a4b2f3ba8e47c9c5dc8aeed24fd5a90d35a5dd317e",
        "urls": [
          "bzz-raw://3c79e7a02e98992bca9e5bc5eb4513100b557f511b1cb0245f7838e12e87efeb",
          "dweb:/ipfs/QmPZDziwpJsReTqbzF7JiWntq4XitinnAJjDd393ePRB6T"
        ],
        "license": "MIT"
      },
      "src/market/libraries/AccountingLibrary.sol": {
        "keccak256": "0xaf63013204ceefcfea23c1843805dcbbdc3ca78f20075c50d1ff1e121b303ce6",
        "urls": [
          "bzz-raw://48e83453f178df9f745e91a408af5e51feb1a0c932c42052a6f2ada9be795225",
          "dweb:/ipfs/QmUxBEeqETbGSPTsZFttUxkiBGpJSqHr6LZJVuWWhH9giA"
        ],
        "license": "MIT"
      },
      "src/market/libraries/CapsLibrary.sol": {
        "keccak256": "0xbc9bb02b6d216723e2dc0ea7431e072c206a7318dab435d5b713c168c0aaaf09",
        "urls": [
          "bzz-raw://56837fc8e7df66ebc9b65790782d14a0bd14a096dea50d5f1d795bdb5cdfacc8",
          "dweb:/ipfs/QmXKaAPHzCnRsUAXuHKoJyR6cXQiRQ5dZtCdD4ZB2SthcP"
        ],
        "license": "MIT"
      },
      "src/market/libraries/DepositTokenLibrary.sol": {
        "keccak256": "0xe11c6f6c228fa1a8f10eb74f6db851e8b23f73664a4f92dd17da7cb0c349e7d1",
        "urls": [
          "bzz-raw://0bd0450b84ef1561454628afb863d3edd6248eea4d0deb2580de5fbb1728d34c",
          "dweb:/ipfs/QmakkuB6Pzahjo1SQ9Ybmic4ym96UaQ7e8iEb8btDVqEKv"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Errors.sol": {
        "keccak256": "0xb45510436b26e36c1e45c589203678bdbcfbfcf1ab44277c27234e20f9318b6f",
        "urls": [
          "bzz-raw://7df58668e11fb5e0108b20fe2db50fd44968001fa59d8a72edf7f9e69209f801",
          "dweb:/ipfs/QmVGKzAUywbQjXZLBosMHwjuu7HsNbfN1Qigb5NmUGYXp3"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Events.sol": {
        "keccak256": "0x381f68b7ee89897a3cd38f5b267a0bd7954aa6853283b6235b44fd1af2e24b0d",
        "urls": [
          "bzz-raw://b4930543bd6b4b90fe1f06f338cc05955b6d9cce34ef6c817afaebcb0cac4ea8",
          "dweb:/ipfs/QmPQXauGZ9BkhoUgEWKbzjkYr3wpxTpenYGR4K2BYYoKTH"
        ],
        "license": "MIT"
      },
      "src/market/libraries/LoanLibrary.sol": {
        "keccak256": "0x93d76a205f0dd0130d1bcf4657edf2c40921ca76b77d468d802c24e42ba9eccb",
        "urls": [
          "bzz-raw://7e10015fa9e6bc78c5a2ef23595c140aea8dd41e44adfa7bb24cb7551ae61cac",
          "dweb:/ipfs/QmP93Yb2WhDBPstvhDkNzTDyqXQsdLmhQd61oj9LFSVfJZ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Math.sol": {
        "keccak256": "0x445f0f8e7e74e16ce74d8563a083fa8c5a54142eb871f7e076f0569a5a940949",
        "urls": [
          "bzz-raw://9c34a2714a25dff091b872aa35056354c8a481112ff475204a31bc8db894eac3",
          "dweb:/ipfs/QmY5oew2GzqxaVA9f39hCr68V8tuhW5k4iB23kpXnPgx38"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Multicall.sol": {
        "keccak256": "0x557da60425f64fce42e25de2f1e5da989a01ac24e16bd587d1c8ea04c1bc4c03",
        "urls": [
          "bzz-raw://cf18600b85e8aa19b07f7e0abe082520ba2cebd190665d4a0b2ebe2395911d98",
          "dweb:/ipfs/Qmb3MEsVjEEciWNi3BfArzQbkcZ8aeQMAKVHp8E79GQrUd"
        ],
        "license": "MIT"
      },
      "src/market/libraries/OfferLibrary.sol": {
        "keccak256": "0x7926a94b1d39a8870808b0fbef5475f7b424589bde84f7edea97898e81bb13d8",
        "urls": [
          "bzz-raw://82d44cc7a629d0d74013efb9fe3980916571416e19f717132a3ef18be95e18a9",
          "dweb:/ipfs/QmNRPBYTT5t2sXFWVCcMjkZCXEmfU3hP4HMqgUHwzmX7Ys"
        ],
        "license": "MIT"
      },
      "src/market/libraries/RiskLibrary.sol": {
        "keccak256": "0x8fc54337eb367bfc09ab84a4a6bf7ccd4d2223d39d5b59acb9ba0ef6db920212",
        "urls": [
          "bzz-raw://d8956d37f6b33b13ad766774742be28f15b31444798eaddc5346743cea90578c",
          "dweb:/ipfs/QmefRwhFvL6XsLVL5h2xxn91qX4JxcFQbhnrd7f37J4yLR"
        ],
        "license": "MIT"
      },
      "src/market/libraries/YieldCurveLibrary.sol": {
        "keccak256": "0x8d4b1f45d67387169c3b38cc034305eba91ad306dac7021d4658e3b8bbc9a135",
        "urls": [
          "bzz-raw://438376203571e01cbb26ea58c192d3036a1e623c0c5897c52aeafaa90e281cd3",
          "dweb:/ipfs/QmcRNJKsudM9bZvCPCSEQWxPHvVEfQD1u2MPf8S33fh3o3"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "keccak256": "0xccb77182ce62b7ea147ee65ad7e32076f9e565a2605c18842087103e471f79f1",
        "urls": [
          "bzz-raw://571a3265ef2664d9fea268e229af1bc0e430f458efe6898a03532de799d959ef",
          "dweb:/ipfs/QmSA1hphKNeRdqKtKpbfM3yof9TTd13r9X5ei7jNiuhcwQ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "keccak256": "0xdcd1e28348e63db90f96e882221ddc4d44ca7f00840e26fb6ac4415b7912ef9b",
        "urls": [
          "bzz-raw://2c0b52e3901d79c80dd4a098f050ea9192488f71d585f41e9ba1bf10aabe9a50",
          "dweb:/ipfs/QmYvjvBtZVLivFpkw9UWbtW4YvgQNGiJVTJCW2PzcrEqvN"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Claim.sol": {
        "keccak256": "0xb71ab7b45ca738fcb802bf2ab29f9e6b37ae98d7463dbfdfa6a51361a1d4bcd6",
        "urls": [
          "bzz-raw://fc4357c1be3ccd8a37bb023d8cd8a8e346626423e54b93327e915be294c6de0c",
          "dweb:/ipfs/QmSvfKQ5xtJQmxQmPfyE8zqUaJLgDsxcGq55rQHxrWXftq"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Compensate.sol": {
        "keccak256": "0x5fa7ce8b74eeea09d12b78e3b31dbc7b37fca58b235299ad5d9f8e99ea400719",
        "urls": [
          "bzz-raw://4fbeff16ba76d1e3735f4d067ba16da7b0f35176ff9ea501a99f94063936bc5d",
          "dweb:/ipfs/QmYyogfmQmrpEksBc9uSjVQvYAWdaq31pJ3j6aAnc8D1rA"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/CopyLimitOrders.sol": {
        "keccak256": "0x7c0122a6757ea03a0e466ece6bfe1689804dbc67aa47bbe3959dbfbd9bdf5044",
        "urls": [
          "bzz-raw://5450e2ddb79dc482d93a34701e6559c972ba2247b6ce2fb2ce02c5ec15964bff",
          "dweb:/ipfs/QmdLeycgcqWjZ8gAvduxZpHRvsXGoa3BpvS9oJvhdH3QwZ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Deposit.sol": {
        "keccak256": "0xdb3dc341ad3b08322939d991f827a11be890163ce1b81bc8944e9da9f276593d",
        "urls": [
          "bzz-raw://146b20c28ee3528f60fe6c68e19e53c6d232d5bdb4341a54232921325ed02eb5",
          "dweb:/ipfs/QmZv7smGvYeHBsG2VMP6CiAeoLzHmcJpdNosRjRnZEQ8cn"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Initialize.sol": {
        "keccak256": "0xb48fd6e618d744052a68a6d963ca5b79c1375d929a5b3b11a38b89603ad8c9d6",
        "urls": [
          "bzz-raw://0f7bc6833318ebf3e19764140d1dac326ef602ad276bfae386a855a80e92b61e",
          "dweb:/ipfs/QmRuiU2RmFpqQZjtnJUiu2GaveK7Ykg85hKXrCBHHFxAQT"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "keccak256": "0xd3c46e7454dd7932f34149d28ec5a0b6ee4749a8903d78e722dc19163cf2732d",
        "urls": [
          "bzz-raw://ff03c519e678a0557d2a4954d917ae907d0d6a08aa8a7c3cd2be807930c5b9ff",
          "dweb:/ipfs/QmfYXxx4g1RFyg9is7EyuW2xBmd6w5t9s1HnArdqC7opAD"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "keccak256": "0xb93fd3da4105662549ce3044ae66cf658aed32e250acb6650df8e243e80d8c47",
        "urls": [
          "bzz-raw://0dc2b2170e792ee45f01e81b6f348c4a3d17b067b8b59015205969d6b08782ca",
          "dweb:/ipfs/QmUVMZeqRaVdVUkFe4LL5PYHXsxN5pmDS4wibsZHUXZXtk"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "keccak256": "0x18c3217aab5882299e55019dced21528174b2b395204f96e9a36004024f6ea93",
        "urls": [
          "bzz-raw://88f12e5b76e4d12c96236ca96058fe9faf979fc6de8bd0e68e4aa8eabc254b65",
          "dweb:/ipfs/QmSQx1eK9UDebvVWhTMfUfthvJ4GEpo3Uf9zyNJNuLurKW"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Repay.sol": {
        "keccak256": "0xe691e25d19c3c5ac9c6f8eb7a5d816b78fe34f859a21250b0ed5cb89511a928a",
        "urls": [
          "bzz-raw://9a6d6057553cd249aed266292e15db36afdabc572cf1b712e9c80a29260639da",
          "dweb:/ipfs/QmU8uMqjL2eDDS1hsMKhBmhDnXPcdB7b89xJDLtYUMrm6F"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "keccak256": "0x2d71cff942efc93fb7aa3a0a636e44562e0fa44ba4d503f323c6d08e7fdd8af3",
        "urls": [
          "bzz-raw://cdc43c74a42cffbf3844939df1d21a2b392ad3596ece8f1e9a6ebe08c2ec64be",
          "dweb:/ipfs/QmRUScCkvE4EADEUEvdwrsnzfLsq7xjFt1xsSZ4PZfs6J7"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "keccak256": "0xe8fe9ab69faccffa8539167973d13c5afe04ca8358316a092540171d084654b9",
        "urls": [
          "bzz-raw://0c626cb1ad9347b0eabd162f590c61175cdc687958bc6684843201713c5efa89",
          "dweb:/ipfs/QmNqZc3Zh2Nvj6exvG89XShBY4WtBJSh6iKWr7gZB8sQ3k"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "keccak256": "0x9eb93f5b5e2183e9dbef11967f23ff212cdf2e4850166173435425a6ac765664",
        "urls": [
          "bzz-raw://f8945337e751c520c47f46d708b996f23291e525bed22edaee2d86ee3a26edf8",
          "dweb:/ipfs/QmVmiy7nR5G1VhaXqs6wBVqeraRbET1mFdh6N5Mry51WGj"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "keccak256": "0x2616ee9d1e2a4e0e54e9dd320c6e7a77700c390f9fd03775f0f4318e5e18d3f7",
        "urls": [
          "bzz-raw://882e2fa2d69bdfea68718f7ae79db554f31b9503259a912ab59a4b4f3cbba360",
          "dweb:/ipfs/QmaSHBTBm4SNszTL3wbcTkyzbBDszFA1XgrPtGe2T98yj3"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "keccak256": "0x7e26d2d7ceb21fec0545a4f73e0b5e9c7edb6218b818003fac3b0ed48193b36c",
        "urls": [
          "bzz-raw://1b61c6604b0ea4a2b7aad3d397f51fb9684fa44117146eaec64e36d0382f4de8",
          "dweb:/ipfs/QmPfCFvb8DRLufZ5Ltgf28Rte4Y929APqvRi6LPHMGejzd"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "keccak256": "0x66c9620ed432ef9fb53ad41a967432f5c68cc1b48855743f04733ad9f4921d00",
        "urls": [
          "bzz-raw://b49ebd22fa2c2a4dd6644e87ca4cd2b4ff29978c6c149d0a6acf142d5ddf5e60",
          "dweb:/ipfs/QmUAbuDTEuSxewMbAZjkdnjQ7CG47C3PmyvWmKKeGXTbYz"
        ],
        "license": "MIT"
      },
      "src/market/token/NonTransferrableScaledTokenV1_5.sol": {
        "keccak256": "0xf97d987f52e49a11142ab9146ace9979d71feec057eff2d48304d73b57435c2c",
        "urls": [
          "bzz-raw://d5953d8df62fda44b6b67878e548eddedaf7e3e8f23671c9ed3216c8961dafe3",
          "dweb:/ipfs/QmWK1nKSm7rvEp4G376Pu6opEFSaoDAkNFGZhesxAwynA1"
        ],
        "license": "MIT"
      },
      "src/market/token/NonTransferrableToken.sol": {
        "keccak256": "0xf82118604ddbcd5d9ff708d739396e993d9621cff7b07f22a519141ca39a9e17",
        "urls": [
          "bzz-raw://4f371fb37a2ac76630302b1284d62e8657f038b504ce9884723574c2a3de32ec",
          "dweb:/ipfs/QmRsjmBirftC8Jih4jBG2BoJmpe4RRAAsEwsmtLjWicTVf"
        ],
        "license": "MIT"
      },
      "src/oracle/IPriceFeed.sol": {
        "keccak256": "0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90",
        "urls": [
          "bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48",
          "dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ"
        ],
        "license": "MIT"
      },
      "src/oracle/adapters/ChainlinkPriceFeed.sol": {
        "keccak256": "0x71a4ccb7d9469f4d7a914a81c754b1278152a387f8154e0f9793e0e3d010a599",
        "urls": [
          "bzz-raw://d953653f6481b344d0d00a677a8301f3006a50c3b90744c39cd3eda6f508818b",
          "dweb:/ipfs/QmYR1RvdMboMpH9ykJN5WwuC3AabSvPS2JA4t4afxa7gyh"
        ],
        "license": "MIT"
      },
      "src/oracle/adapters/ChainlinkSequencerUptimeFeed.sol": {
        "keccak256": "0x3d200d7fcc7c457a201f2bb32a0b68ea13b2b697cb300bbd587828bff5ffe8b8",
        "urls": [
          "bzz-raw://d72923e346e73eb0d42d055437dc6df059c3a8f27b08ff5aacd7cf7fdf90eec5",
          "dweb:/ipfs/QmPYENtSCwseMxYtQeKAkVe8DuCJYzRGpFRxDgw85xf2g8"
        ],
        "license": "MIT"
      },
      "src/oracle/adapters/UniswapV3PriceFeed.sol": {
        "keccak256": "0xea95d62fd50c16d48014c11d4dad500b53406aca773ed4e0632290f696b5998f",
        "urls": [
          "bzz-raw://81373a8e7c054eaecc7017be89cd4ee7d7f09eab09df8d568c944b72ef7c1abe",
          "dweb:/ipfs/QmQc4gmAoq2oYdBmnTsimDCVWas1tnFAMfxLvykbSTb5kd"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/PriceFeed.sol": {
        "keccak256": "0x36473f98f23968eaab386e44c1404652c7ef88c09db9772ab3195d8305829762",
        "urls": [
          "bzz-raw://5db471c144f3a43e9e07391890e7b29e39b64ae3fb0e73b66dd313801b03542a",
          "dweb:/ipfs/Qmf5GMB6SdKNCUPCbV4nYmxUjg6z3iKiweYU2ajY9BrGbC"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 237
}
