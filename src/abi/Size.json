{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "DEFAULT_ADMIN_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "buyCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditLimitOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct BuyCreditLimitOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct BuyCreditLimitParams",
              "components": [
                {
                  "name": "maxDueDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "internalType": "struct YieldCurve",
                  "components": [
                    {
                      "name": "tenors",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    },
                    {
                      "name": "aprs",
                      "type": "int256[]",
                      "internalType": "int256[]"
                    },
                    {
                      "name": "marketRateMultipliers",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "buyCreditMarketOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct BuyCreditMarketParams",
              "components": [
                {
                  "name": "borrower",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "exactAmountIn",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "claim",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ClaimParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "collateralRatio",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "compensate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CompensateParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "creditPositionToCompensateId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "compensateOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct CompensateOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct CompensateParams",
              "components": [
                {
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "creditPositionToCompensateId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "copyLimitOrders",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct CopyLimitOrdersParams",
          "components": [
            {
              "name": "copyAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "copyLoanOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            },
            {
              "name": "copyBorrowOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "copyLimitOrdersOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct CopyLimitOrdersOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct CopyLimitOrdersParams",
              "components": [
                {
                  "name": "copyAddress",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "internalType": "struct CopyLimitOrder",
                  "components": [
                    {
                      "name": "minTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "minAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "offsetAPR",
                      "type": "int256",
                      "internalType": "int256"
                    }
                  ]
                },
                {
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "internalType": "struct CopyLimitOrder",
                  "components": [
                    {
                      "name": "minTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxTenor",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "minAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "maxAPR",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "offsetAPR",
                      "type": "int256",
                      "internalType": "int256"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "data",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DataView",
          "components": [
            {
              "name": "nextDebtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "nextCreditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "contract IERC20Metadata"
            },
            {
              "name": "collateralToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "borrowTokenVault",
              "type": "address",
              "internalType": "contract NonTransferrableRebasingTokenVault"
            },
            {
              "name": "debtToken",
              "type": "address",
              "internalType": "contract NonTransferrableToken"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "contract IPool"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "debtTokenAmountToCollateralTokenAmount",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "depositOnBehalfOf",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct DepositOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct DepositParams",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "to", "type": "address", "internalType": "address" }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "feeConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBorrowOfferAPR",
      "inputs": [
        { "name": "borrower", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBuyCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct BuyCreditMarketParams",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "creditAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCreditPosition",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct CreditPosition",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            { "name": "forSale", "type": "bool", "internalType": "bool" },
            { "name": "credit", "type": "uint256", "internalType": "uint256" },
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPosition",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct DebtPosition",
          "components": [
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "futureValue",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "dueDate", "type": "uint256", "internalType": "uint256" },
            {
              "name": "liquidityIndexAtRepayment",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDebtPositionAssignedCollateral",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanOfferAPR",
      "inputs": [
        { "name": "lender", "type": "address", "internalType": "address" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanStatus",
      "inputs": [
        { "name": "positionId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "", "type": "uint8", "internalType": "enum LoanStatus" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPositionsCount",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSellCreditMarketSwapData",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
          "components": [
            {
              "name": "creditPosition",
              "type": "tuple",
              "internalType": "struct CreditPosition",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                { "name": "forSale", "type": "bool", "internalType": "bool" },
                {
                  "name": "credit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "debtPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "creditAmountIn",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "cashAmountOut",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "swapFee", "type": "uint256", "internalType": "uint256" },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSwapFee",
      "inputs": [
        { "name": "cash", "type": "uint256", "internalType": "uint256" },
        { "name": "tenor", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserCopyLimitOrders",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserCopyLimitOrders",
          "components": [
            {
              "name": "copyAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "copyLoanOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            },
            {
              "name": "copyBorrowOffer",
              "type": "tuple",
              "internalType": "struct CopyLimitOrder",
              "components": [
                {
                  "name": "minTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxTenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "minAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offsetAPR",
                  "type": "int256",
                  "internalType": "int256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserView",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct UserView",
          "components": [
            {
              "name": "user",
              "type": "tuple",
              "internalType": "struct User",
              "components": [
                {
                  "name": "loanOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "borrowOffer",
                  "type": "tuple",
                  "internalType": "struct LimitOrder",
                  "components": [
                    {
                      "name": "maxDueDate",
                      "type": "uint256",
                      "internalType": "uint256"
                    },
                    {
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "internalType": "struct YieldCurve",
                      "components": [
                        {
                          "name": "tenors",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        },
                        {
                          "name": "aprs",
                          "type": "int256[]",
                          "internalType": "int256[]"
                        },
                        {
                          "name": "marketRateMultipliers",
                          "type": "uint256[]",
                          "internalType": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            { "name": "account", "type": "address", "internalType": "address" },
            {
              "name": "collateralTokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrowTokenBalance",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "debtBalance",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        {
          "name": "f",
          "type": "tuple",
          "internalType": "struct InitializeFeeConfigParams",
          "components": [
            {
              "name": "swapFeeAPR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "fragmentationFee",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "liquidationRewardPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "overdueCollateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "collateralProtocolPercent",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "feeRecipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "r",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "o",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        },
        {
          "name": "d",
          "type": "tuple",
          "internalType": "struct InitializeDataParams",
          "components": [
            { "name": "weth", "type": "address", "internalType": "address" },
            {
              "name": "underlyingCollateralToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "underlyingBorrowToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePool",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "borrowTokenVault",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "sizeFactory",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isCreditPositionId",
      "inputs": [
        {
          "name": "creditPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionId",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDebtPositionLiquidatable",
      "inputs": [
        {
          "name": "debtPositionId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "liquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "deadline", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "liquidateWithReplacement",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct LiquidateWithReplacementParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "borrower",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "minimumCollateralProfit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "minAPR", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "liquidatorProfitCollateralToken",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "liquidatorProfitBorrowToken",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multicall",
      "inputs": [
        { "name": "_data", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [
        { "name": "results", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "oracle",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeOracleParams",
          "components": [
            {
              "name": "priceFeed",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "variablePoolBorrowRateStaleRateInterval",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "partialRepay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct PartialRepayParams",
          "components": [
            {
              "name": "creditPositionWithDebtToRepayId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "callerConfirmation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repay",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct RepayParams",
          "components": [
            {
              "name": "debtPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "borrower", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "riskConfig",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct InitializeRiskConfigParams",
          "components": [
            {
              "name": "crOpening",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "crLiquidation",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minimumCreditBorrowToken",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minTenor",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxTenor", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "selfLiquidate",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SelfLiquidateParams",
          "components": [
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "selfLiquidateOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SelfLiquidateOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SelfLiquidateParams",
              "components": [
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimit",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditLimitParams",
          "components": [
            {
              "name": "maxDueDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "curveRelativeTime",
              "type": "tuple",
              "internalType": "struct YieldCurve",
              "components": [
                {
                  "name": "tenors",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                },
                {
                  "name": "aprs",
                  "type": "int256[]",
                  "internalType": "int256[]"
                },
                {
                  "name": "marketRateMultipliers",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditLimitOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SellCreditLimitOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SellCreditLimitParams",
              "components": [
                {
                  "name": "maxDueDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "internalType": "struct YieldCurve",
                  "components": [
                    {
                      "name": "tenors",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    },
                    {
                      "name": "aprs",
                      "type": "int256[]",
                      "internalType": "int256[]"
                    },
                    {
                      "name": "marketRateMultipliers",
                      "type": "uint256[]",
                      "internalType": "uint256[]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarket",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SellCreditMarketParams",
          "components": [
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "creditPositionId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "tenor", "type": "uint256", "internalType": "uint256" },
            {
              "name": "deadline",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "maxAPR", "type": "uint256", "internalType": "uint256" },
            { "name": "exactAmountIn", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "sellCreditMarketOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SellCreditMarketOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SellCreditMarketParams",
              "components": [
                {
                  "name": "lender",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "creditPositionId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tenor",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "deadline",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "maxAPR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "exactAmountIn",
                  "type": "bool",
                  "internalType": "bool"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfiguration",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationParams",
          "components": [
            { "name": "vault", "type": "address", "internalType": "address" },
            {
              "name": "openingLimitBorrowCR",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "allCreditPositionsForSaleDisabled",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIdsForSale",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "creditPositionIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setUserConfigurationOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct SetUserConfigurationOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct SetUserConfigurationParams",
              "components": [
                {
                  "name": "vault",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "openingLimitBorrowCR",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "creditPositionIdsForSale",
                  "type": "bool",
                  "internalType": "bool"
                },
                {
                  "name": "creditPositionIds",
                  "type": "uint256[]",
                  "internalType": "uint256[]"
                }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "setVariablePoolBorrowRate",
      "inputs": [
        { "name": "borrowRate", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "sizeFactory",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ISizeFactory"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateConfig",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct UpdateConfigParams",
          "components": [
            { "name": "key", "type": "string", "internalType": "string" },
            { "name": "value", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "vaultOf",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct WithdrawParams",
          "components": [
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "to", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawOnBehalfOf",
      "inputs": [
        {
          "name": "externalParams",
          "type": "tuple",
          "internalType": "struct WithdrawOnBehalfOfParams",
          "components": [
            {
              "name": "params",
              "type": "tuple",
              "internalType": "struct WithdrawParams",
              "components": [
                {
                  "name": "token",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "to", "type": "address", "internalType": "address" }
              ]
            },
            {
              "name": "onBehalfOf",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "previousAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "newAdminRole",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        {
          "name": "role",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VariablePoolBorrowRateUpdated",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "newBorrowRate",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AccessControlBadConfirmation", "inputs": [] },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "neededRole", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "EnforcedPause", "inputs": [] },
    { "type": "error", "name": "ExpectedPause", "inputs": [] },
    { "type": "error", "name": "FailedCall", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "MUST_IMPROVE_COLLATERAL_RATIO",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "crBefore", "type": "uint256", "internalType": "uint256" },
        { "name": "crAfter", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "NULL_TENOR", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801562000014575f80fd5b506200001f62000025565b620000d9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000765760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d65780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051615989620001005f395f81816135d901528181613602015261376a01526159895ff3fe6080604052600436106103c9575f3560e01c806364eb0a71116101f4578063c73d983311610113578063e5af06ce116100a8578063f54ae18b11610078578063f54ae18b14610c5f578063f85c3cd414610c72578063fa7a5b1014610c91578063fa823af514610cae578063fd17174a14610cc1575f80fd5b8063e5af06ce14610bfb578063f052e7a414610c1a578063f1bf35c314610c2d578063f45bf01c14610c4c575f80fd5b8063ccd8d4d1116100e3578063ccd8d4d114610ba3578063d547741f14610bb6578063d8d933a514610bd5578063e05001f514610be8575f80fd5b8063c73d983314610b3f578063c7cd4d8714610b52578063ca40742c14610b65578063ccc9681514610b84575f80fd5b80638628babd11610189578063ac9650d811610159578063ac9650d814610a97578063ad3cb1cc14610ab7578063b36116f614610ae7578063b5ec748714610b13575f80fd5b80638628babd14610a3f5780638e57277614610a5257806391d1485414610a65578063a217fddf14610a84575f80fd5b80637c90a6ca116101c45780637c90a6ca146109825780637dc0d1d0146109d75780637f417c0614610a185780638456cb5914610a2b575f80fd5b806364eb0a711461080057806373d4a13a1461081f57806376c1b82f14610943578063780cafa81461096f575f80fd5b80632f2ff15d116102eb5780634f1ef2861161028057806353e043d41161025057806353e043d41461074a57806354137c7e1461075d57806354fd4d501461077c5780635c975abb146107b15780635cbc51eb146107d4575f80fd5b80634f1ef286146106fd5780634fd9a8a51461071057806352d1902d14610723578063536b9c7914610737575f80fd5b80633ae6d7c3116102bb5780633ae6d7c3146106a45780633e3c119b146106b75780633f4ba83a146106ca5780634cbd882c146106de575f80fd5b80632f2ff15d1461062757806336568abe146106465780633746f858146106655780633750192114610678575f80fd5b80631ca3b0cb116103615780632b4c9a20116103315780632b4c9a20146105aa5780632c60185c146105bd5780632cc884c5146105dc5780632ed28ba2146105fb575f80fd5b80631ca3b0cb146104eb5780631e5eb1d0146105145780631fcd4a3414610578578063248a9ca31461058b575f80fd5b80630cf8542f1161039c5780630cf8542f1461046c5780631970e5ea1461047f57806319a7359b146104ac5780631c4fd41c146104bf575f80fd5b806301ffc9a7146103cd57806302f2855a146104015780630317b9df146104165780630709df4514610435575b5f80fd5b3480156103d8575f80fd5b506103ec6103e7366004613db6565b610cd4565b60405190151581526020015b60405180910390f35b61041461040f366004613df3565b610d0a565b005b348015610421575f80fd5b50610414610430366004613e1d565b610ddf565b348015610440575f80fd5b5061045461044f366004613e62565b610ee3565b6040516001600160a01b0390911681526020016103f8565b61041461047a366004613df3565b610f4f565b34801561048a575f80fd5b5061049e610499366004613e7d565b610f7f565b6040519081526020016103f8565b6104146104ba366004613e94565b610f8a565b3480156104ca575f80fd5b506104de6104d9366004613e7d565b610fbe565b6040516103f89190613ea4565b3480156104f6575f80fd5b506104ff611039565b604080519283526020830191909152016103f8565b34801561051f575f80fd5b5061052861106c565b6040516103f89190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b610414610586366004614093565b61111e565b348015610596575f80fd5b5061049e6105a5366004613e7d565b611249565b6104146105b8366004613df3565b611269565b3480156105c8575f80fd5b5061049e6105d73660046140ae565b611296565b3480156105e7575f80fd5b5061049e6105f63660046140ce565b6112c9565b348015610606575f80fd5b5061061a6106153660046140f8565b611354565b6040516103f89190614140565b348015610632575f80fd5b5061041461064136600461419f565b6113d5565b348015610651575f80fd5b5061041461066036600461419f565b6113f7565b610414610673366004613e1d565b61142f565b348015610683575f80fd5b506106976106923660046140f8565b611455565b6040516103f891906141cd565b6104146106b2366004614251565b6114d6565b6104ff6106c536600461429f565b6116f1565b3480156106d5575f80fd5b5061041461191e565b3480156106e9575f80fd5b506104146106f83660046142b9565b611977565b61041461070b3660046142df565b611a3d565b61041461071e366004614578565b611a5c565b34801561072e575f80fd5b5061049e611b02565b6104146107453660046145e8565b611b1d565b610414610758366004614578565b611c0e565b348015610768575f80fd5b5061049e610777366004613e7d565b611cb4565b348015610787575f80fd5b5060408051808201909152600481526376312e3760e01b60208201525b6040516103f89190614686565b3480156107bc575f80fd5b505f805160206159348339815191525460ff166103ec565b3480156107df575f80fd5b506107f36107ee366004613e62565b611da0565b6040516103f89190614766565b34801561080b575f80fd5b506103ec61081a366004613e7d565b6121b2565b34801561082a575f80fd5b506108d260408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e09283015190911691810191909152610100016103f8565b34801561094e575f80fd5b5061096261095d366004613e7d565b6121be565b6040516103f89190614808565b61041461097d366004614816565b612284565b34801561098d575f80fd5b506109966122aa565b6040516103f891905f60a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b3480156109e2575f80fd5b506109eb612348565b6040805182516001600160a01b031681526020928301516001600160401b031692810192909252016103f8565b610414610a26366004614847565b6123cb565b348015610a36575f80fd5b5061041461246f565b610414610a4d3660046148f4565b6124c8565b610414610a60366004613df3565b61256e565b348015610a70575f80fd5b506103ec610a7f36600461419f565b61259b565b348015610a8f575f80fd5b5061049e5f81565b610aaa610aa5366004614928565b6125d1565b6040516103f89190614996565b348015610ac2575f80fd5b506107a4604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610af2575f80fd5b50610b06610b01366004613e62565b6125e6565b6040516103f89190614a28565b348015610b1e575f80fd5b50610b32610b2d366004613e7d565b61269e565b6040516103f89190614a60565b610414610b4d366004614093565b612784565b610414610b60366004614b1b565b6128b1565b348015610b70575f80fd5b5061049e610b7f366004613e62565b612957565b348015610b8f575f80fd5b506103ec610b9e366004613e7d565b6129da565b610414610bb1366004613e1d565b6129e5565b348015610bc1575f80fd5b50610414610bd036600461419f565b612a0b565b610414610be33660046140f8565b612a27565b61049e610bf6366004613df3565b612a5c565b348015610c06575f80fd5b506103ec610c15366004613e7d565b612bb1565b610414610c28366004614b99565b612c2c565b348015610c38575f80fd5b50610414610c47366004614bba565b612c59565b610414610c5a366004614c34565b612ec9565b610414610c6d366004614cc1565b612f74565b348015610c7d575f80fd5b5061049e610c8c3660046140ce565b61301a565b348015610c9c575f80fd5b50601c546001600160a01b0316610454565b610414610cbc366004614cc1565b61306a565b610414610ccf366004614c34565b613110565b5f6001600160e01b03198216637965db0b60e01b1480610d0457506301ffc9a760e01b6001600160e01b03198316145b92915050565b610d12613144565b604051635fed4de960e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__90635fed4de990610d4b905f908590600401614cdb565b5f6040518083038186803b158015610d61575f80fd5b505af4158015610d73573d5f803e3d5ffd5b505060405163d96aec4360e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__925063d96aec439150610db0905f908590600401614cdb565b5f6040518083038186803b158015610dc6575f80fd5b505af4158015610dd8573d5f803e3d5ffd5b5050505050565b5f610dea8133613176565b610e155760405163e2517d3f60e01b8152336004820152602481018290526044015b60405180910390fd5b60405163e57980dd60e01b815273__$72c16261390208f563094e6a4fc9f74031$__9063e57980dd90610e4e905f908690600401614d1d565b5f6040518083038186803b158015610e64575f80fd5b505af4158015610e76573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$72c16261390208f563094e6a4fc9f74031$__9250634752b3b39150610eb3905f908690600401614d1d565b5f6040518083038186803b158015610ec9575f80fd5b505af4158015610edb573d5f803e3d5ffd5b505050505050565b601a54604051630709df4560e01b81526001600160a01b0383811660048301525f921690630709df4590602401602060405180830381865afa158015610f2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d049190614da1565b610f7c604051806040016040528083803603810190610f6e9190614dbc565b81523360209091015261306a565b50565b5f610d04818361321f565b610f7c604051806060016040528083803603810190610fa991906140f8565b8152336020820181905260409091015261111e565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$674c94602fbdb88ca53d9ba4295c8813fa$__90637d62a7e090604401602060405180830381865af4158015611015573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d049190614dd6565b6011545f90819061104b908290614e08565b61105760025f19614e1b565b6012546110649190614e08565b915091509091565b6110a86040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__906386617e779060240160c060405180830381865af41580156110f5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111199190614e3a565b905090565b611126613144565b604051631e55c20b60e31b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9063f2ae10589061115f905f908590600401614f14565b5f6040518083038186803b158015611175575f80fd5b505af4158015611187573d5f803e3d5ffd5b5050604051630f6470bd60e01b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9250630f6470bd91506111c4905f908590600401614f14565b5f6040518083038186803b1580156111da575f80fd5b505af41580156111ec573d5f803e3d5ffd5b505050505f19815f01516020015103610f7c578051516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401610db0565b5f9081525f80516020615914833981519152602052604090206001015490565b610f7c6040518060400160405280838036038101906112889190614dbc565b815233602090910152612f74565b5f815f036112b7576040516301c85f6760e71b815260040160405180910390fd5b6112c25f848461341f565b9392505050565b60405163327ad2cd60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__9063327ad2cd906064015b602060405180830381865af4158015611330573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112c29190614f29565b61135c613bea565b604051631c81982560e11b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__90633903304a90611395905f908690600401614f40565b61014060405180830381865af41580156113b1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d049190614fcc565b6113de82611249565b6113e781613444565b6113f1838361344e565b50505050565b6001600160a01b03811633146114205760405163334bd91960e11b815260040160405180910390fd5b61142a82826134f6565b505050565b610f7c60405180604001604052808361144790615044565b815233602090910152611c0e565b61145d613c30565b60405163301d1d1560e21b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063c074745490611496905f908690600401614f40565b61012060405180830381865af41580156114b2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d04919061504f565b6114de613144565b602081015160405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af4158015611542573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115669190614f29565b60405163f9c417bd60e01b815290915073__$7fa168b5d238863382c2bf886894022425$__9063f9c417bd906115a2905f9087906004016150b1565b5f6040518083038186803b1580156115b8575f80fd5b505af41580156115ca573d5f803e3d5ffd5b5050604051634971bf9960e01b815273__$7fa168b5d238863382c2bf886894022425$__9250634971bf999150611607905f9087906004016150b1565b5f6040518083038186803b15801561161d575f80fd5b505af415801561162f573d5f803e3d5ffd5b505060405163046dbd1360e11b81525f600482018190526001600160a01b0386166024830152925073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__91506308db7a2690604401602060405180830381865af4158015611692573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116b69190614f29565b90508181116113f15760405163625a84dd60e01b81526001600160a01b03841660048201526024810183905260448101829052606401610e0c565b5f806116fb613144565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab6117268133613176565b61174c5760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b604051639f53ee0f60e01b815273__$d00168f5747027b5a56099c751031d7e40$__90639f53ee0f90611785905f90889060040161512c565b5f6040518083038186803b15801561179b575f80fd5b505af41580156117ad573d5f803e3d5ffd5b505060405163647a4b7560e11b815273__$d00168f5747027b5a56099c751031d7e40$__925063c8f496ea91506117ea905f90889060040161512c565b6040805180830381865af4158015611804573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118289190615140565b909350915073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__632d77afb65f6118586040880160208901613e62565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b15801561189b575f80fd5b505af41580156118ad573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$d00168f5747027b5a56099c751031d7e40$__9250636e6595c191506118ec905f9088908890600401615162565b5f6040518083038186803b158015611902575f80fd5b505af4158015611914573d5f803e3d5ffd5b5050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6119498133613176565b61196f5760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b610f7c61356f565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240386119a28133613176565b6119c85760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611a456135ce565b611a4e82613672565b611a5882826136a3565b5050565b611a64613144565b604051637125eda960e11b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__9063e24bdb5290611a9d905f908590600401615237565b5f6040518083038186803b158015611ab3575f80fd5b505af4158015611ac5573d5f803e3d5ffd5b505060405163184d91f360e31b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__925063c26c8f989150610db0905f908590600401615237565b5f611b0b61375f565b505f805160206158f483398151915290565b611b25613144565b604080516325f2df6f60e01b81525f6004820152825151602482015260208301516001600160a01b03908116604483015291830151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__906325f2df6f906084015f6040518083038186803b158015611b97575f80fd5b505af4158015611ba9573d5f803e3d5ffd5b5050604080516330e78a9160e11b81525f6004820152845151602482015260208501516001600160a01b03908116604483015291850151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__92506361cf15229150608401610db0565b611c16613144565b604051632d0c1e8b60e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__90632d0c1e8b90611c4f905f908590600401615237565b5f6040518083038186803b158015611c65575f80fd5b505af4158015611c77573d5f803e3d5ffd5b505060405163c0c66ed960e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__925063c0c66ed99150610db0905f908590600401615237565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015611d0d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d319190614f29565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$674c94602fbdb88ca53d9ba4295c8813fa$__906345ffd36d90611315905f90859060040161524f565b611da8613c67565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611e3a57602002820191905f5260205f20905b815481526020019060010190808311611e26575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611e9057602002820191905f5260205f20905b815481526020019060010190808311611e7c575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611ee657602002820191905f5260205f20905b815481526020019060010190808311611ed2575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015611f6c57602002820191905f5260205f20905b815481526020019060010190808311611f58575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611fc257602002820191905f5260205f20905b815481526020019060010190808311611fae575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561201857602002820191905f5260205f20905b815481526020019060010190808311612004575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa15801561209e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120c29190614f29565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015612112573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121369190614f29565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015612186573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121aa9190614f29565b905292915050565b6011545f908210610d04565b6121c6613ca1565b604051633978289f60e01b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90633978289f90604401602060405180830381865af415801561221a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061223e9190614f29565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b610f7c60405180604001604052808361229c9061528a565b8152336020909101526128b1565b6122d76040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063dd378fd69060240160a060405180830381865af4158015612324573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111199190615295565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063d72f4008906024016040805180830381865af41580156123a7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061111991906152f7565b6123d3613144565b6040516210aa0b60e31b815273__$45d7492db284be01938913cb41b9cac2a6$__90628550589061240a905f90859060040161532a565b5f6040518083038186803b158015612420575f80fd5b505af4158015612432573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$45d7492db284be01938913cb41b9cac2a6$__92506364140a839150610db0905f90859060040161532a565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61249a8133613176565b6124c05760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b610f7c6137a8565b6124d0613144565b6040516315868ea760e21b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__9063561a3a9c90612509905f908590600401615362565b5f6040518083038186803b15801561251f575f80fd5b505af4158015612531573d5f803e3d5ffd5b50506040516389e70deb60e01b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__92506389e70deb9150610db0905f908590600401615362565b610f7c60405180604001604052808380360381019061258d91906153bc565b8152336020909101526114d6565b5f9182525f80516020615914833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606125db613144565b6112c25f84846137f0565b6125ee613cd0565b506001600160a01b039081165f908152601b602090815260409182902082516060808201855282549095168152835160a08082018652600184015482526002840154828601526003840154828701526004840154828801526005840154608080840191909152838601929092528551908101865260068401548152600784015494810194909452600883015484860152600983015495840195909552600a90910154938201939093529082015290565b6126ce60405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015612722573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127469190614f29565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b61278c613144565b60405163160b9e6b60e31b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063b05cf358906127c5905f908590600401614f14565b5f6040518083038186803b1580156127db575f80fd5b505af41580156127ed573d5f803e3d5ffd5b5050604051639f46aa4160e01b815273__$c58e2605104bb31274ad8c04841b6a7550$__9250639f46aa41915061282a905f908590600401614f14565b5f6040518083038186803b158015612840575f80fd5b505af4158015612852573d5f803e3d5ffd5b505050505f19815f01516020015103610f7c5760208101516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401610db0565b6128b9613144565b6040516333d4ade560e01b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__906333d4ade5906128f2905f9085906004016153d6565b5f6040518083038186803b158015612908575f80fd5b505af415801561291a573d5f803e3d5ffd5b505060405163178bcac760e11b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__9250632f17958e9150610db0905f9085906004016153d6565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af41580156129b6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d049190614f29565b5f610d0481836138d8565b610f7c6040518060400160405280836129fd90615044565b815233602090910152611a5c565b612a1482611249565b612a1d81613444565b6113f183836134f6565b610f7c6040518060600160405280838152602001336001600160a01b03168152602001336001600160a01b0316815250612784565b5f612a65613144565b6040516320b5435f60e11b815273__$04d32033081e1e9356971d8f4b5098bcad$__9063416a86be90612a9e905f908690600401615452565b5f6040518083038186803b158015612ab4575f80fd5b505af4158015612ac6573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$04d32033081e1e9356971d8f4b5098bcad$__925063341a672c9150612b03905f908690600401615452565b602060405180830381865af4158015612b1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b429190614f29565b60405163489d188160e01b815290915073__$04d32033081e1e9356971d8f4b5098bcad$__9063489d188190612b80905f908690869060040161547a565b5f6040518083038186803b158015612b96575f80fd5b505af4158015612ba8573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__9063325191d290604401602060405180830381865af4158015612c08573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0491906154b0565b610f7c604051806040016040528083803603810190612c4b91906154cb565b8152336020909101526124c8565b5f612c626138fb565b805490915060ff600160401b82041615906001600160401b03165f81158015612c885750825b90505f826001600160401b03166001148015612ca35750303b155b905081158015612cb1575080155b15612ccf5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315612cf957845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__906369777eb990612d3a905f908e908e908e908e908e906004016155ff565b5f6040518083038186803b158015612d50575f80fd5b505af4158015612d62573d5f803e3d5ffd5b50505050612d6e613923565b612d76613923565b612d7e613923565b604051632ffdac7160e21b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__9063bff6b1c490612dbd905f908d908d908d908d9060040161567e565b5f6040518083038186803b158015612dd3575f80fd5b505af4158015612de5573d5f803e3d5ffd5b50505050612df55f801b8b61344e565b50612e207f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b61344e565b50612e4b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b61344e565b50612e767f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b61344e565b508315612ebd57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b612ed1613144565b604051635792057f60e11b81525f60048201528135602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__9063af240afe906044015f6040518083038186803b158015612f20575f80fd5b505af4158015612f32573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__92506341d373f29150604401610db0565b612f7c613144565b604051631005beb160e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__9063802df58890612fb5905f9085906004016156ec565b5f6040518083038186803b158015612fcb575f80fd5b505af4158015612fdd573d5f803e3d5ffd5b5050604051631cc17ae560e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__925063e60bd7289150610db0905f9085906004016156ec565b6040516333c7c71f60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__906333c7c71f90606401611315565b613072613144565b60405163024889b160e51b815273__$d49e499a4608ab3aca09b91fe5950492b6$__906349113620906130ab905f9085906004016156ec565b5f6040518083038186803b1580156130c1575f80fd5b505af41580156130d3573d5f803e3d5ffd5b505060405163a083c0ab60e01b815273__$d49e499a4608ab3aca09b91fe5950492b6$__925063a083c0ab9150610db0905f9085906004016156ec565b610f7c60405180606001604052808380360381019061312f9190615731565b81523360208201819052604090910152611b1d565b5f805160206159348339815191525460ff16156131745760405163d93c066560e01b815260040160405180910390fd5b565b5f613181838361259b565b1561318e57506001610d04565b601c546001600160a01b03166131a557505f610d04565b601c54604051632474521560e21b8152600481018590526001600160a01b038481166024830152909116906391d1485490604401602060405180830381865afa1580156131f4573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061321891906154b0565b9050610d04565b5f6112c283600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613277573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061329b9190614f29565b6132a690600a61582b565b6132b09084615836565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa1580156132fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061331e919061584d565b61332990600a61586d565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015613373573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613397919061584d565b6133a290600a61586d565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa1580156133ec573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134109190614f29565b61341a9190615836565b61392b565b5f61343c8361342e8685613937565b670de0b6b3a764000061392b565b949350505050565b610f7c813361394a565b5f5f80516020615914833981519152613467848461259b565b6134e6575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561349c3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610d04565b5f915050610d04565b5092915050565b5f5f8051602061591483398151915261350f848461259b565b156134e6575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610d04565b613577613983565b5f80516020615934833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061365457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166136485f805160206158f4833981519152546001600160a01b031690565b6001600160a01b031614155b156131745760405163703e46dd60e11b815260040160405180910390fd5b5f61367d8133613176565b611a585760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156136fd575060408051601f3d908101601f191682019092526136fa91810190614f29565b60015b61372557604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e0c565b5f805160206158f4833981519152811461375557604051632a87526960e21b815260048101829052602401610e0c565b61142a83836139b2565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146131745760405163703e46dd60e11b815260040160405180910390fd5b6137b0613144565b5f80516020615934833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336135b0565b6060816001600160401b0381111561380a5761380a613eca565b60405190808252806020026020018201604052801561383d57816020015b60608152602001906001900390816138285790505b5090505f5b828110156138d0576138ab308585848181106138605761386061587b565b9050602002810190613872919061588f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613a0792505050565b8282815181106138bd576138bd61587b565b6020908102919091010152600101613842565b509392505050565b5f6138e560025f19614e1b565b82101580156112c2575050601291909101541190565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610d04565b613174613a79565b5f61343c848484613a9e565b81545f906112c290836301e1338061392b565b613954828261259b565b611a585760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610e0c565b5f805160206159348339815191525460ff1661317457604051638dfc202b60e01b815260040160405180910390fd5b6139bb82613aca565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156139ff5761142a8282613a07565b611a58613b2d565b60605f80846001600160a01b031684604051613a2391906158d8565b5f60405180830381855af49150503d805f8114613a5b576040519150601f19603f3d011682016040523d82523d5f602084013e613a60565b606091505b5091509150613a70858383613b4c565b95945050505050565b613a81613ba8565b61317457604051631afcd79f60e31b815260040160405180910390fd5b5f825f190484118302158202613abb5763ad251c275f526004601cfd5b50910281810615159190040190565b806001600160a01b03163b5f03613aff57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e0c565b5f805160206158f483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b34156131745760405163b398979f60e01b815260040160405180910390fd5b606082613b6157613b5c82613bc1565b6112c2565b8151158015613b7857506001600160a01b0384163b155b15613ba157604051639996b31560e01b81526001600160a01b0385166004820152602401610e0c565b50806112c2565b5f613bb16138fb565b54600160401b900460ff16919050565b805115613bd15780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6040518060e00160405280613bfd613ca1565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060c00160405280613c43613ca1565b81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060a00160405280613c7a613d4e565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81525090565b60405180608001604052805f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b60405180606001604052805f6001600160a01b03168152602001613d176040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b8152602001613d496040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b905290565b6040518060800160405280613d61613d81565b8152602001613d6e613d81565b81525f6020820181905260409091015290565b60405180604001604052805f8152602001613d4960405180606001604052806060815260200160608152602001606081525090565b5f60208284031215613dc6575f80fd5b81356001600160e01b0319811681146112c2575f80fd5b5f60608284031215613ded575f80fd5b50919050565b5f60608284031215613e03575f80fd5b6112c28383613ddd565b5f60408284031215613ded575f80fd5b5f60208284031215613e2d575f80fd5b81356001600160401b03811115613e42575f80fd5b61343c84828501613e0d565b6001600160a01b0381168114610f7c575f80fd5b5f60208284031215613e72575f80fd5b81356112c281613e4e565b5f60208284031215613e8d575f80fd5b5035919050565b5f60e08284031215613ded575f80fd5b6020810160038310613ec457634e487b7160e01b5f52602160045260245ffd5b91905290565b634e487b7160e01b5f52604160045260245ffd5b60405160e081016001600160401b0381118282101715613f0057613f00613eca565b60405290565b604051606081016001600160401b0381118282101715613f0057613f00613eca565b604080519081016001600160401b0381118282101715613f0057613f00613eca565b60405160a081016001600160401b0381118282101715613f0057613f00613eca565b60405160c081016001600160401b0381118282101715613f0057613f00613eca565b604051601f8201601f191681016001600160401b0381118282101715613fb657613fb6613eca565b604052919050565b8015158114610f7c575f80fd5b5f60e08284031215613fdb575f80fd5b613fe3613ede565b90508135613ff081613e4e565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013561403481613fbe565b60c082015292915050565b5f6101208284031215614050575f80fd5b614058613f06565b90506140648383613fcb565b815260e082013561407481613e4e565b602082015261010082013561408881613e4e565b604082015292915050565b5f61012082840312156140a4575f80fd5b6112c2838361403f565b5f80604083850312156140bf575f80fd5b50508035926020909101359150565b5f80604083850312156140df575f80fd5b82356140ea81613e4e565b946020939093013593505050565b5f60e08284031215614108575f80fd5b6112c28383613fcb565b80516001600160a01b0316825260208082015115159083015260408082015190830152606090810151910152565b5f61014082019050614153828451614112565b60018060a01b036020840151166080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015260c083015161012083015292915050565b5f80604083850312156141b0575f80fd5b8235915060208301356141c281613e4e565b809150509250929050565b5f610120820190506141e0828451614112565b60208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015292915050565b5f60608284031215614229575f80fd5b614231613f06565b905081358152602082013560208201526040820135604082015292915050565b5f60808284031215614261575f80fd5b614269613f28565b6142738484614219565b8152606083013561428381613e4e565b60208201529392505050565b5f60a08284031215613ded575f80fd5b5f60a082840312156142af575f80fd5b6112c2838361428f565b5f602082840312156142c9575f80fd5b81356001600160801b03811681146112c2575f80fd5b5f80604083850312156142f0575f80fd5b82356142fb81613e4e565b91506020838101356001600160401b0380821115614317575f80fd5b818601915086601f83011261432a575f80fd5b81358181111561433c5761433c613eca565b61434e601f8201601f19168501613f8e565b91508082528784828501011115614363575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f6001600160401b0382111561439857614398613eca565b5060051b60200190565b5f82601f8301126143b1575f80fd5b813560206143c66143c183614380565b613f8e565b8083825260208201915060208460051b8701019350868411156143e7575f80fd5b602086015b8481101561440357803583529183019183016143ec565b509695505050505050565b5f6040828403121561441e575f80fd5b614426613f28565b9050813581526020808301356001600160401b0380821115614446575f80fd5b9084019060608287031215614459575f80fd5b614461613f06565b82358281111561446f575f80fd5b61447b888286016143a2565b825250838301358281111561448e575f80fd5b8301601f8101881361449e575f80fd5b80356144ac6143c182614380565b81815260059190911b8201860190868101908a8311156144ca575f80fd5b928701925b828410156144e8578335825292870192908701906144cf565b84880152505050604083013582811115614500575f80fd5b61450c888286016143a2565b60408301525080848601525050505092915050565b5f60408284031215614531575f80fd5b614539613f28565b905081356001600160401b03811115614550575f80fd5b61455c8482850161440e565b825250602082013561456d81613e4e565b602082015292915050565b5f60208284031215614588575f80fd5b81356001600160401b0381111561459d575f80fd5b61343c84828501614521565b5f602082840312156145b9575f80fd5b604051602081018181106001600160401b03821117156145db576145db613eca565b6040529135825250919050565b5f606082840312156145f8575f80fd5b614600613f06565b61460a84846145a9565b8152602083013561461a81613e4e565b6020820152604083013561462d81613e4e565b60408201529392505050565b5f5b8381101561465357818101518382015260200161463b565b50505f910152565b5f8151808452614672816020860160208601614639565b601f01601f19169290920160200192915050565b602081525f6112c2602083018461465b565b5f815180845260208085019450602084015f5b838110156146c7578151875295820195908201906001016146ab565b509495945050505050565b805182525f6020808301516040828601528051606060408701526146f960a0870182614698565b83830151603f19888303810160608a0152815180845291860193505f929091908601905b8084101561473d578451825293860193600193909301929086019061471d565b5060408501519550818982030160808a01526147598187614698565b9998505050505050505050565b602081525f825160a060208401528051608060c085015261478b6101408501826146d2565b9050602082015160bf198583030160e08601526147a882826146d2565b915050604082015161010085015260608201511515610120850152602085015191506147df60408501836001600160a01b03169052565b6040850151606085015260608501516080850152608085015160a0850152809250505092915050565b60808101610d048284614112565b5f60208284031215614826575f80fd5b81356001600160401b0381111561483b575f80fd5b61343c8482850161428f565b5f60408284031215614857575f80fd5b6112c28383613e0d565b5f60a08284031215614871575f80fd5b614879613f4a565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b5f61016082840312156148be575f80fd5b6148c6613f06565b905081356148d381613e4e565b81526148e28360208401614861565b60208201526140888360c08401614861565b5f6101808284031215614905575f80fd5b61490d613f28565b61491784846148ad565b815261016083013561428381613e4e565b5f8060208385031215614939575f80fd5b82356001600160401b038082111561494f575f80fd5b818501915085601f830112614962575f80fd5b813581811115614970575f80fd5b8660208260051b8501011115614984575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b828110156149eb57603f198886030184526149d985835161465b565b945092850192908501906001016149bd565b5092979650505050505050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b81516001600160a01b03168152602080830151610160830191614a4d908401826149f8565b5060408301516134ef60c08401826149f8565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015260808101610d04565b5f60a08284031215614aa4575f80fd5b614aac613f4a565b90508135614ab981613e4e565b8152602082810135908201526040820135614ad381613fbe565b60408201526060820135614ae681613fbe565b606082015260808201356001600160401b03811115614b03575f80fd5b614b0f848285016143a2565b60808301525092915050565b5f60208284031215614b2b575f80fd5b81356001600160401b0380821115614b41575f80fd5b9083019060408286031215614b54575f80fd5b614b5c613f28565b823582811115614b6a575f80fd5b614b7687828601614a94565b82525060208301359250614b8983613e4e565b6020810192909252509392505050565b5f6101608284031215613ded575f80fd5b5f60c08284031215613ded575f80fd5b5f805f805f6102808688031215614bcf575f80fd5b8535614bda81613e4e565b9450614be98760208801614baa565b9350614bf88760e0880161428f565b9250614c08876101808801613e0d565b9150614c18876101c08801614baa565b90509295509295909350565b5f60208284031215613ded575f80fd5b5f60208284031215614c44575f80fd5b6112c28383614c24565b5f60608284031215614c5e575f80fd5b614c66613f06565b90508135614c7381613e4e565b815260208281013590820152604082013561408881613e4e565b5f60808284031215614c9d575f80fd5b614ca5613f28565b9050614cb18383614c4e565b8152606082013561456d81613e4e565b5f60808284031215614cd1575f80fd5b6112c28383614c8d565b5f60808201905083825282356020830152602083013560408301526040830135614d0481613e4e565b6001600160a01b03166060929092019190915292915050565b828152604060208201525f8235601e19843603018112614d3b575f80fd5b83016020810190356001600160401b03811115614d56575f80fd5b803603821315614d64575f80fd5b604080850152806080850152808260a08601375f60a082860101526020850135606085015260a0601f19601f830116850101925050509392505050565b5f60208284031215614db1575f80fd5b81516112c281613e4e565b5f60608284031215614dcc575f80fd5b6112c28383614c4e565b5f60208284031215614de6575f80fd5b8151600381106112c2575f80fd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610d0457610d04614df4565b5f82614e3557634e487b7160e01b5f52601260045260245ffd5b500490565b5f60c08284031215614e4a575f80fd5b614e52613f6c565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a0830151614e8c81613e4e565b60a08201529392505050565b80516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a0818101519083015260c0908101511515910152565b614eef828251614e98565b60208101516001600160a01b0390811660e08401526040909101511661010090910152565b82815261014081016112c26020830184614ee4565b5f60208284031215614f39575f80fd5b5051919050565b82815261010081016112c26020830184614e98565b5f60808284031215614f65575f80fd5b604051608081018181106001600160401b0382111715614f8757614f87613eca565b80604052508091508251614f9a81613e4e565b81526020830151614faa81613fbe565b8060208301525060408301516040820152606083015160608201525092915050565b5f6101408284031215614fdd575f80fd5b614fe5613ede565b614fef8484614f55565b81526080830151614fff81613e4e565b8060208301525060a0830151604082015260c0830151606082015260e0830151608082015261010083015160a082015261012083015160c08201528091505092915050565b5f610d04368361440e565b5f6101208284031215615060575f80fd5b615068613f6c565b6150728484614f55565b81526080830151602082015260a0830151604082015260c0830151606082015260e0830151608082015261010083015160a08201528091505092915050565b918252805180516020808501919091528082015160408086019190915290910151606084015201516001600160a01b0316608082015260a00190565b8035825260208101356150ff81613e4e565b6001600160a01b031660208301526040818101359083015260608082013590830152608090810135910152565b82815260c081016112c260208301846150ed565b5f8060408385031215615151575f80fd5b505080516020909101519092909150565b83815260e0810161517660208301856150ed565b8260c0830152949350505050565b5f815160408452805160408501526020808201519150604060608601528151606060808701526151b760e0870182614698565b82840151607f19888303810160a08a0152815180845291850193505f929091908501905b808410156151fb57845182529385019360019390930192908501906151db565b5060408601519550818982030160c08a01526152178187614698565b978501516001600160a01b03169890940197909752509395945050505050565b828152604060208201525f61343c6040830184615184565b82815260a081016112c2602083018480516001600160a01b031682526020808201519083015260408082015190830152606090810151910152565b5f610d043683614a94565b5f60a082840312156152a5575f80fd5b6152ad613f4a565b82518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b6001600160401b0381168114610f7c575f80fd5b5f60408284031215615307575f80fd5b61530f613f28565b825161531a81613e4e565b81526020830151614283816152e3565b5f60608201905083825282356020830152602083013561534981613e4e565b6001600160a01b03166040929092019190915292915050565b5f6101a082019050838252825160018060a01b03808251166020850152602082015161539160408601826149f8565b50604082015191506153a660e08501836149f8565b8060208601511661018085015250509392505050565b5f606082840312156153cc575f80fd5b6112c28383614219565b828152604060208201525f825160408084015260018060a01b03808251166080850152602082015160a08501526040820151151560c08501526060820151151560e08501526080820151915060a0610100850152615438610120850183614698565b915080602086015116606085015250809150509392505050565b828152608081016112c260208301848035825260208082013590830152604090810135910152565b83815260a081016154a260208301858035825260208082013590830152604090810135910152565b826080830152949350505050565b5f602082840312156154c0575f80fd5b81516112c281613fbe565b5f61016082840312156154dc575f80fd5b6112c283836148ad565b803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a081013561552081613e4e565b6001600160a01b031660a0929092019190915250565b803561554181613e4e565b6001600160a01b03168252602081013561555a816152e3565b6001600160401b0381166020840152505050565b803561557981613e4e565b6001600160a01b03908116835260208201359061559582613e4e565b90811660208401526040820135906155ac82613e4e565b90811660408401526060820135906155c382613e4e565b90811660608401526080820135906155da82613e4e565b908116608084015260a0820135906155f182613e4e565b80821660a085015250505050565b8681526001600160a01b03861660208201526102a0810161562360408301876154e6565b843561010083015260208501356101208301526040850135610140830152606085013561016083015260808501356101808301526156656101a0830185615536565b6156736101e083018461556e565b979650505050505050565b858152610280810161569360208301876154e6565b843560e083015260208501356101008301526040850135610120830152606085013561014083015260808501356101608301526156d4610180830185615536565b6156e26101c083018461556e565b9695505050505050565b82815260a081016112c26020830184805180516001600160a01b0390811684526020808301518186015260409283015182169285019290925291015116606090910152565b5f60208284031215615741575f80fd5b6112c283836145a9565b600181815b8085111561578557815f190482111561576b5761576b614df4565b8085161561577857918102915b93841c9390800290615750565b509250929050565b5f8261579b57506001610d04565b816157a757505f610d04565b81600181146157bd57600281146157c7576157e3565b6001915050610d04565b60ff8411156157d8576157d8614df4565b50506001821b610d04565b5060208310610133831016604e8410600b8410161715615806575081810a610d04565b615810838361574b565b805f190482111561582357615823614df4565b029392505050565b5f6112c2838361578d565b8082028115828204841417610d0457610d04614df4565b5f6020828403121561585d575f80fd5b815160ff811681146112c2575f80fd5b5f6112c260ff84168361578d565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e198436030181126158a4575f80fd5b8301803591506001600160401b038211156158bd575f80fd5b6020019150368190038213156158d1575f80fd5b9250929050565b5f82516158e9818460208701614639565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212203a0ee8f09c8d2cdd22e99665e28bb0307008b8df266af8b4c1af1ad9edab32e364736f6c63430008170033",
    "sourceMap": "3628:11962:252:-:0;;;1171:4:87;1128:48;;4448:53:252;;;;;;;;;-1:-1:-1;4472:22:252;:20;:22::i;:::-;3628:11962;;7709:422:86;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:86;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:86;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:86;-1:-1:-1;;;;;8033:33:86;;;;;8085:29;;158:50:436;;;8085:29:86;;146:2:436;131:18;8085:29:86;;;;;;;7979:146;7758:373;7709:422::o;14:200:436:-;3628:11962:252;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/market/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 4317, "length": 20 },
          { "start": 7637, "length": 20 },
          { "start": 7798, "length": 20 },
          { "start": 8930, "length": 20 },
          { "start": 10218, "length": 20 }
        ]
      },
      "src/market/libraries/OfferLibrary.sol": {
        "OfferLibrary": [
          { "start": 5111, "length": 20 },
          { "start": 12616, "length": 20 }
        ]
      },
      "src/market/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 4903, "length": 20 },
          { "start": 5642, "length": 20 },
          { "start": 5977, "length": 20 },
          { "start": 6447, "length": 20 },
          { "start": 10639, "length": 20 },
          { "start": 10878, "length": 20 },
          { "start": 11472, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 7461, "length": 20 },
          { "start": 7560, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 4661, "length": 20 },
          { "start": 4760, "length": 20 },
          { "start": 5227, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 12269, "length": 20 },
          { "start": 12368, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 5752, "length": 20 },
          { "start": 5851, "length": 20 }
        ]
      },
      "src/market/libraries/actions/CopyLimitOrders.sol": {
        "CopyLimitOrders": [
          { "start": 9695, "length": 20 },
          { "start": 9794, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 12673, "length": 20 },
          { "start": 12772, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 11784, "length": 20 },
          { "start": 11917, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 11124, "length": 20 },
          { "start": 11223, "length": 20 },
          { "start": 11348, "length": 20 }
        ]
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 6235, "length": 20 },
          { "start": 6334, "length": 20 },
          { "start": 6590, "length": 20 }
        ]
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "PartialRepay": [
          { "start": 3617, "length": 20 },
          { "start": 3716, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 9441, "length": 20 },
          { "start": 9539, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 7268, "length": 20 },
          { "start": 7402, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 7027, "length": 20 },
          { "start": 7126, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5484, "length": 20 },
          { "start": 10395, "length": 20 },
          { "start": 10494, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 10696, "length": 20 },
          { "start": 10795, "length": 20 }
        ]
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3876, "length": 20 },
          { "start": 3975, "length": 20 },
          { "start": 4541, "length": 20 },
          { "start": 9196, "length": 20 },
          { "start": 9328, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 12427, "length": 20 },
          { "start": 12526, "length": 20 }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103c9575f3560e01c806364eb0a71116101f4578063c73d983311610113578063e5af06ce116100a8578063f54ae18b11610078578063f54ae18b14610c5f578063f85c3cd414610c72578063fa7a5b1014610c91578063fa823af514610cae578063fd17174a14610cc1575f80fd5b8063e5af06ce14610bfb578063f052e7a414610c1a578063f1bf35c314610c2d578063f45bf01c14610c4c575f80fd5b8063ccd8d4d1116100e3578063ccd8d4d114610ba3578063d547741f14610bb6578063d8d933a514610bd5578063e05001f514610be8575f80fd5b8063c73d983314610b3f578063c7cd4d8714610b52578063ca40742c14610b65578063ccc9681514610b84575f80fd5b80638628babd11610189578063ac9650d811610159578063ac9650d814610a97578063ad3cb1cc14610ab7578063b36116f614610ae7578063b5ec748714610b13575f80fd5b80638628babd14610a3f5780638e57277614610a5257806391d1485414610a65578063a217fddf14610a84575f80fd5b80637c90a6ca116101c45780637c90a6ca146109825780637dc0d1d0146109d75780637f417c0614610a185780638456cb5914610a2b575f80fd5b806364eb0a711461080057806373d4a13a1461081f57806376c1b82f14610943578063780cafa81461096f575f80fd5b80632f2ff15d116102eb5780634f1ef2861161028057806353e043d41161025057806353e043d41461074a57806354137c7e1461075d57806354fd4d501461077c5780635c975abb146107b15780635cbc51eb146107d4575f80fd5b80634f1ef286146106fd5780634fd9a8a51461071057806352d1902d14610723578063536b9c7914610737575f80fd5b80633ae6d7c3116102bb5780633ae6d7c3146106a45780633e3c119b146106b75780633f4ba83a146106ca5780634cbd882c146106de575f80fd5b80632f2ff15d1461062757806336568abe146106465780633746f858146106655780633750192114610678575f80fd5b80631ca3b0cb116103615780632b4c9a20116103315780632b4c9a20146105aa5780632c60185c146105bd5780632cc884c5146105dc5780632ed28ba2146105fb575f80fd5b80631ca3b0cb146104eb5780631e5eb1d0146105145780631fcd4a3414610578578063248a9ca31461058b575f80fd5b80630cf8542f1161039c5780630cf8542f1461046c5780631970e5ea1461047f57806319a7359b146104ac5780631c4fd41c146104bf575f80fd5b806301ffc9a7146103cd57806302f2855a146104015780630317b9df146104165780630709df4514610435575b5f80fd5b3480156103d8575f80fd5b506103ec6103e7366004613db6565b610cd4565b60405190151581526020015b60405180910390f35b61041461040f366004613df3565b610d0a565b005b348015610421575f80fd5b50610414610430366004613e1d565b610ddf565b348015610440575f80fd5b5061045461044f366004613e62565b610ee3565b6040516001600160a01b0390911681526020016103f8565b61041461047a366004613df3565b610f4f565b34801561048a575f80fd5b5061049e610499366004613e7d565b610f7f565b6040519081526020016103f8565b6104146104ba366004613e94565b610f8a565b3480156104ca575f80fd5b506104de6104d9366004613e7d565b610fbe565b6040516103f89190613ea4565b3480156104f6575f80fd5b506104ff611039565b604080519283526020830191909152016103f8565b34801561051f575f80fd5b5061052861106c565b6040516103f89190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201516001600160a01b03169181019190915260c00190565b610414610586366004614093565b61111e565b348015610596575f80fd5b5061049e6105a5366004613e7d565b611249565b6104146105b8366004613df3565b611269565b3480156105c8575f80fd5b5061049e6105d73660046140ae565b611296565b3480156105e7575f80fd5b5061049e6105f63660046140ce565b6112c9565b348015610606575f80fd5b5061061a6106153660046140f8565b611354565b6040516103f89190614140565b348015610632575f80fd5b5061041461064136600461419f565b6113d5565b348015610651575f80fd5b5061041461066036600461419f565b6113f7565b610414610673366004613e1d565b61142f565b348015610683575f80fd5b506106976106923660046140f8565b611455565b6040516103f891906141cd565b6104146106b2366004614251565b6114d6565b6104ff6106c536600461429f565b6116f1565b3480156106d5575f80fd5b5061041461191e565b3480156106e9575f80fd5b506104146106f83660046142b9565b611977565b61041461070b3660046142df565b611a3d565b61041461071e366004614578565b611a5c565b34801561072e575f80fd5b5061049e611b02565b6104146107453660046145e8565b611b1d565b610414610758366004614578565b611c0e565b348015610768575f80fd5b5061049e610777366004613e7d565b611cb4565b348015610787575f80fd5b5060408051808201909152600481526376312e3760e01b60208201525b6040516103f89190614686565b3480156107bc575f80fd5b505f805160206159348339815191525460ff166103ec565b3480156107df575f80fd5b506107f36107ee366004613e62565b611da0565b6040516103f89190614766565b34801561080b575f80fd5b506103ec61081a366004613e7d565b6121b2565b34801561082a575f80fd5b506108d260408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252601154815260125460208201526014546001600160a01b03908116928201929092526015548216606082015260165482166080820152601a54821660a0820152601854821660c082015260195490911660e082015290565b604080518251815260208084015190820152828201516001600160a01b039081169282019290925260608084015183169082015260808084015183169082015260a08084015183169082015260c08084015183169082015260e09283015190911691810191909152610100016103f8565b34801561094e575f80fd5b5061096261095d366004613e7d565b6121be565b6040516103f89190614808565b61041461097d366004614816565b612284565b34801561098d575f80fd5b506109966122aa565b6040516103f891905f60a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b3480156109e2575f80fd5b506109eb612348565b6040805182516001600160a01b031681526020928301516001600160401b031692810192909252016103f8565b610414610a26366004614847565b6123cb565b348015610a36575f80fd5b5061041461246f565b610414610a4d3660046148f4565b6124c8565b610414610a60366004613df3565b61256e565b348015610a70575f80fd5b506103ec610a7f36600461419f565b61259b565b348015610a8f575f80fd5b5061049e5f81565b610aaa610aa5366004614928565b6125d1565b6040516103f89190614996565b348015610ac2575f80fd5b506107a4604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610af2575f80fd5b50610b06610b01366004613e62565b6125e6565b6040516103f89190614a28565b348015610b1e575f80fd5b50610b32610b2d366004613e7d565b61269e565b6040516103f89190614a60565b610414610b4d366004614093565b612784565b610414610b60366004614b1b565b6128b1565b348015610b70575f80fd5b5061049e610b7f366004613e62565b612957565b348015610b8f575f80fd5b506103ec610b9e366004613e7d565b6129da565b610414610bb1366004613e1d565b6129e5565b348015610bc1575f80fd5b50610414610bd036600461419f565b612a0b565b610414610be33660046140f8565b612a27565b61049e610bf6366004613df3565b612a5c565b348015610c06575f80fd5b506103ec610c15366004613e7d565b612bb1565b610414610c28366004614b99565b612c2c565b348015610c38575f80fd5b50610414610c47366004614bba565b612c59565b610414610c5a366004614c34565b612ec9565b610414610c6d366004614cc1565b612f74565b348015610c7d575f80fd5b5061049e610c8c3660046140ce565b61301a565b348015610c9c575f80fd5b50601c546001600160a01b0316610454565b610414610cbc366004614cc1565b61306a565b610414610ccf366004614c34565b613110565b5f6001600160e01b03198216637965db0b60e01b1480610d0457506301ffc9a760e01b6001600160e01b03198316145b92915050565b610d12613144565b604051635fed4de960e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__90635fed4de990610d4b905f908590600401614cdb565b5f6040518083038186803b158015610d61575f80fd5b505af4158015610d73573d5f803e3d5ffd5b505060405163d96aec4360e01b815273__$1ffb1d284a100711dc8ce94ffbdfd13eea$__925063d96aec439150610db0905f908590600401614cdb565b5f6040518083038186803b158015610dc6575f80fd5b505af4158015610dd8573d5f803e3d5ffd5b5050505050565b5f610dea8133613176565b610e155760405163e2517d3f60e01b8152336004820152602481018290526044015b60405180910390fd5b60405163e57980dd60e01b815273__$72c16261390208f563094e6a4fc9f74031$__9063e57980dd90610e4e905f908690600401614d1d565b5f6040518083038186803b158015610e64575f80fd5b505af4158015610e76573d5f803e3d5ffd5b5050604051634752b3b360e01b815273__$72c16261390208f563094e6a4fc9f74031$__9250634752b3b39150610eb3905f908690600401614d1d565b5f6040518083038186803b158015610ec9575f80fd5b505af4158015610edb573d5f803e3d5ffd5b505050505050565b601a54604051630709df4560e01b81526001600160a01b0383811660048301525f921690630709df4590602401602060405180830381865afa158015610f2b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d049190614da1565b610f7c604051806040016040528083803603810190610f6e9190614dbc565b81523360209091015261306a565b50565b5f610d04818361321f565b610f7c604051806060016040528083803603810190610fa991906140f8565b8152336020820181905260409091015261111e565b6040516303eb153f60e51b81525f60048201819052602482018390529073__$674c94602fbdb88ca53d9ba4295c8813fa$__90637d62a7e090604401602060405180830381865af4158015611015573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d049190614dd6565b6011545f90819061104b908290614e08565b61105760025f19614e1b565b6012546110649190614e08565b915091509091565b6110a86040518060c001604052805f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b031681525090565b6040516386617e7760e01b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__906386617e779060240160c060405180830381865af41580156110f5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111199190614e3a565b905090565b611126613144565b604051631e55c20b60e31b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9063f2ae10589061115f905f908590600401614f14565b5f6040518083038186803b158015611175575f80fd5b505af4158015611187573d5f803e3d5ffd5b5050604051630f6470bd60e01b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__9250630f6470bd91506111c4905f908590600401614f14565b5f6040518083038186803b1580156111da575f80fd5b505af41580156111ec573d5f803e3d5ffd5b505050505f19815f01516020015103610f7c578051516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401610db0565b5f9081525f80516020615914833981519152602052604090206001015490565b610f7c6040518060400160405280838036038101906112889190614dbc565b815233602090910152612f74565b5f815f036112b7576040516301c85f6760e71b815260040160405180910390fd5b6112c25f848461341f565b9392505050565b60405163327ad2cd60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__9063327ad2cd906064015b602060405180830381865af4158015611330573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112c29190614f29565b61135c613bea565b604051631c81982560e11b815273__$909b104b05b98ab9b02bd00c4a2f54926d$__90633903304a90611395905f908690600401614f40565b61014060405180830381865af41580156113b1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d049190614fcc565b6113de82611249565b6113e781613444565b6113f1838361344e565b50505050565b6001600160a01b03811633146114205760405163334bd91960e11b815260040160405180910390fd5b61142a82826134f6565b505050565b610f7c60405180604001604052808361144790615044565b815233602090910152611c0e565b61145d613c30565b60405163301d1d1560e21b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063c074745490611496905f908690600401614f40565b61012060405180830381865af41580156114b2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d04919061504f565b6114de613144565b602081015160405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af4158015611542573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115669190614f29565b60405163f9c417bd60e01b815290915073__$7fa168b5d238863382c2bf886894022425$__9063f9c417bd906115a2905f9087906004016150b1565b5f6040518083038186803b1580156115b8575f80fd5b505af41580156115ca573d5f803e3d5ffd5b5050604051634971bf9960e01b815273__$7fa168b5d238863382c2bf886894022425$__9250634971bf999150611607905f9087906004016150b1565b5f6040518083038186803b15801561161d575f80fd5b505af415801561162f573d5f803e3d5ffd5b505060405163046dbd1360e11b81525f600482018190526001600160a01b0386166024830152925073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__91506308db7a2690604401602060405180830381865af4158015611692573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116b69190614f29565b90508181116113f15760405163625a84dd60e01b81526001600160a01b03841660048201526024810183905260448101829052606401610e0c565b5f806116fb613144565b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab6117268133613176565b61174c5760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b604051639f53ee0f60e01b815273__$d00168f5747027b5a56099c751031d7e40$__90639f53ee0f90611785905f90889060040161512c565b5f6040518083038186803b15801561179b575f80fd5b505af41580156117ad573d5f803e3d5ffd5b505060405163647a4b7560e11b815273__$d00168f5747027b5a56099c751031d7e40$__925063c8f496ea91506117ea905f90889060040161512c565b6040805180830381865af4158015611804573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118289190615140565b909350915073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__632d77afb65f6118586040880160208901613e62565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015f6040518083038186803b15801561189b575f80fd5b505af41580156118ad573d5f803e3d5ffd5b5050604051636e6595c160e01b815273__$d00168f5747027b5a56099c751031d7e40$__9250636e6595c191506118ec905f9088908890600401615162565b5f6040518083038186803b158015611902575f80fd5b505af4158015611914573d5f803e3d5ffd5b5050505050915091565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6119498133613176565b61196f5760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b610f7c61356f565b7f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240386119a28133613176565b6119c85760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b600d80546001600160801b038481166001600160c01b031983168117600160801b426001600160401b031602179093556040805191909216808252602082019390935233917f26b8010a81fad3e15c7545637c99390bdeb250bf0a67e4cf43c3d220ec2acc31910160405180910390a2505050565b611a456135ce565b611a4e82613672565b611a5882826136a3565b5050565b611a64613144565b604051637125eda960e11b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__9063e24bdb5290611a9d905f908590600401615237565b5f6040518083038186803b158015611ab3575f80fd5b505af4158015611ac5573d5f803e3d5ffd5b505060405163184d91f360e31b815273__$339bef8b42d49ef7fc0392a1b9554f9551$__925063c26c8f989150610db0905f908590600401615237565b5f611b0b61375f565b505f805160206158f483398151915290565b611b25613144565b604080516325f2df6f60e01b81525f6004820152825151602482015260208301516001600160a01b03908116604483015291830151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__906325f2df6f906084015f6040518083038186803b158015611b97575f80fd5b505af4158015611ba9573d5f803e3d5ffd5b5050604080516330e78a9160e11b81525f6004820152845151602482015260208501516001600160a01b03908116604483015291850151909116606482015273__$c19cfa413da1baf02a2307c9fe3d8deda6$__92506361cf15229150608401610db0565b611c16613144565b604051632d0c1e8b60e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__90632d0c1e8b90611c4f905f908590600401615237565b5f6040518083038186803b158015611c65575f80fd5b505af4158015611c77573d5f803e3d5ffd5b505060405163c0c66ed960e01b815273__$f215670302542f95b8fc754ac02a4bfcb4$__925063c0c66ed99150610db0905f908590600401615237565b604051634c9829bf60e11b81525f600482018190526024820183905290819073__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015611d0d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d319190614f29565b6040805160808101825282546001600160a01b03168152600183015460208201526002830154818301526003909201546060830152516345ffd36d60e01b815290915073__$674c94602fbdb88ca53d9ba4295c8813fa$__906345ffd36d90611315905f90859060040161524f565b611da8613c67565b604080516001600160a01b0384165f908152600e60209081529083902061016083018452805461012084019081528451600183018054608095810283018601909752606082018781529596879660a088019687959487946101408b01949193909284928491840182828015611e3a57602002820191905f5260205f20905b815481526020019060010190808311611e26575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611e9057602002820191905f5260205f20905b815481526020019060010190808311611e7c575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611ee657602002820191905f5260205f20905b815481526020019060010190808311611ed2575b505050505081525050815250508152602001600482016040518060400160405290815f8201548152602001600182016040518060600160405290815f8201805480602002602001604051908101604052809291908181526020018280548015611f6c57602002820191905f5260205f20905b815481526020019060010190808311611f58575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611fc257602002820191905f5260205f20905b815481526020019060010190808311611fae575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561201857602002820191905f5260205f20905b815481526020019060010190808311612004575b505050919092525050509052508152600882015460208083019190915260099092015460ff1615156040918201529183526001600160a01b0386811691840182905260165483516370a0823160e01b815260048101939093529390920192909116906370a0823190602401602060405180830381865afa15801561209e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120c29190614f29565b8152601a546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015612112573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121369190614f29565b81526018546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015612186573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121aa9190614f29565b905292915050565b6011545f908210610d04565b6121c6613ca1565b604051633978289f60e01b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90633978289f90604401602060405180830381865af415801561221a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061223e9190614f29565b6040805160808101825282546001600160a01b0381168252600160a01b900460ff1615156020820152600183015491810191909152600290910154606082015292915050565b610f7c60405180604001604052808361229c9061528a565b8152336020909101526128b1565b6122d76040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b604051636e9bc7eb60e11b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063dd378fd69060240160a060405180830381865af4158015612324573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111199190615295565b604080518082019091525f8082526020820152604051631ae5e80160e31b81525f600482015273__$72c16261390208f563094e6a4fc9f74031$__9063d72f4008906024016040805180830381865af41580156123a7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061111991906152f7565b6123d3613144565b6040516210aa0b60e31b815273__$45d7492db284be01938913cb41b9cac2a6$__90628550589061240a905f90859060040161532a565b5f6040518083038186803b158015612420575f80fd5b505af4158015612432573d5f803e3d5ffd5b50506040516364140a8360e01b815273__$45d7492db284be01938913cb41b9cac2a6$__92506364140a839150610db0905f90859060040161532a565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61249a8133613176565b6124c05760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b610f7c6137a8565b6124d0613144565b6040516315868ea760e21b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__9063561a3a9c90612509905f908590600401615362565b5f6040518083038186803b15801561251f575f80fd5b505af4158015612531573d5f803e3d5ffd5b50506040516389e70deb60e01b815273__$41bd1ea6f49e3611a223dba0ae97878d32$__92506389e70deb9150610db0905f908590600401615362565b610f7c60405180604001604052808380360381019061258d91906153bc565b8152336020909101526114d6565b5f9182525f80516020615914833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606125db613144565b6112c25f84846137f0565b6125ee613cd0565b506001600160a01b039081165f908152601b602090815260409182902082516060808201855282549095168152835160a08082018652600184015482526002840154828601526003840154828701526004840154828801526005840154608080840191909152838601929092528551908101865260068401548152600784015494810194909452600883015484860152600983015495840195909552600a90910154938201939093529082015290565b6126ce60405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b604051634c9829bf60e11b81525f60048201526024810183905273__$674c94602fbdb88ca53d9ba4295c8813fa$__90639930537e90604401602060405180830381865af4158015612722573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127469190614f29565b6040805160808101825282546001600160a01b0316815260018301546020820152600283015491810191909152600390910154606082015292915050565b61278c613144565b60405163160b9e6b60e31b815273__$c58e2605104bb31274ad8c04841b6a7550$__9063b05cf358906127c5905f908590600401614f14565b5f6040518083038186803b1580156127db575f80fd5b505af41580156127ed573d5f803e3d5ffd5b5050604051639f46aa4160e01b815273__$c58e2605104bb31274ad8c04841b6a7550$__9250639f46aa41915061282a905f908590600401614f14565b5f6040518083038186803b158015612840575f80fd5b505af4158015612852573d5f803e3d5ffd5b505050505f19815f01516020015103610f7c5760208101516040516316bbd7db60e11b81525f60048201526001600160a01b03909116602482015273__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__90632d77afb690604401610db0565b6128b9613144565b6040516333d4ade560e01b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__906333d4ade5906128f2905f9085906004016153d6565b5f6040518083038186803b158015612908575f80fd5b505af415801561291a573d5f803e3d5ffd5b505060405163178bcac760e11b815273__$f56cb86c34e0dd0dca51f5a3538433e18c$__9250632f17958e9150610db0905f9085906004016153d6565b60405163046dbd1360e11b81525f600482018190526001600160a01b03831660248301529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__906308db7a2690604401602060405180830381865af41580156129b6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d049190614f29565b5f610d0481836138d8565b610f7c6040518060400160405280836129fd90615044565b815233602090910152611a5c565b612a1482611249565b612a1d81613444565b6113f183836134f6565b610f7c6040518060600160405280838152602001336001600160a01b03168152602001336001600160a01b0316815250612784565b5f612a65613144565b6040516320b5435f60e11b815273__$04d32033081e1e9356971d8f4b5098bcad$__9063416a86be90612a9e905f908690600401615452565b5f6040518083038186803b158015612ab4575f80fd5b505af4158015612ac6573d5f803e3d5ffd5b5050604051630d0699cb60e21b815273__$04d32033081e1e9356971d8f4b5098bcad$__925063341a672c9150612b03905f908690600401615452565b602060405180830381865af4158015612b1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612b429190614f29565b60405163489d188160e01b815290915073__$04d32033081e1e9356971d8f4b5098bcad$__9063489d188190612b80905f908690869060040161547a565b5f6040518083038186803b158015612b96575f80fd5b505af4158015612ba8573d5f803e3d5ffd5b50505050919050565b604051631928c8e960e11b81525f60048201819052602482018390529073__$b44e0fdf2f6bdeffc1681a5a467d23dde6$__9063325191d290604401602060405180830381865af4158015612c08573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0491906154b0565b610f7c604051806040016040528083803603810190612c4b91906154cb565b8152336020909101526124c8565b5f612c626138fb565b805490915060ff600160401b82041615906001600160401b03165f81158015612c885750825b90505f826001600160401b03166001148015612ca35750303b155b905081158015612cb1575080155b15612ccf5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315612cf957845460ff60401b1916600160401b1785555b6040516369777eb960e01b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__906369777eb990612d3a905f908e908e908e908e908e906004016155ff565b5f6040518083038186803b158015612d50575f80fd5b505af4158015612d62573d5f803e3d5ffd5b50505050612d6e613923565b612d76613923565b612d7e613923565b604051632ffdac7160e21b815273__$d02cb2608d6f3ad3f53f4dd3f26f81b8ea$__9063bff6b1c490612dbd905f908d908d908d908d9060040161567e565b5f6040518083038186803b158015612dd3575f80fd5b505af4158015612de5573d5f803e3d5ffd5b50505050612df55f801b8b61344e565b50612e207f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b61344e565b50612e4b7ffc8737ab85eb45125971625a9ebdb75cc78e01d5c1fa80c4c6e5203f47bc4fab8b61344e565b50612e767f1eae1854c74a696c6de86fd3c6383d5c1e2c33fbc86e1aa6b6c872d95bd240388b61344e565b508315612ebd57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b612ed1613144565b604051635792057f60e11b81525f60048201528135602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__9063af240afe906044015f6040518083038186803b158015612f20575f80fd5b505af4158015612f32573d5f803e3d5ffd5b50506040516320e9b9f960e11b81525f60048201528335602482015273__$ebce6ba8505acc62d937fb713060c40a3c$__92506341d373f29150604401610db0565b612f7c613144565b604051631005beb160e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__9063802df58890612fb5905f9085906004016156ec565b5f6040518083038186803b158015612fcb575f80fd5b505af4158015612fdd573d5f803e3d5ffd5b5050604051631cc17ae560e31b815273__$7947dedfaba9c59621bd8bcc87e3fb80f1$__925063e60bd7289150610db0905f9085906004016156ec565b6040516333c7c71f60e01b81525f600482018190526001600160a01b0384166024830152604482018390529073__$fad1da84a532053b53119316a58e977f10$__906333c7c71f90606401611315565b613072613144565b60405163024889b160e51b815273__$d49e499a4608ab3aca09b91fe5950492b6$__906349113620906130ab905f9085906004016156ec565b5f6040518083038186803b1580156130c1575f80fd5b505af41580156130d3573d5f803e3d5ffd5b505060405163a083c0ab60e01b815273__$d49e499a4608ab3aca09b91fe5950492b6$__925063a083c0ab9150610db0905f9085906004016156ec565b610f7c60405180606001604052808380360381019061312f9190615731565b81523360208201819052604090910152611b1d565b5f805160206159348339815191525460ff16156131745760405163d93c066560e01b815260040160405180910390fd5b565b5f613181838361259b565b1561318e57506001610d04565b601c546001600160a01b03166131a557505f610d04565b601c54604051632474521560e21b8152600481018590526001600160a01b038481166024830152909116906391d1485490604401602060405180830381865afa1580156131f4573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061321891906154b0565b9050610d04565b5f6112c283600c015f015f9054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015613277573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061329b9190614f29565b6132a690600a61582b565b6132b09084615836565b60148501546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa1580156132fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061331e919061584d565b61332990600a61586d565b60158601546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015613373573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613397919061584d565b6133a290600a61586d565b600c87015460408051634c6afee560e11b815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181865afa1580156133ec573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906134109190614f29565b61341a9190615836565b61392b565b5f61343c8361342e8685613937565b670de0b6b3a764000061392b565b949350505050565b610f7c813361394a565b5f5f80516020615914833981519152613467848461259b565b6134e6575f848152602082815260408083206001600160a01b03871684529091529020805460ff1916600117905561349c3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610d04565b5f915050610d04565b5092915050565b5f5f8051602061591483398151915261350f848461259b565b156134e6575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610d04565b613577613983565b5f80516020615934833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061365457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166136485f805160206158f4833981519152546001600160a01b031690565b6001600160a01b031614155b156131745760405163703e46dd60e11b815260040160405180910390fd5b5f61367d8133613176565b611a585760405163e2517d3f60e01b815233600482015260248101829052604401610e0c565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156136fd575060408051601f3d908101601f191682019092526136fa91810190614f29565b60015b61372557604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610e0c565b5f805160206158f4833981519152811461375557604051632a87526960e21b815260048101829052602401610e0c565b61142a83836139b2565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146131745760405163703e46dd60e11b815260040160405180910390fd5b6137b0613144565b5f80516020615934833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336135b0565b6060816001600160401b0381111561380a5761380a613eca565b60405190808252806020026020018201604052801561383d57816020015b60608152602001906001900390816138285790505b5090505f5b828110156138d0576138ab308585848181106138605761386061587b565b9050602002810190613872919061588f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250613a0792505050565b8282815181106138bd576138bd61587b565b6020908102919091010152600101613842565b509392505050565b5f6138e560025f19614e1b565b82101580156112c2575050601291909101541190565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610d04565b613174613a79565b5f61343c848484613a9e565b81545f906112c290836301e1338061392b565b613954828261259b565b611a585760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610e0c565b5f805160206159348339815191525460ff1661317457604051638dfc202b60e01b815260040160405180910390fd5b6139bb82613aca565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156139ff5761142a8282613a07565b611a58613b2d565b60605f80846001600160a01b031684604051613a2391906158d8565b5f60405180830381855af49150503d805f8114613a5b576040519150601f19603f3d011682016040523d82523d5f602084013e613a60565b606091505b5091509150613a70858383613b4c565b95945050505050565b613a81613ba8565b61317457604051631afcd79f60e31b815260040160405180910390fd5b5f825f190484118302158202613abb5763ad251c275f526004601cfd5b50910281810615159190040190565b806001600160a01b03163b5f03613aff57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610e0c565b5f805160206158f483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b34156131745760405163b398979f60e01b815260040160405180910390fd5b606082613b6157613b5c82613bc1565b6112c2565b8151158015613b7857506001600160a01b0384163b155b15613ba157604051639996b31560e01b81526001600160a01b0385166004820152602401610e0c565b50806112c2565b5f613bb16138fb565b54600160401b900460ff16919050565b805115613bd15780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b6040518060e00160405280613bfd613ca1565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060c00160405280613c43613ca1565b81526020015f81526020015f81526020015f81526020015f81526020015f81525090565b6040518060a00160405280613c7a613d4e565b81526020015f6001600160a01b031681526020015f81526020015f81526020015f81525090565b60405180608001604052805f6001600160a01b031681526020015f151581526020015f81526020015f81525090565b60405180606001604052805f6001600160a01b03168152602001613d176040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b8152602001613d496040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b905290565b6040518060800160405280613d61613d81565b8152602001613d6e613d81565b81525f6020820181905260409091015290565b60405180604001604052805f8152602001613d4960405180606001604052806060815260200160608152602001606081525090565b5f60208284031215613dc6575f80fd5b81356001600160e01b0319811681146112c2575f80fd5b5f60608284031215613ded575f80fd5b50919050565b5f60608284031215613e03575f80fd5b6112c28383613ddd565b5f60408284031215613ded575f80fd5b5f60208284031215613e2d575f80fd5b81356001600160401b03811115613e42575f80fd5b61343c84828501613e0d565b6001600160a01b0381168114610f7c575f80fd5b5f60208284031215613e72575f80fd5b81356112c281613e4e565b5f60208284031215613e8d575f80fd5b5035919050565b5f60e08284031215613ded575f80fd5b6020810160038310613ec457634e487b7160e01b5f52602160045260245ffd5b91905290565b634e487b7160e01b5f52604160045260245ffd5b60405160e081016001600160401b0381118282101715613f0057613f00613eca565b60405290565b604051606081016001600160401b0381118282101715613f0057613f00613eca565b604080519081016001600160401b0381118282101715613f0057613f00613eca565b60405160a081016001600160401b0381118282101715613f0057613f00613eca565b60405160c081016001600160401b0381118282101715613f0057613f00613eca565b604051601f8201601f191681016001600160401b0381118282101715613fb657613fb6613eca565b604052919050565b8015158114610f7c575f80fd5b5f60e08284031215613fdb575f80fd5b613fe3613ede565b90508135613ff081613e4e565b808252506020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013561403481613fbe565b60c082015292915050565b5f6101208284031215614050575f80fd5b614058613f06565b90506140648383613fcb565b815260e082013561407481613e4e565b602082015261010082013561408881613e4e565b604082015292915050565b5f61012082840312156140a4575f80fd5b6112c2838361403f565b5f80604083850312156140bf575f80fd5b50508035926020909101359150565b5f80604083850312156140df575f80fd5b82356140ea81613e4e565b946020939093013593505050565b5f60e08284031215614108575f80fd5b6112c28383613fcb565b80516001600160a01b0316825260208082015115159083015260408082015190830152606090810151910152565b5f61014082019050614153828451614112565b60018060a01b036020840151166080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015260c083015161012083015292915050565b5f80604083850312156141b0575f80fd5b8235915060208301356141c281613e4e565b809150509250929050565b5f610120820190506141e0828451614112565b60208301516080830152604083015160a0830152606083015160c0830152608083015160e083015260a083015161010083015292915050565b5f60608284031215614229575f80fd5b614231613f06565b905081358152602082013560208201526040820135604082015292915050565b5f60808284031215614261575f80fd5b614269613f28565b6142738484614219565b8152606083013561428381613e4e565b60208201529392505050565b5f60a08284031215613ded575f80fd5b5f60a082840312156142af575f80fd5b6112c2838361428f565b5f602082840312156142c9575f80fd5b81356001600160801b03811681146112c2575f80fd5b5f80604083850312156142f0575f80fd5b82356142fb81613e4e565b91506020838101356001600160401b0380821115614317575f80fd5b818601915086601f83011261432a575f80fd5b81358181111561433c5761433c613eca565b61434e601f8201601f19168501613f8e565b91508082528784828501011115614363575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f6001600160401b0382111561439857614398613eca565b5060051b60200190565b5f82601f8301126143b1575f80fd5b813560206143c66143c183614380565b613f8e565b8083825260208201915060208460051b8701019350868411156143e7575f80fd5b602086015b8481101561440357803583529183019183016143ec565b509695505050505050565b5f6040828403121561441e575f80fd5b614426613f28565b9050813581526020808301356001600160401b0380821115614446575f80fd5b9084019060608287031215614459575f80fd5b614461613f06565b82358281111561446f575f80fd5b61447b888286016143a2565b825250838301358281111561448e575f80fd5b8301601f8101881361449e575f80fd5b80356144ac6143c182614380565b81815260059190911b8201860190868101908a8311156144ca575f80fd5b928701925b828410156144e8578335825292870192908701906144cf565b84880152505050604083013582811115614500575f80fd5b61450c888286016143a2565b60408301525080848601525050505092915050565b5f60408284031215614531575f80fd5b614539613f28565b905081356001600160401b03811115614550575f80fd5b61455c8482850161440e565b825250602082013561456d81613e4e565b602082015292915050565b5f60208284031215614588575f80fd5b81356001600160401b0381111561459d575f80fd5b61343c84828501614521565b5f602082840312156145b9575f80fd5b604051602081018181106001600160401b03821117156145db576145db613eca565b6040529135825250919050565b5f606082840312156145f8575f80fd5b614600613f06565b61460a84846145a9565b8152602083013561461a81613e4e565b6020820152604083013561462d81613e4e565b60408201529392505050565b5f5b8381101561465357818101518382015260200161463b565b50505f910152565b5f8151808452614672816020860160208601614639565b601f01601f19169290920160200192915050565b602081525f6112c2602083018461465b565b5f815180845260208085019450602084015f5b838110156146c7578151875295820195908201906001016146ab565b509495945050505050565b805182525f6020808301516040828601528051606060408701526146f960a0870182614698565b83830151603f19888303810160608a0152815180845291860193505f929091908601905b8084101561473d578451825293860193600193909301929086019061471d565b5060408501519550818982030160808a01526147598187614698565b9998505050505050505050565b602081525f825160a060208401528051608060c085015261478b6101408501826146d2565b9050602082015160bf198583030160e08601526147a882826146d2565b915050604082015161010085015260608201511515610120850152602085015191506147df60408501836001600160a01b03169052565b6040850151606085015260608501516080850152608085015160a0850152809250505092915050565b60808101610d048284614112565b5f60208284031215614826575f80fd5b81356001600160401b0381111561483b575f80fd5b61343c8482850161428f565b5f60408284031215614857575f80fd5b6112c28383613e0d565b5f60a08284031215614871575f80fd5b614879613f4a565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015292915050565b5f61016082840312156148be575f80fd5b6148c6613f06565b905081356148d381613e4e565b81526148e28360208401614861565b60208201526140888360c08401614861565b5f6101808284031215614905575f80fd5b61490d613f28565b61491784846148ad565b815261016083013561428381613e4e565b5f8060208385031215614939575f80fd5b82356001600160401b038082111561494f575f80fd5b818501915085601f830112614962575f80fd5b813581811115614970575f80fd5b8660208260051b8501011115614984575f80fd5b60209290920196919550909350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b828110156149eb57603f198886030184526149d985835161465b565b945092850192908501906001016149bd565b5092979650505050505050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b81516001600160a01b03168152602080830151610160830191614a4d908401826149f8565b5060408301516134ef60c08401826149f8565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015260808101610d04565b5f60a08284031215614aa4575f80fd5b614aac613f4a565b90508135614ab981613e4e565b8152602082810135908201526040820135614ad381613fbe565b60408201526060820135614ae681613fbe565b606082015260808201356001600160401b03811115614b03575f80fd5b614b0f848285016143a2565b60808301525092915050565b5f60208284031215614b2b575f80fd5b81356001600160401b0380821115614b41575f80fd5b9083019060408286031215614b54575f80fd5b614b5c613f28565b823582811115614b6a575f80fd5b614b7687828601614a94565b82525060208301359250614b8983613e4e565b6020810192909252509392505050565b5f6101608284031215613ded575f80fd5b5f60c08284031215613ded575f80fd5b5f805f805f6102808688031215614bcf575f80fd5b8535614bda81613e4e565b9450614be98760208801614baa565b9350614bf88760e0880161428f565b9250614c08876101808801613e0d565b9150614c18876101c08801614baa565b90509295509295909350565b5f60208284031215613ded575f80fd5b5f60208284031215614c44575f80fd5b6112c28383614c24565b5f60608284031215614c5e575f80fd5b614c66613f06565b90508135614c7381613e4e565b815260208281013590820152604082013561408881613e4e565b5f60808284031215614c9d575f80fd5b614ca5613f28565b9050614cb18383614c4e565b8152606082013561456d81613e4e565b5f60808284031215614cd1575f80fd5b6112c28383614c8d565b5f60808201905083825282356020830152602083013560408301526040830135614d0481613e4e565b6001600160a01b03166060929092019190915292915050565b828152604060208201525f8235601e19843603018112614d3b575f80fd5b83016020810190356001600160401b03811115614d56575f80fd5b803603821315614d64575f80fd5b604080850152806080850152808260a08601375f60a082860101526020850135606085015260a0601f19601f830116850101925050509392505050565b5f60208284031215614db1575f80fd5b81516112c281613e4e565b5f60608284031215614dcc575f80fd5b6112c28383614c4e565b5f60208284031215614de6575f80fd5b8151600381106112c2575f80fd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610d0457610d04614df4565b5f82614e3557634e487b7160e01b5f52601260045260245ffd5b500490565b5f60c08284031215614e4a575f80fd5b614e52613f6c565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a0830151614e8c81613e4e565b60a08201529392505050565b80516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a0818101519083015260c0908101511515910152565b614eef828251614e98565b60208101516001600160a01b0390811660e08401526040909101511661010090910152565b82815261014081016112c26020830184614ee4565b5f60208284031215614f39575f80fd5b5051919050565b82815261010081016112c26020830184614e98565b5f60808284031215614f65575f80fd5b604051608081018181106001600160401b0382111715614f8757614f87613eca565b80604052508091508251614f9a81613e4e565b81526020830151614faa81613fbe565b8060208301525060408301516040820152606083015160608201525092915050565b5f6101408284031215614fdd575f80fd5b614fe5613ede565b614fef8484614f55565b81526080830151614fff81613e4e565b8060208301525060a0830151604082015260c0830151606082015260e0830151608082015261010083015160a082015261012083015160c08201528091505092915050565b5f610d04368361440e565b5f6101208284031215615060575f80fd5b615068613f6c565b6150728484614f55565b81526080830151602082015260a0830151604082015260c0830151606082015260e0830151608082015261010083015160a08201528091505092915050565b918252805180516020808501919091528082015160408086019190915290910151606084015201516001600160a01b0316608082015260a00190565b8035825260208101356150ff81613e4e565b6001600160a01b031660208301526040818101359083015260608082013590830152608090810135910152565b82815260c081016112c260208301846150ed565b5f8060408385031215615151575f80fd5b505080516020909101519092909150565b83815260e0810161517660208301856150ed565b8260c0830152949350505050565b5f815160408452805160408501526020808201519150604060608601528151606060808701526151b760e0870182614698565b82840151607f19888303810160a08a0152815180845291850193505f929091908501905b808410156151fb57845182529385019360019390930192908501906151db565b5060408601519550818982030160c08a01526152178187614698565b978501516001600160a01b03169890940197909752509395945050505050565b828152604060208201525f61343c6040830184615184565b82815260a081016112c2602083018480516001600160a01b031682526020808201519083015260408082015190830152606090810151910152565b5f610d043683614a94565b5f60a082840312156152a5575f80fd5b6152ad613f4a565b82518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b6001600160401b0381168114610f7c575f80fd5b5f60408284031215615307575f80fd5b61530f613f28565b825161531a81613e4e565b81526020830151614283816152e3565b5f60608201905083825282356020830152602083013561534981613e4e565b6001600160a01b03166040929092019190915292915050565b5f6101a082019050838252825160018060a01b03808251166020850152602082015161539160408601826149f8565b50604082015191506153a660e08501836149f8565b8060208601511661018085015250509392505050565b5f606082840312156153cc575f80fd5b6112c28383614219565b828152604060208201525f825160408084015260018060a01b03808251166080850152602082015160a08501526040820151151560c08501526060820151151560e08501526080820151915060a0610100850152615438610120850183614698565b915080602086015116606085015250809150509392505050565b828152608081016112c260208301848035825260208082013590830152604090810135910152565b83815260a081016154a260208301858035825260208082013590830152604090810135910152565b826080830152949350505050565b5f602082840312156154c0575f80fd5b81516112c281613fbe565b5f61016082840312156154dc575f80fd5b6112c283836148ad565b803582526020810135602083015260408101356040830152606081013560608301526080810135608083015260a081013561552081613e4e565b6001600160a01b031660a0929092019190915250565b803561554181613e4e565b6001600160a01b03168252602081013561555a816152e3565b6001600160401b0381166020840152505050565b803561557981613e4e565b6001600160a01b03908116835260208201359061559582613e4e565b90811660208401526040820135906155ac82613e4e565b90811660408401526060820135906155c382613e4e565b90811660608401526080820135906155da82613e4e565b908116608084015260a0820135906155f182613e4e565b80821660a085015250505050565b8681526001600160a01b03861660208201526102a0810161562360408301876154e6565b843561010083015260208501356101208301526040850135610140830152606085013561016083015260808501356101808301526156656101a0830185615536565b6156736101e083018461556e565b979650505050505050565b858152610280810161569360208301876154e6565b843560e083015260208501356101008301526040850135610120830152606085013561014083015260808501356101608301526156d4610180830185615536565b6156e26101c083018461556e565b9695505050505050565b82815260a081016112c26020830184805180516001600160a01b0390811684526020808301518186015260409283015182169285019290925291015116606090910152565b5f60208284031215615741575f80fd5b6112c283836145a9565b600181815b8085111561578557815f190482111561576b5761576b614df4565b8085161561577857918102915b93841c9390800290615750565b509250929050565b5f8261579b57506001610d04565b816157a757505f610d04565b81600181146157bd57600281146157c7576157e3565b6001915050610d04565b60ff8411156157d8576157d8614df4565b50506001821b610d04565b5060208310610133831016604e8410600b8410161715615806575081810a610d04565b615810838361574b565b805f190482111561582357615823614df4565b029392505050565b5f6112c2838361578d565b8082028115828204841417610d0457610d04614df4565b5f6020828403121561585d575f80fd5b815160ff811681146112c2575f80fd5b5f6112c260ff84168361578d565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e198436030181126158a4575f80fd5b8301803591506001600160401b038211156158bd575f80fd5b6020019150368190038213156158d1575f80fd5b9250929050565b5f82516158e9818460208701614639565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212203a0ee8f09c8d2cdd22e99665e28bb0307008b8df266af8b4c1af1ad9edab32e364736f6c63430008170033",
    "sourceMapi;:::-;;:::i;:::-;;;470:14:436;;463:22;445:41;;433:2;418:18;3443:202:83;;;;;;;;14203:199:252;;;;;;:::i;:::-;;:::i;:::-;;6398:259;;;;;;;;;;-1:-1:-1;6398:259:252;;;;;:::i;:::-;;:::i;4602:128:254:-;;;;;;;;;;-1:-1:-1;4602:128:254;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2152:32:436;;;2134:51;;2122:2;2107:18;4602:128:254;1988:203:436;7756:180:252;;;;;;:::i;:::-;;:::i;2509:172:254:-;;;;;;;;;;-1:-1:-1;2509:172:254;;;;;:::i;:::-;;:::i;:::-;;;2789:25:436;;;2777:2;2762:18;2509:172:254;2643:177:436;9894:259:252;;;;;;:::i;:::-;;:::i;5518:133:254:-;;;;;;;;;;-1:-1:-1;5518:133:254;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5687:244::-;;;;;;;;;;;;;:::i;:::-;;;;3564:25:436;;;3620:2;3605:18;;3598:34;;;;3537:18;5687:244:254;3390:248:436;2717:125:254;;;;;;;;;;;;;:::i;:::-;;;;;;3898:13:436;;3880:32;;3968:4;3956:17;;;3950:24;3928:20;;;3921:54;4031:4;4019:17;;;4013:24;3991:20;;;3984:54;4094:4;4082:17;;;4076:24;4054:20;;;4047:54;4157:4;4145:17;;;4139:24;4117:20;;;4110:54;4240:3;4212:17;;;4206:24;-1:-1:-1;;;;;4202:50:436;4180:20;;;4173:80;;;;3867:3;3852:19;;3643:616;10189:464:252;;;;;;:::i;:::-;;:::i;4759:191:83:-;;;;;;;;;;-1:-1:-1;4759:191:83;;;;;:::i;:::-;;:::i;8239:186:252:-;;;;;;:::i;:::-;;:::i;6651:208:254:-;;;;;;;;;;-1:-1:-1;6651:208:254;;;;;:::i;:::-;;:::i;6166:155::-;;;;;;;;;;-1:-1:-1;6166:155:254;;;;;:::i;:::-;;:::i;6895:238::-;;;;;;;;;;-1:-1:-1;6895:238:254;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5246:136:83:-;;;;;;;;;;-1:-1:-1;5246:136:83;;;;;:::i;:::-;;:::i;6348:245::-;;;;;;;;;;-1:-1:-1;6348:245:83;;;;;:::i;:::-;;:::i;8756:210:252:-;;;;;;:::i;:::-;;:::i;7169:243:254:-;;;;;;;;;;-1:-1:-1;7169:243:254;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13838:333:252:-;;;;;;:::i;:::-;;:::i;12920:656::-;;;;;;:::i;:::-;;:::i;7352:116::-;;;;;;;;;;;;;:::i;6694:472::-;;;;;;;;;;-1:-1:-1;6694:472:252;;;;;:::i;:::-;;:::i;4161:214:87:-;;;;;;:::i;:::-;;:::i;9571:291:252:-;;;;;;:::i;:::-;;:::i;3708:134:87:-;;;;;;;;;;;;;:::i;12605:283:252:-;;;;;;:::i;:::-;;:::i;9002:287::-;;;;;;:::i;:::-;;:::i;6357:258:254:-;;;;;;;;;;-1:-1:-1;6357:258:254;;;;;:::i;:::-;;:::i;7448:86::-;;;;;;;;;;-1:-1:-1;7520:7:254;;;;;;;;;;;;-1:-1:-1;;;7520:7:254;;;;7448:86;;;;;;;:::i;2496:145:90:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:90;;;2496:145;;3964:408:254;;;;;;;;;;-1:-1:-1;3964:408:254;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4766:141::-;;;;;;;;;;-1:-1:-1;4766:141:254;;;;;:::i;:::-;;:::i;3194:588::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3267:508:254;;;;;;;;3310:29;;3267:508;;3375:31;;3267:508;;;;3447:36;;-1:-1:-1;;;;;3447:36:254;;;3267:508;;;;;;;3520:32;;;;3267:508;;;;3634:26;;;;3267:508;;;;3692:27;;;;3267:508;;;;3744:20;;;;3267:508;;;;3580:23;;;;;3267:508;;;;;3194:588;;;;;22831:13:436;;22813:32;;22901:4;22889:17;;;22883:24;22861:20;;;22854:54;22943:17;;;22937:24;-1:-1:-1;;;;;23037:21:436;;;23015:20;;;23008:51;;;;23119:4;23107:17;;;23101:24;23097:33;;23075:20;;;23068:63;23191:4;23179:17;;;23173:24;23169:33;;23147:20;;;23140:63;22988:3;23251:17;;;23245:24;23241:33;;23219:20;;;23212:63;23335:4;23323:17;;;23317:24;23313:33;;23291:20;;;23284:63;23407:4;23395:17;;;23389:24;23385:33;;;23363:20;;;23356:63;;;;22800:3;22785:19;3194:588:254;22610:815:436;5318:164:254;;;;;;;;;;-1:-1:-1;5318:164:254;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14434:234:252:-;;;;;;:::i;:::-;;:::i;2878:128:254:-;;;;;;;;;;;;;:::i;:::-;;;;;;24296:4:436;24338:3;24327:9;24323:19;24315:27;;24375:6;24369:13;24358:9;24351:32;24439:4;24431:6;24427:17;24421:24;24414:4;24403:9;24399:20;24392:54;24502:4;24494:6;24490:17;24484:24;24477:4;24466:9;24462:20;24455:54;24565:4;24557:6;24553:17;24547:24;24540:4;24529:9;24525:20;24518:54;24628:4;24620:6;24616:17;24610:24;24603:4;24592:9;24588:20;24581:54;24112:529;;;;;3042:116:254;;;;;;;;;;;;;:::i;:::-;;;;24898:13:436;;-1:-1:-1;;;;;24894:39:436;24876:58;;24994:4;24982:17;;;24976:24;-1:-1:-1;;;;;24972:49:436;24950:20;;;24943:79;;;;24849:18;3042:116:254;24646:382:436;11477:171:252;;;;;;:::i;:::-;;:::i;7203:112::-;;;;;;;;;;;;;:::i;15297:291::-;;;;;;:::i;:::-;;:::i;13608:194::-;;;;;;:::i;:::-;;:::i;3732:207:83:-;;;;;;;;;;-1:-1:-1;3732:207:83;;;;;:::i;:::-;;:::i;2317:49::-;;;;;;;;;;-1:-1:-1;2317:49:83;2362:4;2317:49;;7505:219:252;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1819:58:87:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:87;;;;;4408:158:254;;;;;;;;;;-1:-1:-1;4408:158:254;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5128:154::-;;;;;;;;;;-1:-1:-1;5128:154:254;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10982:463:252:-;;;;;;:::i;:::-;;:::i;14704:311::-;;;;;;:::i;:::-;;:::i;2154:122:254:-;;;;;;;;;;-1:-1:-1;2154:122:254;;;;;:::i;:::-;;:::i;4943:149::-;;;;;;;;;;-1:-1:-1;4943:149:254;;;;;:::i;:::-;;:::i;9321:214:252:-;;;;;;:::i;:::-;;:::i;5662:138:83:-;;;;;;;;;;-1:-1:-1;5662:138:83;;;;;:::i;:::-;;:::i;10685:261:252:-;;;;;;:::i;:::-;;:::i;11883:403::-;;;;;;:::i;:::-;;:::i;2312:161:254:-;;;;;;;;;;-1:-1:-1;2312:161:254;;;;;:::i;:::-;;:::i;15047:214:252:-;;;;;;:::i;:::-;;:::i;4507:627::-;;;;;;;;;;-1:-1:-1;4507:627:252;;;;;:::i;:::-;;:::i;11680:171::-;;;;;;:::i;:::-;;:::i;8461:263::-;;;;;;:::i;:::-;;:::i;5967:163:254:-;;;;;;;;;;-1:-1:-1;5967:163:254;;;;;:::i;:::-;;:::i;3822:106::-;;;;;;;;;;-1:-1:-1;3899:22:254;;-1:-1:-1;;;;;3899:22:254;3822:106;;7972:235:252;;;;;;:::i;:::-;;:::i;12318:251::-;;;;;;:::i;:::-;;:::i;3443:202:83:-;3528:4;-1:-1:-1;;;;;;3551:47:83;;-1:-1:-1;;;3551:47:83;;:87;;-1:-1:-1;;;;;;;;;;1134:40:91;;;3602:36:83;3544:94;3443:202;-1:-1:-1;;3443:202:83:o;14203:199:252:-;1979:19:90;:17;:19::i;:::-;14318:34:252::1;::::0;-1:-1:-1;;;14318:34:252;;:26:::1;::::0;::::1;::::0;:34:::1;::::0;:5:::1;::::0;14345:6;;14318:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;14362:33:252::1;::::0;-1:-1:-1;;;14362:33:252;;:25:::1;::::0;-1:-1:-1;14362:25:252::1;::::0;-1:-1:-1;14362:33:252::1;::::0;:5:::1;::::0;14388:6;;14362:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14203:199:::0;:::o;6398:259::-;2362:4:83;5583:26:252;2362:4:83;5598:10:252;5583:8;:26::i;:::-;5578:115;;5632:50;;-1:-1:-1;;;5632:50:252;;5665:10;5632:50;;;36944:51:436;37011:18;;;37004:34;;;36917:18;;5632:50:252;;;;;;;;5578:115;6573:34:::1;::::0;-1:-1:-1;;;6573:34:252;;:26:::1;::::0;::::1;::::0;:34:::1;::::0;:5:::1;::::0;6600:6;;6573:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6617:33:252::1;::::0;-1:-1:-1;;;6617:33:252;;:25:::1;::::0;-1:-1:-1;6617:25:252::1;::::0;-1:-1:-1;6617:33:252::1;::::0;:5:::1;::::0;6643:6;;6617:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6398:259:::0;;:::o;4602:128:254:-;4682:27;;:41;;-1:-1:-1;;;4682:41:254;;-1:-1:-1;;;;;2152:32:436;;;4682:41:254;;;2134:51:436;4656:7:254;;4682:27;;:35;;2107:18:436;;4682:41:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7756:180:252:-;7845:84;7863:65;;;;;;;;7896:6;7863:65;;;;;;;;;;:::i;:::-;;;7916:10;7863:65;;;;;7845:17;:84::i;:::-;7756:180;:::o;2509:172:254:-;2596:7;2622:52;2596:7;2667:6;2622:44;:52::i;9894:259:252:-;10001:145;10040:96;;;;;;;;10081:6;10040:96;;;;;;;;;;:::i;:::-;;;10101:10;10040:96;;;;;;;;;;;10001:25;:145::i;5518:133:254:-;5613:31;;-1:-1:-1;;;5613:31:254;;5584:10;5613:31;;;3564:25:436;;;3605:18;;;3598:34;;;5584:10:254;5613:19;;;;3537:18:436;;5613:31:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5687:244::-;5788:29;;5739:7;;;;5788:54;;5739:7;;5788:54;:::i;:::-;388:21:266;408:1;-1:-1:-1;;388:21:266;:::i;:::-;5856:31:254;;:58;;;;:::i;:::-;5767:157;;;;5687:244;;:::o;2717:125::-;2761:32;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2761:32:254;2812:23;;-1:-1:-1;;;2812:23:254;;:5;:23;;;2789:25:436;2812:21:254;;;;2762:18:436;;2812:23:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2805:30;;2717:125;:::o;10189:464:252:-;1979:19:90;:17;:19::i;:::-;10374:45:252::1;::::0;-1:-1:-1;;;10374:45:252;;:29:::1;::::0;::::1;::::0;:45:::1;::::0;:5:::1;::::0;10404:14;;10374:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;10429:44:252::1;::::0;-1:-1:-1;;;10429:44:252;;:28:::1;::::0;-1:-1:-1;10429:28:252::1;::::0;-1:-1:-1;10429:44:252::1;::::0;:5:::1;::::0;10458:14;;10429:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;-1:-1:-1::0;;10487:14:252::1;:21;;;:38;;;:53:::0;10483:164:::1;;10605:21:::0;;:30;10556:80:::1;::::0;-1:-1:-1;;;10556:80:252;;:5:::1;:80;::::0;::::1;42072:25:436::0;-1:-1:-1;;;;;42133:32:436;;;42113:18;;;42106:60;10556:48:252::1;::::0;::::1;::::0;42045:18:436;;10556:80:252::1;41864:308:436::0;4759:191:83;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:83;;;;;:24;;;;4759:191::o;8239:186:252:-;8332:86;8351:66;;;;;;;;8385:6;8351:66;;;;;;;;;;:::i;:::-;;;8405:10;8351:66;;;;;8332:18;:86::i;6651:208:254:-;6721:7;6744:5;6753:1;6744:10;6740:67;;6777:19;;-1:-1:-1;;;6777:19:254;;;;;;;;;;;6740:67;6823:29;:5;6840:4;6846:5;6823:16;:29::i;:::-;6816:36;6651:208;-1:-1:-1;;;6651:208:254:o;6166:155::-;6271:43;;-1:-1:-1;;;6271:43:254;;6245:7;6271:43;;;42661:25:436;;;-1:-1:-1;;;;;42722:32:436;;42702:18;;;42695:60;42771:18;;;42764:34;;;6245:7:254;6271:28;;;;42634:18:436;;6271:43:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6895:238::-;7015:46;;:::i;:::-;7084:42;;-1:-1:-1;;;7084:42:254;;:15;;:27;;:42;;7112:5;;7119:6;;7084:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5246:136:83:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:83;;966:10:88;6441:34:83;6437:102;;6498:30;;-1:-1:-1;;;6498:30:83;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;8756:210:252:-;8861:98;8886:72;;;;;;;;8926:6;8886:72;;;:::i;:::-;;;8946:10;8886:72;;;;;8861:24;:98::i;7169:243:254:-;7291:48;;:::i;:::-;7362:43;;-1:-1:-1;;;7362:43:254;;:16;;:28;;:43;;7391:5;;7398:6;;7362:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13838:333:252:-;1979:19:90;:17;:19::i;:::-;14034:25:252::1;::::0;::::1;::::0;6051:33:::1;::::0;-1:-1:-1;;;6051:33:252;;6019:29:::1;6051:33;::::0;::::1;42072:25:436::0;;;-1:-1:-1;;;;;42133:32:436;;42113:18;;;42106:60;6019:29:252;6051:21:::1;::::0;::::1;::::0;42045:18:436;;6051:33:252::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14075:40:::2;::::0;-1:-1:-1;;;14075:40:252;;6019:65;;-1:-1:-1;14075:24:252::2;::::0;::::2;::::0;:40:::2;::::0;:5:::2;::::0;14100:14;;14075:40:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;14125:39:252::2;::::0;-1:-1:-1;;;14125:39:252;;:23:::2;::::0;-1:-1:-1;14125:23:252::2;::::0;-1:-1:-1;14125:39:252::2;::::0;:5:::2;::::0;14149:14;;14125:39:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;6136:33:252::1;::::0;-1:-1:-1;;;6136:33:252;;6105:28:::1;6136:33;::::0;::::1;42072:25:436::0;;;-1:-1:-1;;;;;42133:32:436;;42113:18;;;42106:60;6105:28:252;-1:-1:-1;6136:21:252::1;::::0;-1:-1:-1;6136:21:252::1;::::0;42045:18:436;;6136:33:252::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6105:64;;6207:21;6183:20;:45;6179:176;;6251:93;::::0;-1:-1:-1;;;6251:93:252;;-1:-1:-1;;;;;47061:32:436;;6251:93:252::1;::::0;::::1;47043:51:436::0;47110:18;;;47103:34;;;47153:18;;;47146:34;;;47016:18;;6251:93:252::1;46841:345:436::0;12920:656:252;13148:39;13189:35;1979:19:90;:17;:19::i;:::-;842:24:243::1;5583:26:252;5592:4;5598:10;5583:8;:26::i;:::-;5578:115;;5632:50;::::0;-1:-1:-1;;;5632:50:252;;5665:10:::1;5632:50;::::0;::::1;36944:51:436::0;37011:18;;;37004:34;;;36917:18;;5632:50:252::1;36770:274:436::0;5578:115:252::1;13240:46:::2;::::0;-1:-1:-1;;;13240:46:252;;:38:::2;::::0;::::2;::::0;:46:::2;::::0;:5:::2;::::0;13279:6;;13240:46:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;13361:45:252::2;::::0;-1:-1:-1;;;13361:45:252;;:37:::2;::::0;-1:-1:-1;13361:37:252::2;::::0;-1:-1:-1;13361:45:252::2;::::0;:5:::2;::::0;13399:6;;13361:45:::2;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13296:110:::0;;-1:-1:-1;13296:110:252;-1:-1:-1;13416:48:252::2;;:5;13465:15;::::0;;;::::2;::::0;::::2;;:::i;:::-;13416:65;::::0;-1:-1:-1;;;;;;13416:65:252::2;::::0;;;;;;::::2;::::0;::::2;42072:25:436::0;;;;-1:-1:-1;;;;;42133:32:436;42113:18;;;42106:60;42045:18;;13416:65:252::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;13491:78:252::2;::::0;-1:-1:-1;;;13491:78:252;;:37:::2;::::0;-1:-1:-1;13491:37:252::2;::::0;-1:-1:-1;13491:78:252::2;::::0;:5:::2;::::0;13529:6;;13537:31;;13491:78:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2008:1:90::1;12920:656:252::0;;;:::o;7352:116::-;899:24:243;5583:26:252;5592:4;5598:10;5583:8;:26::i;:::-;5578:115;;5632:50;;-1:-1:-1;;;5632:50:252;;5665:10;5632:50;;;36944:51:436;37011:18;;;37004:34;;;36917:18;;5632:50:252;36770:274:436;5578:115:252;7451:10:::1;:8;:10::i;6694:472::-:0;969:37:243;5583:26:252;5592:4;5598:10;5583:8;:26::i;:::-;5578:115;;5632:50;;-1:-1:-1;;;5632:50:252;;5665:10;5632:50;;;36944:51:436;37011:18;;;37004:34;;;36917:18;;5632:50:252;36770:274:436;5578:115:252;6896:35;;;-1:-1:-1;;;;;6941:48:252;;::::1;-1:-1:-1::0;;;;;;6999:70:252;;;;-1:-1:-1;;;7053:15:252::1;-1:-1:-1::0;;;;;6999:70:252::1;;;::::0;;;7084:75:::1;::::0;;6896:35;;;::::1;49109:34:436::0;;;49174:2;49159:18;;49152:43;;;;7121:10:252::1;::::0;7084:75:::1;::::0;49029:18:436;7084:75:252::1;;;;;;;6862:304;6694:472:::0;;:::o;4161:214:87:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;9571:291:252:-;1979:19:90;:17;:19::i;:::-;9756:45:252::1;::::0;-1:-1:-1;;;9756:45:252;;:29:::1;::::0;::::1;::::0;:45:::1;::::0;:5:::1;::::0;9786:14;;9756:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9811:44:252::1;::::0;-1:-1:-1;;;9811:44:252;;:28:::1;::::0;-1:-1:-1;9811:28:252::1;::::0;-1:-1:-1;9811:44:252::1;::::0;:5:::1;::::0;9840:14;;9811:44:::1;;;:::i;3708:134:87:-:0;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:87;:::o;12605:283:252:-;1979:19:90;:17;:19::i;:::-;12786:43:252::1;::::0;;-1:-1:-1;;;12786:43:252;;:5:::1;:43;::::0;::::1;51266:25:436::0;51333:13;;51327:20;51307:18;;;51300:48;51322:2;51383:15;;51377:22;-1:-1:-1;;;;;51473:21:436;;;51453:18;;;51446:49;51541:15;;;51535:22;51531:31;;;51511:18;;;51504:59;12786:27:252::1;::::0;::::1;::::0;51238:19:436;;12786:43:252::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12839:42:252::1;::::0;;-1:-1:-1;;;12839:42:252;;:5:::1;:42;::::0;::::1;51266:25:436::0;51333:13;;51327:20;51307:18;;;51300:48;51322:2;51383:15;;51377:22;-1:-1:-1;;;;;51473:21:436;;;51453:18;;;51446:49;51541:15;;;51535:22;51531:31;;;51511:18;;;51504:59;12839:26:252::1;::::0;-1:-1:-1;12839:26:252::1;::::0;-1:-1:-1;51238:19:436;;12839:42:252::1;50959:610:436::0;9002:287:252;1979:19:90;:17;:19::i;:::-;9185:44:252::1;::::0;-1:-1:-1;;;9185:44:252;;:28:::1;::::0;::::1;::::0;:44:::1;::::0;:5:::1;::::0;9214:14;;9185:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;9239:43:252::1;::::0;-1:-1:-1;;;9239:43:252;;:27:::1;::::0;-1:-1:-1;9239:27:252::1;::::0;-1:-1:-1;9239:43:252::1;::::0;:5:::1;::::0;9267:14;;9239:43:::1;;;:::i;6357:258:254:-:0;6501:37;;-1:-1:-1;;;6501:37:254;;6447:7;6501:37;;;3564:25:436;;;3605:18;;;3598:34;;;6447:7:254;;;6501:21;;;;3537:18:436;;6501:37:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6466:72;;;;;;;;;;-1:-1:-1;;;;;6466:72:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;6555:53;-1:-1:-1;;;6555:53:254;;6466:72;;-1:-1:-1;6555:39:254;;;;:53;;-1:-1:-1;;6466:72:254;;6555:53;;;:::i;3964:408::-;4022:15;;:::i;:::-;4056:309;;;-1:-1:-1;;;;;4085:22:254;;-1:-1:-1;4085:22:254;;;:10;:22;;;;;;;;4056:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4085:22;;4056:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4056:309:254;;;;-1:-1:-1;;;4056:309:254;;-1:-1:-1;4056:309:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4056:309:254;;;;;;;;;4172:26;;:42;;-1:-1:-1;;;4172:42:254;;;;;2134:51:436;;;;4056:309:254;;;;;4172:26;;;;:36;;2107:18:436;;4172:42:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4056:309;;4248:27;;:43;;-1:-1:-1;;;4248:43:254;;-1:-1:-1;;;;;2152:32:436;;;4248:43:254;;;2134:51:436;4056:309:254;;;;;4248:27;;;;:37;;2107:18:436;;4248:43:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4056:309;;4318:20;;:36;;-1:-1:-1;;;4318:36:254;;-1:-1:-1;;;;;2152:32:436;;;4318:36:254;;;2134:51:436;4056:309:254;;;;;4318:20;;;;:30;;2107:18:436;;4318:36:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4056:309;;4049:316;3964:408;-1:-1:-1;;3964:408:254:o;4766:141::-;2508:29:266;;4839:4:254;;-1:-1:-1;;4862:38:254;2342:202:266;5318:164:254;5394:21;;:::i;:::-;5434:41;;-1:-1:-1;;;5434:41:254;;:5;:41;;;3564:25:436;3605:18;;;3598:34;;;5434:23:254;;;;3537:18:436;;5434:41:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5427:48;;;;;;;;;;-1:-1:-1;;;;;5427:48:254;;;;-1:-1:-1;;;5427:48:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5318:164:254:o;14434:234:252:-;14551:110;14582:78;;;;;;;;14628:6;14582:78;;;:::i;:::-;;;14648:10;14582:78;;;;;14551:30;:110::i;2878:128:254:-;2923:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2923:33:254;2975:24;;-1:-1:-1;;;2975:24:254;;:5;:24;;;2789:25:436;2975:22:254;;;;2762:18:436;;2975:24:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3042:116::-;-1:-1:-1;;;;;;;;;;;;;;;;;3131:20:254;;-1:-1:-1;;;3131:20:254;;:5;:20;;;2789:25:436;3131:18:254;;;;2762::436;;3131:20:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11477:171:252:-;1979:19:90;:17;:19::i;:::-;11578:27:252::1;::::0;-1:-1:-1;;;11578:27:252;;:19:::1;::::0;::::1;::::0;:27:::1;::::0;:5:::1;::::0;11598:6;;11578:27:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11615:26:252::1;::::0;-1:-1:-1;;;11615:26:252;;:18:::1;::::0;-1:-1:-1;11615:18:252::1;::::0;-1:-1:-1;11615:26:252::1;::::0;:5:::1;::::0;11634:6;;11615:26:::1;;;:::i;7203:112::-:0;899:24:243;5583:26:252;5592:4;5598:10;5583:8;:26::i;:::-;5578:115;;5632:50;;-1:-1:-1;;;5632:50:252;;5665:10;5632:50;;;36944:51:436;37011:18;;;37004:34;;;36917:18;;5632:50:252;36770:274:436;5578:115:252;7300:8:::1;:6;:8::i;15297:291::-:0;1979:19:90;:17;:19::i;:::-;15482:45:252::1;::::0;-1:-1:-1;;;15482:45:252;;:29:::1;::::0;::::1;::::0;:45:::1;::::0;:5:::1;::::0;15512:14;;15482:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;15537:44:252::1;::::0;-1:-1:-1;;;15537:44:252;;:28:::1;::::0;-1:-1:-1;15537:28:252::1;::::0;-1:-1:-1;15537:44:252::1;::::0;:5:::1;::::0;15566:14;;15537:44:::1;;;:::i;13608:194::-:0;13705:90;13726:68;;;;;;;;13762:6;13726:68;;;;;;;;;;:::i;:::-;;;13782:10;13726:68;;;;;13705:20;:90::i;3732:207:83:-;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:83;;;;;;;;-1:-1:-1;;;;;3901:31:83;;;;;;;;;;;;;;;3732:207::o;7505:219:252:-;7647:22;1979:19:90;:17;:19::i;:::-;7695:22:252::1;:5;7711::::0;;7695:15:::1;:22::i;4408:158:254:-:0;4477:26;;:::i;:::-;-1:-1:-1;;;;;;4522:37:254;;;:5;:37;;;:31;:37;;;;;;;;;4515:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4408:158::o;5128:154::-;5200:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5200:19:254;5238:37;;-1:-1:-1;;;5238:37:254;;:5;:37;;;3564:25:436;3605:18;;;3598:34;;;5238:21:254;;;;3537:18:436;;5238:37:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5231:44;;;;;;;;;;-1:-1:-1;;;;;5231:44:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5128:154;-1:-1:-1;;5128:154:254:o;10982:463:252:-;1979:19:90;:17;:19::i;:::-;11169:46:252::1;::::0;-1:-1:-1;;;11169:46:252;;:30:::1;::::0;::::1;::::0;:46:::1;::::0;:5:::1;::::0;11200:14;;11169:46:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11225:45:252::1;::::0;-1:-1:-1;;;11225:45:252;;:29:::1;::::0;-1:-1:-1;11225:29:252::1;::::0;-1:-1:-1;11225:45:252::1;::::0;:5:::1;::::0;11255:14;;11225:45:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;-1:-1:-1::0;;11284:14:252::1;:21;;;:38;;;:53:::0;11280:159:::1;;11402:25;::::0;::::1;::::0;11353:75:::1;::::0;-1:-1:-1;;;11353:75:252;;:5:::1;:75;::::0;::::1;42072:25:436::0;-1:-1:-1;;;;;42133:32:436;;;42113:18;;;42106:60;11353:48:252::1;::::0;::::1;::::0;42045:18:436;;11353:75:252::1;41864:308:436::0;14704:311:252;1979:19:90;:17;:19::i;:::-;14899:50:252::1;::::0;-1:-1:-1;;;14899:50:252;;:34:::1;::::0;::::1;::::0;:50:::1;::::0;:5:::1;::::0;14934:14;;14899:50:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;14959:49:252::1;::::0;-1:-1:-1;;;14959:49:252;;:33:::1;::::0;-1:-1:-1;14959:33:252::1;::::0;-1:-1:-1;14959:49:252::1;::::0;:5:::1;::::0;14993:14;;14959:49:::1;;;:::i;2154:122:254:-:0;2242:27;;-1:-1:-1;;;2242:27:254;;2216:7;2242:27;;;42072:25:436;;;-1:-1:-1;;;;;42133:32:436;;42113:18;;;42106:60;2216:7:254;2242:21;;;;42045:18:436;;2242:27:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4943:149::-;5020:4;5043:42;5020:4;5068:16;5043:24;:42::i;9321:214:252:-;9428:100;9454:73;;;;;;;;9495:6;9454:73;;;:::i;:::-;;;9515:10;9454:73;;;;;9428:25;:100::i;5662:138:83:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;10685:261:252:-:0;10792:147;10832:97;;;;;;;;10874:6;10832:97;;;;10894:10;-1:-1:-1;;;;;10832:97:252;;;;;10917:10;-1:-1:-1;;;;;10832:97:252;;;;10792:26;:147::i;11883:403::-;12031:39;1979:19:90;:17;:19::i;:::-;12086:31:252::1;::::0;-1:-1:-1;;;12086:31:252;;:23:::1;::::0;::::1;::::0;:31:::1;::::0;:5:::1;::::0;12110:6;;12086:31:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12161:30:252::1;::::0;-1:-1:-1;;;12161:30:252;;:22:::1;::::0;-1:-1:-1;12161:22:252::1;::::0;-1:-1:-1;12161:30:252::1;::::0;:5:::1;::::0;12184:6;;12161:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12201:78;::::0;-1:-1:-1;;;12201:78:252;;12127:64;;-1:-1:-1;12201:37:252::1;::::0;::::1;::::0;:78:::1;::::0;:5:::1;::::0;12239:6;;12127:64;;12201:78:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11883:403:::0;;;:::o;2312:161:254:-;2418:48;;-1:-1:-1;;;2418:48:254;;2395:4;2418:48;;;3564:25:436;;;3605:18;;;3598:34;;;2395:4:254;2418:32;;;;3537:18:436;;2418:48:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;15047:214:252:-;15154:100;15180:73;;;;;;;;15221:6;15180:73;;;;;;;;;;:::i;:::-;;;15241:10;15180:73;;;;;15154:25;:100::i;4507:627::-;4158:30:86;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:86;-1:-1:-1;;;4302:15:86;;;4301:16;;-1:-1:-1;;;;;4348:14:86;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;-1:-1:-1;;;;;4788:16:86;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:86;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:86;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:86;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:86;-1:-1:-1;;;5011:22:86;;;4977:67;4764:43:252::1;::::0;-1:-1:-1;;;4764:43:252;;:24:::1;::::0;::::1;::::0;:43:::1;::::0;:5:::1;::::0;4789;;4796:1;;4799;;4802;;4805;;4764:43:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4818:22;:20;:22::i;:::-;4850:17;:15;:17::i;:::-;4877:24;:22;:24::i;:::-;4912:35;::::0;-1:-1:-1;;;4912:35:252;;:23:::1;::::0;::::1;::::0;:35:::1;::::0;:5:::1;::::0;4936:1;;4939;;4942;;4945;;4912:35:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4957:37;2362:4:83;4968:18:252::0;::::1;4988:5;4957:10;:37::i;:::-;;5004:30;899:24:243;5028:5:252;5004:10;:30::i;:::-;;5044;842:24:243;5068:5:252;5044:10;:30::i;:::-;;5084:43;969:37:243;5121:5:252;5084:10;:43::i;:::-;;5068:14:86::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:86;;;5140:14;;-1:-1:-1;63812:50:436;;5140:14:86;;63800:2:436;63785:18;5140:14:86;;;;;;;5064:101;4092:1079;;;;;4507:627:252;;;;;:::o;11680:171::-;1979:19:90;:17;:19::i;:::-;11781:27:252::1;::::0;-1:-1:-1;;;11781:27:252;;:5:::1;:27;::::0;::::1;64145:25:436::0;64206:20;;64186:18;;;64179:48;11781:19:252::1;::::0;::::1;::::0;64118:18:436;;11781:27:252::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11818:26:252::1;::::0;-1:-1:-1;;;11818:26:252;;:5:::1;:26;::::0;::::1;64145:25:436::0;64206:20;;64186:18;;;64179:48;11818:18:252::1;::::0;-1:-1:-1;11818:18:252::1;::::0;-1:-1:-1;64118:18:436;;11818:26:252::1;63873:360:436::0;8461:263:252;1979:19:90;:17;:19::i;:::-;8632:38:252::1;::::0;-1:-1:-1;;;8632:38:252;;:22:::1;::::0;::::1;::::0;:38:::1;::::0;:5:::1;::::0;8655:14;;8632:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8680:37:252::1;::::0;-1:-1:-1;;;8680:37:252;;:21:::1;::::0;-1:-1:-1;8680:21:252::1;::::0;-1:-1:-1;8680:37:252::1;::::0;:5:::1;::::0;8702:14;;8680:37:::1;;;:::i;5967:163:254:-:0;6076:47;;-1:-1:-1;;;6076:47:254;;6050:7;6076:47;;;42661:25:436;;;-1:-1:-1;;;;;42722:32:436;;42702:18;;;42695:60;42771:18;;;42764:34;;;6050:7:254;6076:30;;;;42634:18:436;;6076:47:254;42425:379:436;7972:235:252;1979:19:90;:17;:19::i;:::-;8133:29:252::1;::::0;-1:-1:-1;;;8133:29:252;;:21:::1;::::0;::::1;::::0;:29:::1;::::0;:5:::1;::::0;8155:6;;8133:29:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8172:28:252::1;::::0;-1:-1:-1;;;8172:28:252;;:20:::1;::::0;-1:-1:-1;8172:20:252::1;::::0;-1:-1:-1;8172:28:252::1;::::0;:5:::1;::::0;8193:6;;8172:28:::1;;;:::i;12318:251::-:0;12421:141;12458:94;;;;;;;;12497:6;12458:94;;;;;;;;;;:::i;:::-;;;12517:10;12458:94;;;;;;;;;;;12421:23;:141::i;2709:128:90:-;-1:-1:-1;;;;;;;;;;;2625:9:90;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:90;;;;;;;;;;;2770:61;2709:128::o;5140:370:252:-;5212:4;5232:22;5240:4;5246:7;5232;:22::i;:::-;5228:276;;;-1:-1:-1;5277:4:252;5270:11;;5228:276;5310:22;;-1:-1:-1;;;;;5310:22:252;5298:206;;-1:-1:-1;5370:5:252;5363:12;;5298:206;5446:22;;5413:80;;-1:-1:-1;;;5413:80:252;;;;;42072:25:436;;;-1:-1:-1;;;;;42133:32:436;;;42113:18;;;42106:60;5446:22:252;;;;5413:65;;42045:18:436;;5413:80:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5406:87;;;;1087:477:263;1228:29;1297:260;1348:5;:12;;:22;;;;;;;;;;-1:-1:-1;;;;;1348:22:263;-1:-1:-1;;;;;1348:31:263;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1342:39;;:2;:39;:::i;:::-;1324:57;;:15;:57;:::i;:::-;1401:36;;;;:47;;;-1:-1:-1;;;1401:47:263;;;;-1:-1:-1;;;;;1401:36:263;;;;:45;;:47;;;;;;;;;;;;;;;:36;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:53;;:2;:53;:::i;:::-;1504:32;;;;:43;;;-1:-1:-1;;;1504:43:263;;;;-1:-1:-1;;;;;1504:32:263;;;;:41;;:43;;;;;;;;;;;;;;;:32;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1498:49;;:2;:49;:::i;:::-;1462:12;;;:22;:33;;;-1:-1:-1;;;1462:33:263;;;;-1:-1:-1;;;;;1462:22:263;;;;:31;;:33;;;;;;;;;;;;;;;:22;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;1297:13;:260::i;8742:187::-;8835:7;8861:61;8875:4;8881:31;8899:5;8906;8881:17;:31::i;:::-;183:4:267;8861:13:263;:61::i;:::-;8854:68;8742:187;-1:-1:-1;;;;8742:187:263:o;4148:103:83:-;4214:30;4225:4;966:10:88;4214::83;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:83;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:83;;;;;;;;;:38;;-1:-1:-1;;7475:38:83;7509:4;7475:38;;;7559:12;966:10:88;;887:96;7559:12:83;-1:-1:-1;;;;;7532:40:83;7550:7;-1:-1:-1;;;;;7532:40:83;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7432:219;7353:304;7270:387;;;;:::o;7894:388::-;7972:4;-1:-1:-1;;;;;;;;;;;8061:22:83;8069:4;8075:7;8061;:22::i;:::-;8057:219;;;8133:5;8099:14;;;;;;;;;;;-1:-1:-1;;;;;8099:31:83;;;;;;;;;;:39;;-1:-1:-1;;8099:39:83;;;8157:40;966:10:88;;8099:14:83;;8157:40;;8133:5;8157:40;8218:4;8211:11;;;;;3478:178:90;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:90;;-1:-1:-1;;3595:17:90::1;::::0;;3627:22:::1;966:10:88::0;3636:12:90::1;3627:22;::::0;-1:-1:-1;;;;;2152:32:436;;;2134:51;;2122:2;2107:18;3627:22:90::1;;;;;;;3526:130;3478:178::o:0;4578:312:87:-;4658:4;-1:-1:-1;;;;;4667:6:87;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:87;:32;-1:-1:-1;;;;;;;;;;;1519:53:107;-1:-1:-1;;;;;1519:53:107;;1441:138;4728:32:87;-1:-1:-1;;;;;4728:42:87;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:87;;;;;;;;;;;5716:151:252;2362:4:83;5583:26:252;2362:4:83;5598:10:252;5583:8;:26::i;:::-;5578:115;;5632:50;;-1:-1:-1;;;5632:50:252;;5665:10;5632:50;;;36944:51:436;37011:18;;;37004:34;;;36917:18;;5632:50:252;36770:274:436;6032:538:87;6149:17;-1:-1:-1;;;;;6131:50:87;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:87;;;;;;;;-1:-1:-1;;6131:52:87;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:87;;-1:-1:-1;;;;;2152:32:436;;6493:60:87;;;2134:51:436;2107:18;;6493:60:87;1988:203:436;6127:437:87;-1:-1:-1;;;;;;;;;;;6225:40:87;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:87;;;;;2789:25:436;;;2762:18;;6292:34:87;2643:177:436;6221:120:87;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:87;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:87;;;;;;;;;;;3170:176:90;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:90;;-1:-1:-1;;3288:16:90::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:88::0;3326:12:90::1;887:96:88::0;1176:291:268;1251:22;1307:4;-1:-1:-1;;;;;1295:24:268;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:34;;1334:9;1329:132;1349:15;;;1329:132;;;1398:52;1435:4;1442;;1447:1;1442:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1398:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1398:28:268;;-1:-1:-1;;;1398:52:268:i;:::-;1385:7;1393:1;1385:10;;;;;;;;:::i;:::-;;;;;;;;;;:65;1366:3;;1329:132;;;;1176:291;;;;;:::o;2769:208:266:-;2861:4;388:21;408:1;-1:-1:-1;;388:21:266;:::i;:::-;2884:10;:38;;:86;;;;-1:-1:-1;;2939:31:266;;;;;;-1:-1:-1;2926:44:266;2769:208::o;9071:205:86:-;9129:30;;3147:66;9186:27;8819:122;3231:65:83;6929:20:86;:18;:20::i;618:142:267:-;692:7;718:35;745:1;748;751;718:26;:35::i;8116:173:263:-;8242:26;;8202:7;;8228:54;;8270:5;234:8:267;8228:13:263;:54::i;4381:197:83:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:83;;-1:-1:-1;;;;;36962:32:436;;4514:47:83;;;36944:51:436;37011:18;;;37004:34;;;36917:18;;4514:47:83;36770:274:436;2909:126:90;-1:-1:-1;;;;;;;;;;;2625:9:90;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:90;;;;;;;;;;;2264:344:107;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:107;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;3916:253:116:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:116;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:116:o;7082:141:86:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:86;;;;;;;;;;;25271:508:162;25345:9;25568:1;25564;25560:6;25556:14;25553:1;25550:21;25547:1;25543:29;25536:37;25533:1;25529:45;25519:169;;25607:10;25601:4;25594:24;25669:4;25663;25656:18;25519:169;-1:-1:-1;25749:9:162;;25724:17;;;25717:25;25710:33;25745:17;;;25706:57;;25271:508::o;1671:281:107:-;1748:17;-1:-1:-1;;;;;1748:29:107;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:107;;-1:-1:-1;;;;;2152:32:436;;1805:47:107;;;2134:51:436;2107:18;;1805:47:107;1988:203:436;1744:119:107;-1:-1:-1;;;;;;;;;;;1872:73:107;;-1:-1:-1;;;;;;1872:73:107;-1:-1:-1;;;;;1872:73:107;;;;;;;;;;1671:281::o;6113:122::-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:107;;;;;;;;;;;4437:582:116;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:116;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:116;;-1:-1:-1;;;;;2152:32:436;;4933:24:116;;;2134:51:436;2107:18;;4933:24:116;1988:203:436;4853:119:116;-1:-1:-1;4992:10:116;4985:17;;8485:120:86;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:86;;;;;;-1:-1:-1;8485:120:86:o;5559:487:116:-;5690:17;;:21;5686:354;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;-1:-1:-1;;;6010:19:116;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:436;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:436;;209:43;;199:71;;266:1;263;256:12;497:166;568:5;613:2;604:6;599:3;595:16;591:25;588:45;;;629:1;626;619:12;588:45;-1:-1:-1;651:6:436;497:166;-1:-1:-1;497:166:436:o;668:262::-;767:6;820:2;808:9;799:7;795:23;791:32;788:52;;;836:1;833;826:12;788:52;859:65;916:7;905:9;859:65;:::i;935:166::-;1006:5;1051:2;1042:6;1037:3;1033:16;1029:25;1026:45;;;1067:1;1064;1057:12;1106:380;1205:6;1258:2;1246:9;1237:7;1233:23;1229:32;1226:52;;;1274:1;1271;1264:12;1226:52;1314:9;1301:23;-1:-1:-1;;;;;1339:6:436;1336:30;1333:50;;;1379:1;1376;1369:12;1333:50;1402:78;1472:7;1463:6;1452:9;1448:22;1402:78;:::i;1491:131::-;-1:-1:-1;;;;;1566:31:436;;1556:42;;1546:70;;1612:1;1609;1602:12;1627:247;1686:6;1739:2;1727:9;1718:7;1714:23;1710:32;1707:52;;;1755:1;1752;1745:12;1707:52;1794:9;1781:23;1813:31;1838:5;1813:31;:::i;2458:180::-;2517:6;2570:2;2558:9;2549:7;2545:23;2541:32;2538:52;;;2586:1;2583;2576:12;2538:52;-1:-1:-1;2609:23:436;;2458:180;-1:-1:-1;2458:180:436:o;2825:210::-;2927:6;2980:3;2968:9;2959:7;2955:23;2951:33;2948:53;;;2997:1;2994;2987:12;3040:345;3189:2;3174:18;;3222:1;3211:13;;3201:144;;3267:10;3262:3;3258:20;3255:1;3248:31;3302:4;3299:1;3292:15;3330:4;3327:1;3320:15;3201:144;3354:25;;;3040:345;:::o;4264:127::-;4325:10;4320:3;4316:20;4313:1;4306:31;4356:4;4353:1;4346:15;4380:4;4377:1;4370:15;4396:253;4468:2;4462:9;4510:4;4498:17;;-1:-1:-1;;;;;4530:34:436;;4566:22;;;4527:62;4524:88;;;4592:18;;:::i;:::-;4628:2;4621:22;4396:253;:::o;4654:::-;4726:2;4720:9;4768:4;4756:17;;-1:-1:-1;;;;;4788:34:436;;4824:22;;;4785:62;4782:88;;;4850:18;;:::i;4912:257::-;4984:4;4978:11;;;5016:17;;-1:-1:-1;;;;;5048:34:436;;5084:22;;;5045:62;5042:88;;;5110:18;;:::i;5174:253::-;5246:2;5240:9;5288:4;5276:17;;-1:-1:-1;;;;;5308:34:436;;5344:22;;;5305:62;5302:88;;;5370:18;;:::i;5432:252::-;5504:2;5498:9;5546:3;5534:16;;-1:-1:-1;;;;;5565:34:436;;5601:22;;;5562:62;5559:88;;;5627:18;;:::i;5689:275::-;5760:2;5754:9;5825:2;5806:13;;-1:-1:-1;;5802:27:436;5790:40;;-1:-1:-1;;;;;5845:34:436;;5881:22;;;5842:62;5839:88;;;5907:18;;:::i;:::-;5943:2;5936:22;5689:275;;-1:-1:-1;5689:275:436:o;5969:118::-;6055:5;6048:13;6041:21;6034:5;6031:32;6021:60;;6077:1;6074;6067:12;6092:770;6160:5;6208:4;6196:9;6191:3;6187:19;6183:30;6180:50;;;6226:1;6223;6216:12;6180:50;6248:22;;:::i;:::-;6239:31;;6307:9;6294:23;6326:33;6351:7;6326:33;:::i;:::-;6382:7;6375:5;6368:22;;6450:2;6439:9;6435:18;6422:32;6417:2;6410:5;6406:14;6399:56;6515:2;6504:9;6500:18;6487:32;6482:2;6475:5;6471:14;6464:56;6580:2;6569:9;6565:18;6552:32;6547:2;6540:5;6536:14;6529:56;6646:3;6635:9;6631:19;6618:33;6612:3;6605:5;6601:15;6594:58;6713:3;6702:9;6698:19;6685:33;6679:3;6672:5;6668:15;6661:58;6771:3;6760:9;6756:19;6743:33;6785:30;6807:7;6785:30;:::i;:::-;6842:3;6831:15;;6824:32;6835:5;6092:770;-1:-1:-1;;6092:770:436:o;6867:557::-;6945:5;6993:6;6981:9;6976:3;6972:19;6968:32;6965:52;;;7013:1;7010;7003:12;6965:52;7035:22;;:::i;:::-;7026:31;;7080:55;7131:3;7120:9;7080:55;:::i;:::-;7073:5;7066:70;7188:3;7177:9;7173:19;7160:33;7202;7227:7;7202:33;:::i;:::-;7262:4;7251:16;;7244:33;7329:3;7314:19;;7301:33;7343;7301;7343;:::i;:::-;7403:4;7392:16;;7385:33;7396:5;6867:557;-1:-1:-1;;6867:557:436:o;7429:278::-;7539:6;7592:3;7580:9;7571:7;7567:23;7563:33;7560:53;;;7609:1;7606;7599:12;7560:53;7632:69;7693:7;7682:9;7632:69;:::i;8342:248::-;8410:6;8418;8471:2;8459:9;8450:7;8446:23;8442:32;8439:52;;;8487:1;8484;8477:12;8439:52;-1:-1:-1;;8510:23:436;;;8580:2;8565:18;;;8552:32;;-1:-1:-1;8342:248:436:o;8595:315::-;8663:6;8671;8724:2;8712:9;8703:7;8699:23;8695:32;8692:52;;;8740:1;8737;8730:12;8692:52;8779:9;8766:23;8798:31;8823:5;8798:31;:::i;:::-;8848:5;8900:2;8885:18;;;;8872:32;;-1:-1:-1;;;8595:315:436:o;8915:258::-;9015:6;9068:3;9056:9;9047:7;9043:23;9039:33;9036:53;;;9085:1;9082;9075:12;9036:53;9108:59;9159:7;9148:9;9108:59;:::i;9178:309::-;9262:12;;-1:-1:-1;;;;;9258:38:436;9246:51;;9360:4;9349:16;;;9343:23;9336:31;9329:39;9313:14;;;9306:63;9418:4;9407:16;;;9401:23;9385:14;;;9378:47;9474:4;9463:16;;;9457:23;9441:14;;9434:47;9178:309::o;9492:705::-;9670:4;9712:3;9701:9;9697:19;9689:27;;9725:58;9773:9;9764:6;9758:13;9725:58;:::i;:::-;9868:1;9864;9859:3;9855:11;9851:19;9843:4;9835:6;9831:17;9825:24;9821:50;9814:4;9803:9;9799:20;9792:80;9928:4;9920:6;9916:17;9910:24;9903:4;9892:9;9888:20;9881:54;9991:4;9983:6;9979:17;9973:24;9966:4;9955:9;9951:20;9944:54;10054:4;10046:6;10042:17;10036:24;10029:4;10018:9;10014:20;10007:54;10119:4;10111:6;10107:17;10101:24;10092:6;10081:9;10077:22;10070:56;10184:4;10176:6;10172:17;10166:24;10157:6;10146:9;10142:22;10135:56;9492:705;;;;:::o;10202:315::-;10270:6;10278;10331:2;10319:9;10310:7;10306:23;10302:32;10299:52;;;10347:1;10344;10337:12;10299:52;10383:9;10370:23;10360:33;;10443:2;10432:9;10428:18;10415:32;10456:31;10481:5;10456:31;:::i;:::-;10506:5;10496:15;;;10202:315;;;;;:::o;11173:616::-;11353:4;11395:3;11384:9;11380:19;11372:27;;11408:58;11456:9;11447:6;11441:13;11408:58;:::i;:::-;11522:4;11514:6;11510:17;11504:24;11497:4;11486:9;11482:20;11475:54;11585:4;11577:6;11573:17;11567:24;11560:4;11549:9;11545:20;11538:54;11648:4;11640:6;11636:17;11630:24;11623:4;11612:9;11608:20;11601:54;11711:4;11703:6;11699:17;11693:24;11686:4;11675:9;11671:20;11664:54;11776:4;11768:6;11764:17;11758:24;11749:6;11738:9;11734:22;11727:56;11173:616;;;;:::o;11794:356::-;11857:5;11905:4;11893:9;11888:3;11884:19;11880:30;11877:50;;;11923:1;11920;11913:12;11877:50;11945:22;;:::i;:::-;11936:31;;12003:9;11990:23;11983:5;11976:38;12074:2;12063:9;12059:18;12046:32;12041:2;12034:5;12030:14;12023:56;12139:2;12128:9;12124:18;12111:32;12106:2;12099:5;12095:14;12088:56;11794:356;;;;:::o;12155:471::-;12260:6;12313:3;12301:9;12292:7;12288:23;12284:33;12281:53;;;12330:1;12327;12320:12;12281:53;12356:22;;:::i;:::-;12401:54;12447:7;12436:9;12401:54;:::i;:::-;12394:5;12387:69;12508:2;12497:9;12493:18;12480:32;12521:33;12546:7;12521:33;:::i;:::-;12581:4;12570:16;;12563:33;12574:5;12155:471;-1:-1:-1;;;12155:471:436:o;12631:179::-;12714:5;12759:3;12750:6;12745:3;12741:16;12737:26;12734:46;;;12776:1;12773;12766:12;12815:287;12926:6;12979:3;12967:9;12958:7;12954:23;12950:33;12947:53;;;12996:1;12993;12986:12;12947:53;13019:77;13088:7;13077:9;13019:77;:::i;13107:301::-;13166:6;13219:2;13207:9;13198:7;13194:23;13190:32;13187:52;;;13235:1;13232;13225:12;13187:52;13274:9;13261:23;-1:-1:-1;;;;;13317:5:436;13313:46;13306:5;13303:57;13293:85;;13374:1;13371;13364:12;13413:898;13490:6;13498;13551:2;13539:9;13530:7;13526:23;13522:32;13519:52;;;13567:1;13564;13557:12;13519:52;13606:9;13593:23;13625:31;13650:5;13625:31;:::i;:::-;13675:5;-1:-1:-1;13699:2:436;13737:18;;;13724:32;-1:-1:-1;;;;;13805:14:436;;;13802:34;;;13832:1;13829;13822:12;13802:34;13870:6;13859:9;13855:22;13845:32;;13915:7;13908:4;13904:2;13900:13;13896:27;13886:55;;13937:1;13934;13927:12;13886:55;13973:2;13960:16;13995:2;13991;13988:10;13985:36;;;14001:18;;:::i;:::-;14043:53;14086:2;14067:13;;-1:-1:-1;;14063:27:436;14059:36;;14043:53;:::i;:::-;14030:66;;14119:2;14112:5;14105:17;14159:7;14154:2;14149;14145;14141:11;14137:20;14134:33;14131:53;;;14180:1;14177;14170:12;14131:53;14235:2;14230;14226;14222:11;14217:2;14210:5;14206:14;14193:45;14279:1;14274:2;14269;14262:5;14258:14;14254:23;14247:34;;14300:5;14290:15;;;;;13413:898;;;;;:::o;14316:183::-;14376:4;-1:-1:-1;;;;;14401:6:436;14398:30;14395:56;;;14431:18;;:::i;:::-;-1:-1:-1;14476:1:436;14472:14;14488:4;14468:25;;14316:183::o;14504:668::-;14558:5;14611:3;14604:4;14596:6;14592:17;14588:27;14578:55;;14629:1;14626;14619:12;14578:55;14665:6;14652:20;14691:4;14715:60;14731:43;14771:2;14731:43;:::i;:::-;14715:60;:::i;:::-;14797:3;14821:2;14816:3;14809:15;14849:4;14844:3;14840:14;14833:21;;14906:4;14900:2;14897:1;14893:10;14885:6;14881:23;14877:34;14863:48;;14934:3;14926:6;14923:15;14920:35;;;14951:1;14948;14941:12;14920:35;14987:4;14979:6;14975:17;15001:142;15017:6;15012:3;15009:15;15001:142;;;15083:17;;15071:30;;15121:12;;;;15034;;15001:142;;;-1:-1:-1;15161:5:436;14504:668;-1:-1:-1;;;;;;14504:668:436:o;15177:1616::-;15245:5;15293:4;15281:9;15276:3;15272:19;15268:30;15265:50;;;15311:1;15308;15301:12;15265:50;15333:22;;:::i;:::-;15324:31;;15391:9;15378:23;15371:5;15364:38;15421:2;15474;15463:9;15459:18;15446:32;-1:-1:-1;;;;;15538:2:436;15530:6;15527:14;15524:34;;;15554:1;15551;15544:12;15524:34;15577:22;;;;15629:4;15615:12;;;15611:23;15608:43;;;15647:1;15644;15637:12;15608:43;15675:22;;:::i;:::-;15735:2;15722:16;15763:2;15753:8;15750:16;15747:36;;;15779:1;15776;15769:12;15747:36;15808:52;15856:3;15845:8;15841:2;15837:17;15808:52;:::i;:::-;15799:7;15792:69;;15907:2;15903;15899:11;15886:25;15936:2;15926:8;15923:16;15920:36;;;15952:1;15949;15942:12;15920:36;15975:17;;16023:4;16015:13;;16011:23;-1:-1:-1;16001:51:436;;16048:1;16045;16038:12;16001:51;16084:2;16071:16;16107:60;16123:43;16163:2;16123:43;:::i;16107:60::-;16201:15;;;16283:1;16279:10;;;;16271:19;;16267:28;;;16232:12;;;;16307:15;;;16304:35;;;16335:1;16332;16325:12;16304:35;16359:11;;;;16379:142;16395:6;16390:3;16387:15;16379:142;;;16461:17;;16449:30;;16412:12;;;;16499;;;;16379:142;;;16537:16;;;16530:31;-1:-1:-1;;;16607:4:436;16599:13;;16586:27;16625:16;;;16622:36;;;16654:1;16651;16644:12;16622:36;16694:52;16742:3;16731:8;16727:2;16723:17;16694:52;:::i;:::-;16687:4;16678:7;16674:18;16667:80;;16779:7;16774:2;16767:5;16763:14;16756:31;;;;;15177:1616;;;;:::o;16798:529::-;16876:5;16924:4;16912:9;16907:3;16903:19;16899:30;16896:50;;;16942:1;16939;16932:12;16896:50;16964:22;;:::i;:::-;16955:31;;17022:9;17009:23;-1:-1:-1;;;;;17047:6:436;17044:30;17041:50;;;17087:1;17084;17077:12;17041:50;17114:68;17178:3;17169:6;17158:9;17154:22;17114:68;:::i;:::-;17107:5;17100:83;;17235:2;17224:9;17220:18;17207:32;17248:33;17273:7;17248:33;:::i;:::-;17308:2;17297:14;;17290:31;17301:5;16798:529;-1:-1:-1;;16798:529:436:o;17332:395::-;17442:6;17495:2;17483:9;17474:7;17470:23;17466:32;17463:52;;;17511:1;17508;17501:12;17463:52;17551:9;17538:23;-1:-1:-1;;;;;17576:6:436;17573:30;17570:50;;;17616:1;17613;17606:12;17570:50;17639:82;17713:7;17704:6;17693:9;17689:22;17639:82;:::i;17732:418::-;17798:5;17846:4;17834:9;17829:3;17825:19;17821:30;17818:50;;;17864:1;17861;17854:12;17818:50;17897:2;17891:9;17939:4;17931:6;17927:17;18010:6;17998:10;17995:22;-1:-1:-1;;;;;17962:10:436;17959:34;17956:62;17953:88;;;18021:18;;:::i;:::-;18057:2;18050:22;18120:23;;18105:39;;-1:-1:-1;18090:6:436;17732:418;-1:-1:-1;17732:418:436:o;18155:612::-;18263:6;18316:2;18304:9;18295:7;18291:23;18287:32;18284:52;;;18332:1;18329;18322:12;18284:52;18358:22;;:::i;:::-;18403:57;18452:7;18441:9;18403:57;:::i;:::-;18396:5;18389:72;18513:2;18502:9;18498:18;18485:32;18526:33;18551:7;18526:33;:::i;:::-;18586:2;18575:14;;18568:31;18651:2;18636:18;;18623:32;18664:33;18623:32;18664:33;:::i;:::-;18724:2;18713:14;;18706:31;18717:5;18155:612;-1:-1:-1;;;18155:612:436:o;19171:250::-;19256:1;19266:113;19280:6;19277:1;19274:13;19266:113;;;19356:11;;;19350:18;19337:11;;;19330:39;19302:2;19295:10;19266:113;;;-1:-1:-1;;19413:1:436;19395:16;;19388:27;19171:250::o;19426:271::-;19468:3;19506:5;19500:12;19533:6;19528:3;19521:19;19549:76;19618:6;19611:4;19606:3;19602:14;19595:4;19588:5;19584:16;19549:76;:::i;:::-;19679:2;19658:15;-1:-1:-1;;19654:29:436;19645:39;;;;19686:4;19641:50;;19426:271;-1:-1:-1;;19426:271:436:o;19702:220::-;19851:2;19840:9;19833:21;19814:4;19871:45;19912:2;19901:9;19897:18;19889:6;19871:45;:::i;19927:439::-;19980:3;20018:5;20012:12;20045:6;20040:3;20033:19;20071:4;20100;20095:3;20091:14;20084:21;;20139:4;20132:5;20128:16;20162:1;20172:169;20186:6;20183:1;20180:13;20172:169;;;20247:13;;20235:26;;20281:12;;;;20316:15;;;;20208:1;20201:9;20172:169;;;-1:-1:-1;20357:3:436;;19927:439;-1:-1:-1;;;;;19927:439:436:o;20371:1081::-;20460:5;20454:12;20449:3;20442:25;20424:3;20486:4;20536:2;20529:5;20525:14;20519:21;20570:4;20565:2;20560:3;20556:12;20549:26;20612:12;20606:19;20657:4;20650;20645:3;20641:14;20634:28;20683:59;20737:3;20732;20728:13;20712:14;20683:59;:::i;:::-;20779:21;;;20773:28;-1:-1:-1;;20863:14:436;;;20859:23;;20852:4;20843:14;;20836:47;20932:21;;20962:20;;;21036:23;;;;-1:-1:-1;21077:1:436;;20820:7;;21000:13;;;;21087:175;21101:6;21098:1;21095:13;21087:175;;;21164:13;;21150:28;;21237:15;;;;21123:1;21116:9;;;;;21200:14;;;;21087:175;;;21091:3;21317:4;21303:12;21299:23;21293:30;21271:52;;21375:2;21369:3;21362:5;21358:15;21354:24;21348:3;21343;21339:13;21332:47;21395:51;21440:5;21424:14;21395:51;:::i;:::-;21388:58;20371:1081;-1:-1:-1;;;;;;;;;20371:1081:436:o;21457:1148::-;21642:2;21631:9;21624:21;21605:4;21680:6;21674:13;21723:4;21718:2;21707:9;21703:18;21696:32;21765:12;21759:19;21815:4;21809:3;21798:9;21794:19;21787:33;21843:65;21903:3;21892:9;21888:19;21872:14;21843:65;:::i;:::-;21829:79;;21963:2;21949:12;21945:21;21939:28;22036:3;22032:8;22020:9;22012:6;22008:22;22004:37;21998:3;21987:9;21983:19;21976:66;22065:52;22110:6;22094:14;22065:52;:::i;:::-;22051:66;;;22178:4;22164:12;22160:23;22154:30;22148:3;22137:9;22133:19;22126:59;22260:4;22246:12;22242:23;22236:30;22229:38;22222:46;22216:3;22205:9;22201:19;22194:75;22318:2;22310:6;22306:15;22300:22;22278:44;;22331:56;22381:4;22370:9;22366:20;22350:14;-1:-1:-1;;;;;1945:31:436;1933:44;;1879:104;22331:56;22443:4;22435:6;22431:17;22425:24;22418:4;22407:9;22403:20;22396:54;22506:4;22498:6;22494:17;22488:24;22481:4;22470:9;22466:20;22459:54;22569:4;22561:6;22557:17;22551:24;22544:4;22533:9;22529:20;22522:54;22593:6;22585:14;;;;21457:1148;;;;:::o;23430:272::-;23632:3;23617:19;;23645:51;23621:9;23678:6;23645:51;:::i;23707:400::-;23814:6;23867:2;23855:9;23846:7;23842:23;23838:32;23835:52;;;23883:1;23880;23873:12;23835:52;23923:9;23910:23;-1:-1:-1;;;;;23948:6:436;23945:30;23942:50;;;23988:1;23985;23978:12;23942:50;24011:90;24093:7;24084:6;24073:9;24069:22;24011:90;:::i;25033:255::-;25125:6;25178:2;25166:9;25157:7;25153:23;25149:32;25146:52;;;25194:1;25191;25184:12;25146:52;25217:65;25274:7;25263:9;25217:65;:::i;25293:486::-;25354:5;25402:4;25390:9;25385:3;25381:19;25377:30;25374:50;;;25420:1;25417;25410:12;25374:50;25442:22;;:::i;:::-;25433:31;;25500:9;25487:23;25480:5;25473:38;25571:2;25560:9;25556:18;25543:32;25538:2;25531:5;25527:14;25520:56;25636:2;25625:9;25621:18;25608:32;25603:2;25596:5;25592:14;25585:56;25701:2;25690:9;25686:18;25673:32;25668:2;25661:5;25657:14;25650:56;25767:3;25756:9;25752:19;25739:33;25733:3;25726:5;25722:15;25715:58;25293:486;;;;:::o;25784:489::-;25852:5;25900:6;25888:9;25883:3;25879:19;25875:32;25872:52;;;25920:1;25917;25910:12;25872:52;25942:22;;:::i;:::-;25933:31;;26001:9;25988:23;26020:33;26045:7;26020:33;:::i;:::-;26062:22;;26116:57;26169:3;26164:2;26149:18;;26116:57;:::i;:::-;26111:2;26104:5;26100:14;26093:81;26208:58;26262:3;26256;26245:9;26241:19;26208:58;:::i;26278:482::-;26388:6;26441:3;26429:9;26420:7;26416:23;26412:33;26409:53;;;26458:1;26455;26448:12;26409:53;26484:22;;:::i;:::-;26529:59;26580:7;26569:9;26529:59;:::i;:::-;26522:5;26515:74;26641:3;26630:9;26626:19;26613:33;26655;26680:7;26655:33;:::i;27030:626::-;27127:6;27135;27188:2;27176:9;27167:7;27163:23;27159:32;27156:52;;;27204:1;27201;27194:12;27156:52;27244:9;27231:23;-1:-1:-1;;;;;27314:2:436;27306:6;27303:14;27300:34;;;27330:1;27327;27320:12;27300:34;27368:6;27357:9;27353:22;27343:32;;27413:7;27406:4;27402:2;27398:13;27394:27;27384:55;;27435:1;27432;27425:12;27384:55;27475:2;27462:16;27501:2;27493:6;27490:14;27487:34;;;27517:1;27514;27507:12;27487:34;27570:7;27565:2;27555:6;27552:1;27548:14;27544:2;27540:23;27536:32;27533:45;27530:65;;;27591:1;27588;27581:12;27530:65;27622:2;27614:11;;;;;27644:6;;-1:-1:-1;27030:626:436;;-1:-1:-1;;;;27030:626:436:o;27661:801::-;27821:4;27850:2;27890;27879:9;27875:18;27920:2;27909:9;27902:21;27943:6;27978;27972:13;28009:6;28001;27994:22;28047:2;28036:9;28032:18;28025:25;;28109:2;28099:6;28096:1;28092:14;28081:9;28077:30;28073:39;28059:53;;28147:2;28139:6;28135:15;28168:1;28178:255;28192:6;28189:1;28186:13;28178:255;;;28285:2;28281:7;28269:9;28261:6;28257:22;28253:36;28248:3;28241:49;28313:40;28346:6;28337;28331:13;28313:40;:::i;:::-;28303:50;-1:-1:-1;28411:12:436;;;;28376:15;;;;28214:1;28207:9;28178:255;;;-1:-1:-1;28450:6:436;;27661:801;-1:-1:-1;;;;;;;27661:801:436:o;28467:323::-;28553:5;28547:12;28542:3;28535:25;28609:4;28602:5;28598:16;28592:23;28585:4;28580:3;28576:14;28569:47;28665:4;28658:5;28654:16;28648:23;28641:4;28636:3;28632:14;28625:47;28721:4;28714:5;28710:16;28704:23;28697:4;28692:3;28688:14;28681:47;28777:4;28770:5;28766:16;28760:23;28753:4;28748:3;28744:14;28737:47;;;28467:323::o;28795:553::-;29042:13;;-1:-1:-1;;;;;29038:39:436;29020:58;;29125:4;29113:17;;;29107:24;29007:3;28992:19;;;29140:68;;29187:20;;29107:24;29140:68;:::i;:::-;;29257:4;29249:6;29245:17;29239:24;29272:70;29336:4;29325:9;29321:20;29305:14;29272:70;:::i;29649:266::-;29435:12;;-1:-1:-1;;;;;29431:38:436;29419:51;;29519:4;29508:16;;;29502:23;29486:14;;;29479:47;29575:4;29564:16;;;29558:23;29542:14;;;29535:47;29631:4;29620:16;;;29614:23;29598:14;;;29591:47;29847:3;29832:19;;29860:49;29353:291;30204:850;30277:5;30325:4;30313:9;30308:3;30304:19;30300:30;30297:50;;;30343:1;30340;30333:12;30297:50;30365:22;;:::i;:::-;30356:31;;30424:9;30411:23;30443:33;30468:7;30443:33;:::i;:::-;30485:22;;30567:2;30552:18;;;30539:32;30523:14;;;30516:56;30624:2;30609:18;;30596:32;30637:30;30596:32;30637:30;:::i;:::-;30694:2;30683:14;;30676:31;30759:2;30744:18;;30731:32;30772:30;30731:32;30772:30;:::i;:::-;30829:2;30818:14;;30811:31;30893:3;30878:19;;30865:33;-1:-1:-1;;;;;30910:30:436;;30907:50;;;30953:1;30950;30943:12;30907:50;30990:57;31043:3;31034:6;31023:9;31019:22;30990:57;:::i;:::-;30984:3;30977:5;30973:15;30966:82;;30204:850;;;;:::o;31059:798::-;31174:6;31227:2;31215:9;31206:7;31202:23;31198:32;31195:52;;;31243:1;31240;31233:12;31195:52;31283:9;31270:23;-1:-1:-1;;;;;31353:2:436;31345:6;31342:14;31339:34;;;31369:1;31366;31359:12;31339:34;31392:22;;;;31448:4;31430:16;;;31426:27;31423:47;;;31466:1;31463;31456:12;31423:47;31492:22;;:::i;:::-;31552:2;31539:16;31580:2;31570:8;31567:16;31564:36;;;31596:1;31593;31586:12;31564:36;31623:72;31687:7;31676:8;31672:2;31668:17;31623:72;:::i;:::-;31616:5;31609:87;;31741:2;31737;31733:11;31720:25;31705:40;;31754:33;31779:7;31754:33;:::i;:::-;31814:2;31803:14;;31796:31;;;;-1:-1:-1;31807:5:436;31059:798;-1:-1:-1;;;31059:798:436:o;32514:210::-;32616:6;32669:3;32657:9;32648:7;32644:23;32640:33;32637:53;;;32686:1;32683;32676:12;32729:174;32807:5;32852:3;32843:6;32838:3;32834:16;32830:26;32827:46;;;32869:1;32866;32859:12;32908:898;33184:6;33192;33200;33208;33216;33269:3;33257:9;33248:7;33244:23;33240:33;33237:53;;;33286:1;33283;33276:12;33237:53;33325:9;33312:23;33344:31;33369:5;33344:31;:::i;:::-;33394:5;-1:-1:-1;33418:81:436;33491:7;33486:2;33471:18;;33418:81;:::i;:::-;33408:91;;33518:87;33597:7;33591:3;33580:9;33576:19;33518:87;:::i;:::-;33508:97;;33624:75;33691:7;33685:3;33674:9;33670:19;33624:75;:::i;:::-;33614:85;;33718:82;33792:7;33786:3;33775:9;33771:19;33718:82;:::i;:::-;33708:92;;32908:898;;;;;;;;:::o;33811:159::-;33875:5;33920:2;33911:6;33906:3;33902:16;33898:25;33895:45;;;33936:1;33933;33926:12;33975:248;34067:6;34120:2;34108:9;34099:7;34095:23;34091:32;34088:52;;;34136:1;34133;34126:12;34088:52;34159:58;34209:7;34198:9;34159:58;:::i;34228:500::-;34289:5;34337:4;34325:9;34320:3;34316:19;34312:30;34309:50;;;34355:1;34352;34345:12;34309:50;34377:22;;:::i;:::-;34368:31;;34436:9;34423:23;34455:33;34480:7;34455:33;:::i;:::-;34497:22;;34579:2;34564:18;;;34551:32;34535:14;;;34528:56;34636:2;34621:18;;34608:32;34649:33;34608:32;34649:33;:::i;34733:399::-;34804:5;34852:4;34840:9;34835:3;34831:19;34827:30;34824:50;;;34870:1;34867;34860:12;34824:50;34892:22;;:::i;:::-;34883:31;;34937:48;34981:3;34970:9;34937:48;:::i;:::-;34930:5;34923:63;35038:2;35027:9;35023:18;35010:32;35051:33;35076:7;35051:33;:::i;35137:264::-;35240:6;35293:3;35281:9;35272:7;35268:23;35264:33;35261:53;;;35310:1;35307;35300:12;35261:53;35333:62;35387:7;35376:9;35333:62;:::i;36165:600::-;36397:4;36439:3;36428:9;36424:19;36416:27;;36470:6;36459:9;36452:25;36526:6;36513:20;36508:2;36497:9;36493:18;36486:48;36595:2;36587:6;36583:15;36570:29;36565:2;36554:9;36550:18;36543:57;36647:2;36639:6;36635:15;36622:29;36660:31;36685:5;36660:31;:::i;:::-;-1:-1:-1;;;;;36727:31:436;36722:2;36707:18;;;;36700:59;;;;36165:600;;-1:-1:-1;;36165:600:436:o;37049:1073::-;37318:6;37307:9;37300:25;37361:2;37356;37345:9;37341:18;37334:30;37281:4;37412:6;37399:20;37499:2;37495:7;37486:6;37470:14;37466:27;37462:41;37442:18;37438:66;37428:94;;37518:1;37515;37508:12;37428:94;37544:31;;37652:2;37641:14;;;37598:19;-1:-1:-1;;;;;37667:30:436;;37664:50;;;37710:1;37707;37700:12;37664:50;37759:6;37743:14;37739:27;37730:7;37726:41;37723:61;;;37780:1;37777;37770:12;37723:61;37820:2;37815;37804:9;37800:18;37793:30;37860:6;37854:3;37843:9;37839:19;37832:35;37919:6;37910:7;37904:3;37893:9;37889:19;37876:50;37976:1;37970:3;37961:6;37950:9;37946:22;37942:32;37935:43;38039:2;38031:6;38027:15;38014:29;38009:2;37998:9;37994:18;37987:57;38112:3;38105:2;38101:7;38096:2;38088:6;38084:15;38080:29;38069:9;38065:45;38061:55;38053:63;;;;37049:1073;;;;;:::o;38127:251::-;38197:6;38250:2;38238:9;38229:7;38225:23;38221:32;38218:52;;;38266:1;38263;38256:12;38218:52;38298:9;38292:16;38317:31;38342:5;38317:31;:::i;38383:242::-;38475:6;38528:2;38516:9;38507:7;38503:23;38499:32;38496:52;;;38544:1;38541;38534:12;38496:52;38567;38611:7;38600:9;38567:52;:::i;38917:277::-;39004:6;39057:2;39045:9;39036:7;39032:23;39028:32;39025:52;;;39073:1;39070;39063:12;39025:52;39105:9;39099:16;39144:1;39137:5;39134:12;39124:40;;39160:1;39157;39150:12;39199:127;39260:10;39255:3;39251:20;39248:1;39241:31;39291:4;39288:1;39281:15;39315:4;39312:1;39305:15;39331:128;39398:9;;;39419:11;;;39416:37;;;39433:18;;:::i;39464:217::-;39504:1;39530;39520:132;;39574:10;39569:3;39565:20;39562:1;39555:31;39609:4;39606:1;39599:15;39637:4;39634:1;39627:15;39520:132;-1:-1:-1;39666:9:436;;39464:217::o;39902:670::-;40017:6;40070:3;40058:9;40049:7;40045:23;40041:33;40038:53;;;40087:1;40084;40077:12;40038:53;40113:22;;:::i;:::-;40164:9;40158:16;40151:5;40144:31;40228:2;40217:9;40213:18;40207:25;40202:2;40195:5;40191:14;40184:49;40286:2;40275:9;40271:18;40265:25;40260:2;40253:5;40249:14;40242:49;40344:2;40333:9;40329:18;40323:25;40318:2;40311:5;40307:14;40300:49;40403:3;40392:9;40388:19;40382:26;40376:3;40369:5;40365:15;40358:51;40454:3;40443:9;40439:19;40433:26;40468:33;40493:7;40468:33;:::i;:::-;40528:3;40517:15;;40510:32;40521:5;39902:670;-1:-1:-1;;;39902:670:436:o;40577:484::-;40668:12;;-1:-1:-1;;;;;40664:38:436;40652:51;;40752:4;40741:16;;;40735:23;40719:14;;;40712:47;40808:4;40797:16;;;40791:23;40775:14;;;40768:47;40864:4;40853:16;;;40847:23;40831:14;;;40824:47;40920:4;40909:16;;;40903:23;40887:14;;;40880:47;40690:3;40965:16;;;40959:23;40943:14;;;40936:47;41046:4;41035:16;;;41029:23;41022:31;41015:39;40999:14;;40992:63;40577:484::o;41066:360::-;41151:58;41205:3;41197:5;41191:12;41151:58;:::i;:::-;41255:4;41244:16;;41238:23;-1:-1:-1;;;;;41331:21:436;;;41324:4;41315:14;;41308:45;41408:4;41397:16;;;41391:23;41387:32;41378:6;41369:16;;;41362:58;41066:360::o;41431:428::-;41742:25;;;41729:3;41714:19;;41776:77;41849:2;41834:18;;41826:6;41776:77;:::i;42809:184::-;42879:6;42932:2;42920:9;42911:7;42907:23;42903:32;42900:52;;;42948:1;42945;42938:12;42900:52;-1:-1:-1;42971:16:436;;42809:184;-1:-1:-1;42809:184:436:o;42998:394::-;43285:25;;;43272:3;43257:19;;43319:67;43382:2;43367:18;;43359:6;43319:67;:::i;43397:737::-;43469:5;43517:4;43505:9;43500:3;43496:19;43492:30;43489:50;;;43535:1;43532;43525:12;43489:50;43568:2;43562:9;43610:4;43602:6;43598:17;43681:6;43669:10;43666:22;-1:-1:-1;;;;;43633:10:436;43630:34;43627:62;43624:88;;;43692:18;;:::i;:::-;43732:10;43728:2;43721:22;;43761:6;43752:15;;43797:9;43791:16;43816:33;43841:7;43816:33;:::i;:::-;43858:23;;43926:2;43911:18;;43905:25;43939:30;43905:25;43939:30;:::i;:::-;44002:7;43997:2;43989:6;43985:15;43978:32;;44064:2;44053:9;44049:18;44043:25;44038:2;44030:6;44026:15;44019:50;44123:2;44112:9;44108:18;44102:25;44097:2;44089:6;44085:15;44078:50;;43397:737;;;;:::o;44139:785::-;44252:6;44305:3;44293:9;44284:7;44280:23;44276:33;44273:53;;;44322:1;44319;44312:12;44273:53;44348:22;;:::i;:::-;44393:63;44448:7;44437:9;44393:63;:::i;:::-;44386:5;44379:78;44502:3;44491:9;44487:19;44481:26;44516:33;44541:7;44516:33;:::i;:::-;44583:7;44576:4;44569:5;44565:16;44558:33;;44646:3;44635:9;44631:19;44625:26;44618:4;44611:5;44607:16;44600:52;44707:3;44696:9;44692:19;44686:26;44679:4;44672:5;44668:16;44661:52;44767:4;44756:9;44752:20;44746:27;44740:3;44733:5;44729:15;44722:52;44828:3;44817:9;44813:19;44807:26;44801:3;44794:5;44790:15;44783:51;44888:3;44877:9;44873:19;44867:26;44861:3;44854:5;44850:15;44843:51;44913:5;44903:15;;;44139:785;;;;:::o;44929:237::-;45061:9;45098:62;45145:14;45138:5;45098:62;:::i;45572:653::-;45686:6;45739:3;45727:9;45718:7;45714:23;45710:33;45707:53;;;45756:1;45753;45746:12;45707:53;45782:22;;:::i;:::-;45827:63;45882:7;45871:9;45827:63;:::i;:::-;45820:5;45813:78;45946:3;45935:9;45931:19;45925:26;45918:4;45911:5;45907:16;45900:52;46007:3;45996:9;45992:19;45986:26;45979:4;45972:5;45968:16;45961:52;46068:4;46057:9;46053:20;46047:27;46040:4;46033:5;46029:16;46022:53;46129:3;46118:9;46114:19;46108:26;46102:3;46095:5;46091:15;46084:51;46189:3;46178:9;46174:19;46168:26;46162:3;46155:5;46151:15;46144:51;46214:5;46204:15;;;45572:653;;;;:::o;46230:606::-;46531:25;;;46575:13;;46624:9;;46619:2;46604:18;;;46597:37;;;;46676:11;;;46670:18;46665:2;46650:18;;;46643:46;;;;46731:11;;;46725:18;46720:2;46705:18;;46698:46;46791:15;46785:22;-1:-1:-1;;;;;46781:48:436;46775:3;46760:19;;46753:77;46518:3;46503:19;;46230:606::o;47191:482::-;47309:5;47296:19;47291:3;47284:32;47364:4;47357:5;47353:16;47340:30;47379:33;47404:7;47379:33;:::i;:::-;-1:-1:-1;;;;;47444:33:436;47437:4;47428:14;;47421:57;47534:4;47523:16;;;47510:30;47494:14;;;47487:54;47597:4;47586:16;;;47573:30;47557:14;;;47550:54;47660:4;47649:16;;;47636:30;47620:14;;47613:54;47191:482::o;47678:436::-;47989:25;;;47976:3;47961:19;;48023:85;48104:2;48089:18;;48081:6;48023:85;:::i;48119:245::-;48198:6;48206;48259:2;48247:9;48238:7;48234:23;48230:32;48227:52;;;48275:1;48272;48265:12;48227:52;-1:-1:-1;;48298:16:436;;48354:2;48339:18;;;48333:25;48298:16;;48333:25;;-1:-1:-1;48119:245:436:o;48369:508::-;48708:25;;;48695:3;48680:19;;48742:85;48823:2;48808:18;;48800:6;48742:85;:::i;:::-;48864:6;48858:3;48847:9;48843:19;48836:35;48369:508;;;;;;:::o;49206:1304::-;49280:3;49324:5;49318:12;49351:4;49346:3;49339:17;49394:12;49388:19;49381:4;49376:3;49372:14;49365:43;49427:4;49486:2;49472:12;49468:21;49462:28;49440:50;;49520:4;49515:2;49510:3;49506:12;49499:26;49562:14;49556:21;49608:2;49602:3;49597;49593:13;49586:25;49632:59;49686:3;49681;49677:13;49661:14;49632:59;:::i;:::-;49728:23;;;49722:30;-1:-1:-1;;49814:14:436;;;49810:23;;49804:3;49795:13;;49788:46;49883:21;;49913:20;;;49987:23;;;;-1:-1:-1;50028:1:436;;49771:8;;49951:13;;;;50038:175;50052:6;50049:1;50046:13;50038:175;;;50115:13;;50101:28;;50188:15;;;;50074:1;50067:9;;;;;50151:14;;;;50038:175;;;50042:3;50270:4;50254:14;50250:25;50244:32;50222:54;;50328:2;50322:3;50315:5;50311:15;50307:24;50301:3;50296;50292:13;50285:47;50354:51;50399:5;50383:14;50354:51;:::i;:::-;50445:14;;;50439:21;-1:-1:-1;;;;;50435:47:436;50421:12;;;;50414:69;;;;-1:-1:-1;50341:64:436;;49206:1304;-1:-1:-1;;;;;49206:1304:436:o;50515:439::-;50808:6;50797:9;50790:25;50851:2;50846;50835:9;50831:18;50824:30;50771:4;50871:77;50944:2;50933:9;50929:18;50921:6;50871:77;:::i;52238:371::-;52511:25;;;52498:3;52483:19;;52545:58;52599:2;52584:18;;52576:6;29435:12;;-1:-1:-1;;;;;29431:38:436;29419:51;;29519:4;29508:16;;;29502:23;29486:14;;;29479:47;29575:4;29564:16;;;29558:23;29542:14;;;29535:47;29631:4;29620:16;;;29614:23;29598:14;;29591:47;29353:291;52838:254;52982:9;53019:67;53071:14;53064:5;53019:67;:::i;53097:538::-;53213:6;53266:3;53254:9;53245:7;53241:23;53237:33;53234:53;;;53283:1;53280;53273:12;53234:53;53309:22;;:::i;:::-;53360:9;53354:16;53347:5;53340:31;53424:2;53413:9;53409:18;53403:25;53398:2;53391:5;53387:14;53380:49;53482:2;53471:9;53467:18;53461:25;53456:2;53449:5;53445:14;53438:49;53540:2;53529:9;53525:18;53519:25;53514:2;53507:5;53503:14;53496:49;53599:3;53588:9;53584:19;53578:26;53572:3;53565:5;53561:15;53554:51;53624:5;53614:15;;;53097:538;;;;:::o;53640:129::-;-1:-1:-1;;;;;53718:5:436;53714:30;53707:5;53704:41;53694:69;;53759:1;53756;53749:12;53774:502;53886:6;53939:2;53927:9;53918:7;53914:23;53910:32;53907:52;;;53955:1;53952;53945:12;53907:52;53981:22;;:::i;:::-;54033:9;54027:16;54052:33;54077:7;54052:33;:::i;:::-;54094:22;;54161:2;54146:18;;54140:25;54174:32;54140:25;54174:32;:::i;54281:519::-;54499:4;54541:2;54530:9;54526:18;54518:26;;54571:6;54560:9;54553:25;54627:6;54614:20;54609:2;54598:9;54594:18;54587:48;54682:2;54674:6;54670:15;54657:29;54695:31;54720:5;54695:31;:::i;:::-;-1:-1:-1;;;;;54762:31:436;54757:2;54742:18;;;;54735:59;;;;54281:519;;-1:-1:-1;;54281:519:436:o;54805:785::-;55061:4;55103:3;55092:9;55088:19;55080:27;;55134:6;55123:9;55116:25;55166:6;55160:13;55209:1;55205;55200:3;55196:11;55192:19;55262:2;55257;55251:9;55247:18;55242:2;55231:9;55227:18;55220:46;55309:2;55305;55301:11;55295:18;55322:66;55384:2;55373:9;55369:18;55355:12;55322:66;:::i;:::-;;55433:2;55429;55425:11;55419:18;55397:40;;55446:69;55510:3;55499:9;55495:19;55479:14;55446:69;:::i;:::-;55580:2;55574;55566:6;55562:15;55556:22;55552:31;55546:3;55535:9;55531:19;55524:60;;;54805:785;;;;;:::o;55595:247::-;55690:6;55743:2;55731:9;55722:7;55718:23;55714:32;55711:52;;;55759:1;55756;55749:12;55711:52;55782:54;55828:7;55817:9;55782:54;:::i;56282:1050::-;56585:6;56574:9;56567:25;56628:2;56623;56612:9;56608:18;56601:30;56548:4;56666:6;56660:13;56709:2;56704;56693:9;56689:18;56682:30;56748:1;56744;56739:3;56735:11;56731:19;56812:2;56797:12;56791:19;56787:28;56781:3;56770:9;56766:19;56759:57;56878:2;56864:12;56860:21;56854:28;56847:4;56836:9;56832:20;56825:58;56958:2;56944:12;56940:21;56934:28;56927:36;56920:44;56914:3;56903:9;56899:19;56892:73;57040:4;57026:12;57022:23;57016:30;57009:38;57002:46;56996:3;56985:9;56981:19;56974:75;57104:3;57090:12;57086:22;57080:29;57058:51;;57146:4;57140:3;57129:9;57125:19;57118:33;57171:65;57231:3;57220:9;57216:19;57200:14;57171:65;:::i;:::-;57160:76;;57302:2;57296;57288:6;57284:15;57278:22;57274:31;57267:4;57256:9;57252:20;57245:61;;57323:3;57315:11;;;56282:1050;;;;;:::o;57828:391::-;58109:25;;;58096:3;58081:19;;58143:70;58209:2;58194:18;;58186:6;57671:19;;57659:32;;57747:4;57736:16;;;57723:30;57707:14;;;57700:54;57810:4;57799:16;;;57786:30;57770:14;;57763:54;57581:242;58224:463;58533:25;;;58520:3;58505:19;;58567:70;58633:2;58618:18;;58610:6;57671:19;;57659:32;;57747:4;57736:16;;;57723:30;57707:14;;;57700:54;57810:4;57799:16;;;57786:30;57770:14;;57763:54;57581:242;58567:70;58674:6;58668:3;58657:9;58653:19;58646:35;58224:463;;;;;;:::o;58692:245::-;58759:6;58812:2;58800:9;58791:7;58787:23;58783:32;58780:52;;;58828:1;58825;58818:12;58780:52;58860:9;58854:16;58879:28;58901:5;58879:28;:::i;58942:258::-;59042:6;59095:3;59083:9;59074:7;59070:23;59066:33;59063:53;;;59112:1;59109;59102:12;59063:53;59135:59;59186:7;59175:9;59135:59;:::i;59205:540::-;59318:5;59305:19;59300:3;59293:32;59381:4;59374:5;59370:16;59357:30;59350:4;59345:3;59341:14;59334:54;59444:4;59437:5;59433:16;59420:30;59413:4;59408:3;59404:14;59397:54;59507:4;59500:5;59496:16;59483:30;59476:4;59471:3;59467:14;59460:54;59570:4;59563:5;59559:16;59546:30;59539:4;59534:3;59530:14;59523:54;59625:4;59618:5;59614:16;59601:30;59640:33;59665:7;59640:33;:::i;:::-;-1:-1:-1;;;;;59705:33:436;59726:3;59689:14;;;;59682:57;;;;-1:-1:-1;59205:540:436:o;60134:382::-;60247:5;60234:19;60262:33;60287:7;60262:33;:::i;:::-;-1:-1:-1;;;;;60316:33:436;60304:46;;60398:4;60387:16;;60374:30;60413:32;60374:30;60413:32;:::i;:::-;-1:-1:-1;;;;;60481:7:436;60477:32;60470:4;60465:3;60461:14;60454:56;;60134:382;;:::o;60521:966::-;60632:5;60619:19;60647:33;60672:7;60647:33;:::i;:::-;-1:-1:-1;;;;;60739:16:436;;;60727:29;;60804:4;60793:16;;60780:30;;60819:33;60780:30;60819:33;:::i;:::-;60884:16;;;60877:4;60868:14;;60861:40;60949:4;60938:16;;60925:30;;60964:33;60925:30;60964:33;:::i;:::-;61029:16;;;61022:4;61013:14;;61006:40;61094:4;61083:16;;61070:30;;61109:33;61070:30;61109:33;:::i;:::-;61174:16;;;61167:4;61158:14;;61151:40;61239:4;61228:16;;61215:30;;61254:33;61215:30;61254:33;:::i;:::-;61319:16;;;61312:4;61303:14;;61296:40;61384:4;61373:16;;61360:30;;61399:33;61360:30;61399:33;:::i;:::-;61477:2;61468:7;61464:16;61457:4;61452:3;61448:14;61441:40;;;60521:966;;:::o;61492:1127::-;62167:25;;;-1:-1:-1;;;;;62228:32:436;;62223:2;62208:18;;62201:60;62154:3;62139:19;;62270:80;62346:2;62331:18;;62323:6;62270:80;:::i;:::-;59851:19;;62436:3;62421:19;;59839:32;59927:4;59916:16;;59903:30;59887:14;;;59880:54;59990:4;59979:16;;59966:30;59950:14;;;59943:54;60053:4;60042:16;;60029:30;60013:14;;;60006:54;60116:4;60105:16;;60092:30;60076:14;;;60069:54;62450:78;62523:3;62512:9;62508:19;62500:6;62450:78;:::i;:::-;62537:76;62608:3;62597:9;62593:19;62585:6;62537:76;:::i;:::-;61492:1127;;;;;;;;;:::o;62624:1030::-;63271:25;;;63258:3;63243:19;;63305:80;63381:2;63366:18;;63358:6;63305:80;:::i;:::-;59851:19;;63471:3;63456:19;;59839:32;59927:4;59916:16;;59903:30;59887:14;;;59880:54;59990:4;59979:16;;59966:30;59950:14;;;59943:54;60053:4;60042:16;;60029:30;60013:14;;;60006:54;60116:4;60105:16;;60092:30;60076:14;;;60069:54;63485:78;63558:3;63547:9;63543:19;63535:6;63485:78;:::i;:::-;63572:76;63643:3;63632:9;63628:19;63620:6;63572:76;:::i;:::-;62624:1030;;;;;;;;:::o;64607:407::-;64904:25;;;64891:3;64876:19;;64938:70;65004:2;64989:18;;64981:6;64326:12;;64401:9;;-1:-1:-1;;;;;64397:18:436;;;64385:31;;64462:4;64454:13;;;64448:20;64432:14;;;64425:44;64519:4;64511:13;;;64505:20;64501:29;;64485:14;;;64478:53;;;;64573:16;;64567:23;64563:32;64556:4;64547:14;;;64540:56;64238:364;65429:253;65527:6;65580:2;65568:9;65559:7;65555:23;65551:32;65548:52;;;65596:1;65593;65586:12;65548:52;65619:57;65668:7;65657:9;65619:57;:::i;65966:416::-;66055:1;66092:5;66055:1;66106:270;66127:7;66117:8;66114:21;66106:270;;;66186:4;66182:1;66178:6;66174:17;66168:4;66165:27;66162:53;;;66195:18;;:::i;:::-;66245:7;66235:8;66231:22;66228:55;;;66265:16;;;;66228:55;66344:22;;;;66304:15;;;;66106:270;;;66110:3;65966:416;;;;;:::o;66387:806::-;66436:5;66466:8;66456:80;;-1:-1:-1;66507:1:436;66521:5;;66456:80;66555:4;66545:76;;-1:-1:-1;66592:1:436;66606:5;;66545:76;66637:4;66655:1;66650:59;;;;66723:1;66718:130;;;;66630:218;;66650:59;66680:1;66671:10;;66694:5;;;66718:130;66755:3;66745:8;66742:17;66739:43;;;66762:18;;:::i;:::-;-1:-1:-1;;66818:1:436;66804:16;;66833:5;;66630:218;;66932:2;66922:8;66919:16;66913:3;66907:4;66904:13;66900:36;66894:2;66884:8;66881:16;66876:2;66870:4;66867:12;66863:35;66860:77;66857:159;;;-1:-1:-1;66969:19:436;;;67001:5;;66857:159;67048:34;67073:8;67067:4;67048:34;:::i;:::-;67118:6;67114:1;67110:6;67106:19;67097:7;67094:32;67091:58;;;67129:18;;:::i;:::-;67167:20;;66387:806;-1:-1:-1;;;66387:806:436:o;67198:131::-;67258:5;67287:36;67314:8;67308:4;67287:36;:::i;67334:168::-;67407:9;;;67438;;67455:15;;;67449:22;;67435:37;67425:71;;67476:18;;:::i;67507:273::-;67575:6;67628:2;67616:9;67607:7;67603:23;67599:32;67596:52;;;67644:1;67641;67634:12;67596:52;67676:9;67670:16;67726:4;67719:5;67715:16;67708:5;67705:27;67695:55;;67746:1;67743;67736:12;67785:140;67843:5;67872:47;67913:4;67903:8;67899:19;67893:4;67872:47;:::i;68119:127::-;68180:10;68175:3;68171:20;68168:1;68161:31;68211:4;68208:1;68201:15;68235:4;68232:1;68225:15;68251:521;68328:4;68334:6;68394:11;68381:25;68488:2;68484:7;68473:8;68457:14;68453:29;68449:43;68429:18;68425:68;68415:96;;68507:1;68504;68497:12;68415:96;68534:33;;68586:20;;;-1:-1:-1;;;;;;68618:30:436;;68615:50;;;68661:1;68658;68651:12;68615:50;68694:4;68682:17;;-1:-1:-1;68725:14:436;68721:27;;;68711:38;;68708:58;;;68762:1;68759;68752:12;68708:58;68251:521;;;;;:::o;68777:287::-;68906:3;68944:6;68938:13;68960:66;69019:6;69014:3;69007:4;68999:6;68995:17;68960:66;:::i;:::-;69042:16;;;;;68777:287;-1:-1:-1;;68777:287:436:o",
    "linkReferences": {
      "src/market/libraries/LoanLibrary.sol": {
        "LoanLibrary": [
          { "start": 4061, "length": 20 },
          { "start": 7381, "length": 20 },
          { "start": 7542, "length": 20 },
          { "start": 8674, "length": 20 },
          { "start": 9962, "length": 20 }
        ]
      },
      "src/market/libraries/OfferLibrary.sol": {
        "OfferLibrary": [
          { "start": 4855, "length": 20 },
          { "start": 12360, "length": 20 }
        ]
      },
      "src/market/libraries/RiskLibrary.sol": {
        "RiskLibrary": [
          { "start": 4647, "length": 20 },
          { "start": 5386, "length": 20 },
          { "start": 5721, "length": 20 },
          { "start": 6191, "length": 20 },
          { "start": 10383, "length": 20 },
          { "start": 10622, "length": 20 },
          { "start": 11216, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "BuyCreditLimit": [
          { "start": 7205, "length": 20 },
          { "start": 7304, "length": 20 }
        ]
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "BuyCreditMarket": [
          { "start": 4405, "length": 20 },
          { "start": 4504, "length": 20 },
          { "start": 4971, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Claim.sol": {
        "Claim": [
          { "start": 12013, "length": 20 },
          { "start": 12112, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Compensate.sol": {
        "Compensate": [
          { "start": 5496, "length": 20 },
          { "start": 5595, "length": 20 }
        ]
      },
      "src/market/libraries/actions/CopyLimitOrders.sol": {
        "CopyLimitOrders": [
          { "start": 9439, "length": 20 },
          { "start": 9538, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Deposit.sol": {
        "Deposit": [
          { "start": 12417, "length": 20 },
          { "start": 12516, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Initialize.sol": {
        "Initialize": [
          { "start": 11528, "length": 20 },
          { "start": 11661, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "Liquidate": [
          { "start": 10868, "length": 20 },
          { "start": 10967, "length": 20 },
          { "start": 11092, "length": 20 }
        ]
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "LiquidateWithReplacement": [
          { "start": 5979, "length": 20 },
          { "start": 6078, "length": 20 },
          { "start": 6334, "length": 20 }
        ]
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "PartialRepay": [
          { "start": 3361, "length": 20 },
          { "start": 3460, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Repay.sol": {
        "Repay": [
          { "start": 9185, "length": 20 },
          { "start": 9283, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "SelfLiquidate": [
          { "start": 7012, "length": 20 },
          { "start": 7146, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "SellCreditLimit": [
          { "start": 6771, "length": 20 },
          { "start": 6870, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "SellCreditMarket": [
          { "start": 5228, "length": 20 },
          { "start": 10139, "length": 20 },
          { "start": 10238, "length": 20 }
        ]
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "SetUserConfiguration": [
          { "start": 10440, "length": 20 },
          { "start": 10539, "length": 20 }
        ]
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "UpdateConfig": [
          { "start": 3620, "length": 20 },
          { "start": 3719, "length": 20 },
          { "start": 4285, "length": 20 },
          { "start": 8940, "length": 20 },
          { "start": 9072, "length": 20 }
        ]
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "Withdraw": [
          { "start": 12171, "length": 20 },
          { "start": 12270, "length": 20 }
        ]
      }
    },
    "immutableReferences": {
      "52969": [
        { "start": 13785, "length": 32 },
        { "start": 13826, "length": 32 },
        { "start": 14186, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": "3746f858",
    "buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": "53e043d4",
    "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "19a7359b",
    "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": "1fcd4a34",
    "claim((uint256))": "f45bf01c",
    "collateralRatio(address)": "ca40742c",
    "compensate((uint256,uint256,uint256))": "8e572776",
    "compensateOnBehalfOf(((uint256,uint256,uint256),address))": "3ae6d7c3",
    "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": "f052e7a4",
    "copyLimitOrdersOnBehalfOf(((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))": "8628babd",
    "data()": "73d4a13a",
    "debtTokenAmountToCollateralTokenAmount(uint256)": "1970e5ea",
    "deposit((address,uint256,address))": "0cf8542f",
    "depositOnBehalfOf(((address,uint256,address),address))": "fa823af5",
    "feeConfig()": "1e5eb1d0",
    "getBorrowOfferAPR(address,uint256)": "f85c3cd4",
    "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "2ed28ba2",
    "getCreditPosition(uint256)": "76c1b82f",
    "getDebtPosition(uint256)": "b5ec7487",
    "getDebtPositionAssignedCollateral(uint256)": "54137c7e",
    "getLoanOfferAPR(address,uint256)": "2cc884c5",
    "getLoanStatus(uint256)": "1c4fd41c",
    "getPositionsCount()": "1ca3b0cb",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": "37501921",
    "getSwapFee(uint256,uint256)": "2c60185c",
    "getUserCopyLimitOrders(address)": "b36116f6",
    "getUserView(address)": "5cbc51eb",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,(uint256,uint256,uint256,uint256,uint256,address),(uint256,uint256,uint256,uint256,uint256),(address,uint64),(address,address,address,address,address,address))": "f1bf35c3",
    "isCreditPositionId(uint256)": "ccc96815",
    "isDebtPositionId(uint256)": "64eb0a71",
    "isDebtPositionLiquidatable(uint256)": "e5af06ce",
    "liquidate((uint256,uint256,uint256))": "e05001f5",
    "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": "3e3c119b",
    "multicall(bytes[])": "ac9650d8",
    "oracle()": "7dc0d1d0",
    "partialRepay((uint256,uint256,address))": "02f2855a",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proxiableUUID()": "52d1902d",
    "renounceRole(bytes32,address)": "36568abe",
    "repay((uint256,address))": "7f417c06",
    "revokeRole(bytes32,address)": "d547741f",
    "riskConfig()": "7c90a6ca",
    "selfLiquidate((uint256))": "fd17174a",
    "selfLiquidateOnBehalfOf(((uint256),address,address))": "536b9c79",
    "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": "ccd8d4d1",
    "sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": "4fd9a8a5",
    "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": "d8d933a5",
    "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": "c73d9833",
    "setUserConfiguration((address,uint256,bool,bool,uint256[]))": "780cafa8",
    "setUserConfigurationOnBehalfOf(((address,uint256,bool,bool,uint256[]),address))": "c7cd4d87",
    "setVariablePoolBorrowRate(uint128)": "4cbd882c",
    "sizeFactory()": "fa7a5b10",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpause()": "3f4ba83a",
    "updateConfig((string,uint256))": "0317b9df",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "vaultOf(address)": "0709df45",
    "version()": "54fd4d50",
    "withdraw((address,uint256,address))": "2b4c9a20",
    "withdrawOnBehalfOf(((address,uint256,address),address))": "f54ae18b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"crBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crAfter\",\"type\":\"uint256\"}],\"name\":\"MUST_IMPROVE_COLLATERAL_RATIO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL_TENOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"oldBorrowRate\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newBorrowRate\",\"type\":\"uint128\"}],\"name\":\"VariablePoolBorrowRateUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct BuyCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditLimitOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"buyCreditLimitOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct BuyCreditMarketOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"buyCreditMarketOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct ClaimParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"collateralRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"compensate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionToCompensateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct CompensateParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct CompensateOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"compensateOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct CopyLimitOrdersParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"copyLimitOrders\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct CopyLimitOrdersParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct CopyLimitOrdersOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"copyLimitOrdersOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nextDebtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextCreditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableRebasingTokenVault\",\"name\":\"borrowTokenVault\",\"type\":\"address\"},{\"internalType\":\"contract NonTransferrableToken\",\"name\":\"debtToken\",\"type\":\"address\"},{\"internalType\":\"contract IPool\",\"name\":\"variablePool\",\"type\":\"address\"}],\"internalType\":\"struct DataView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"debtTokenAmountToCollateralTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct DepositParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct DepositOnBehalfOfParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"depositOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getBorrowOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct BuyCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getBuyCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyCreditMarket.SwapDataBuyCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"getCreditPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"futureValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityIndexAtRepayment\",\"type\":\"uint256\"}],\"internalType\":\"struct DebtPosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"getDebtPositionAssignedCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getLoanOfferAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"getLoanStatus\",\"outputs\":[{\"internalType\":\"enum LoanStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPositionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"getSellCreditMarketSwapData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"credit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct CreditPosition\",\"name\":\"creditPosition\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"creditAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"internalType\":\"struct SellCreditMarket.SwapDataSellCreditMarket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"}],\"name\":\"getSwapFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCopyLimitOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"copyAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyLoanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"offsetAPR\",\"type\":\"int256\"}],\"internalType\":\"struct CopyLimitOrder\",\"name\":\"copyBorrowOffer\",\"type\":\"tuple\"}],\"internalType\":\"struct UserCopyLimitOrders\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserView\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"loanOffer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct LimitOrder\",\"name\":\"borrowOffer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"}],\"internalType\":\"struct User\",\"name\":\"user\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowTokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct UserView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapFeeAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fragmentationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationRewardPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overdueCollateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralProtocolPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"internalType\":\"struct InitializeFeeConfigParams\",\"name\":\"f\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"r\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"o\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingCollateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingBorrowToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variablePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrowTokenVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sizeFactory\",\"type\":\"address\"}],\"internalType\":\"struct InitializeDataParams\",\"name\":\"d\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"name\":\"isCreditPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"}],\"name\":\"isDebtPositionLiquidatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumCollateralProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAPR\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidateWithReplacementParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"liquidateWithReplacement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitCollateralToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidatorProfitBorrowToken\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"variablePoolBorrowRateStaleRateInterval\",\"type\":\"uint64\"}],\"internalType\":\"struct InitializeOracleParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionWithDebtToRepayId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct PartialRepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"partialRepay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"debtPositionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"internalType\":\"struct RepayParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riskConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"crOpening\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"crLiquidation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumCreditBorrowToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTenor\",\"type\":\"uint256\"}],\"internalType\":\"struct InitializeRiskConfigParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"selfLiquidate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"}],\"internalType\":\"struct SelfLiquidateParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct SelfLiquidateOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"selfLiquidateOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxDueDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"tenors\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"aprs\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"marketRateMultipliers\",\"type\":\"uint256[]\"}],\"internalType\":\"struct YieldCurve\",\"name\":\"curveRelativeTime\",\"type\":\"tuple\"}],\"internalType\":\"struct SellCreditLimitParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditLimitOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"sellCreditLimitOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creditPositionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tenor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAPR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exactAmountIn\",\"type\":\"bool\"}],\"internalType\":\"struct SellCreditMarketParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct SellCreditMarketOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"sellCreditMarketOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setUserConfiguration\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"openingLimitBorrowCR\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allCreditPositionsForSaleDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"creditPositionIdsForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"creditPositionIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct SetUserConfigurationParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct SetUserConfigurationOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"setUserConfigurationOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"}],\"name\":\"setVariablePoolBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sizeFactory\",\"outputs\":[{\"internalType\":\"contract ISizeFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct UpdateConfigParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"vaultOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"internalType\":\"struct WithdrawOnBehalfOfParams\",\"name\":\"externalParams\",\"type\":\"tuple\"}],\"name\":\"withdrawOnBehalfOf\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Size (https://size.credit/)\",\"custom:security-contact\":\"security@size.credit\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)\"}},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"}},\"buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"details\":\"When emitting the `SwapData` event, the recipient is set as the `lender` param, which is inconsistent with the `BuyCreditMarket` event emitted just before,        where `lender` is passed as `onBehalfOf`. The reason is that `SwapData` emits only debt/credit recipients, while `BuyCreditMarket` emits both and also `onBehalfOf`.\"},\"claim((uint256))\":{\"details\":\"Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before\",\"params\":{\"params\":\"ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim\"}},\"collateralRatio(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The collateral ratio of the user\"}},\"compensate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"details\":\"Does not erase the user's loan offer and borrow offer\",\"params\":{\"params\":\"CopyLimitOrdersParams struct containing the following fields:     - address copyAddress: The address of the user to copy from     - CopyLimitOrder copyLoanOffer: The loan offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied loan offer     - CopyLimitOrder copyBorrowOffer: The borrow offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied borrow offer\"}},\"data()\":{\"returns\":{\"_0\":\"The data view\"}},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"params\":{\"amount\":\"The amount of debt tokens\"},\"returns\":{\"_0\":\"The equivalent amount of collateral tokens\"}},\"deposit((address,uint256,address))\":{\"details\":\"The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens\",\"params\":{\"params\":\"DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit\"}},\"feeConfig()\":{\"returns\":{\"_0\":\"The fee configuration parameters\"}},\"getBorrowOfferAPR(address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the borrow offer\"}},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for buying credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for buying credit as a market order\"}},\"getCreditPosition(uint256)\":{\"params\":{\"creditPositionId\":\"The ID of the credit position\"},\"returns\":{\"_0\":\"The CreditPosition struct containing the details of the credit position\"}},\"getDebtPosition(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The DebtPosition struct containing the details of the debt position\"}},\"getDebtPositionAssignedCollateral(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"The assigned collateral amount\"}},\"getLoanOfferAPR(address,uint256)\":{\"params\":{\"lender\":\"The address of the lender\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The APR of the loan offer\"}},\"getLoanStatus(uint256)\":{\"params\":{\"positionId\":\"The ID of the position\"},\"returns\":{\"_0\":\"The loan status\"}},\"getPositionsCount()\":{\"returns\":{\"_0\":\"The count of debt positions and credit positions\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"The input parameters for selling credit as a market order\"},\"returns\":{\"_0\":\"swapData The swap data for selling credit as a market order\"}},\"getSwapFee(uint256,uint256)\":{\"params\":{\"cash\":\"The cash amount\",\"tenor\":\"The tenor of the loan\"},\"returns\":{\"_0\":\"The swap fee\"}},\"getUserCopyLimitOrders(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user copy limit orders\"}},\"getUserView(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user view\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isCreditPositionId(uint256)\":{\"params\":{\"creditPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a credit position ID, false otherwise\"}},\"isDebtPositionId(uint256)\":{\"params\":{\"debtPositionId\":\"The ID to check\"},\"returns\":{\"_0\":\"True if the ID is a debt position ID, false otherwise\"}},\"isDebtPositionLiquidatable(uint256)\":{\"params\":{\"debtPositionId\":\"The ID of the debt position\"},\"returns\":{\"_0\":\"True if the debt position is liquidatable, false otherwise\"}},\"liquidate((uint256,uint256,uint256))\":{\"params\":{\"params\":\"LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)\"},\"returns\":{\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens the the fee recipient received from the liquidation\"}},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"details\":\"This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned\",\"params\":{\"params\":\"LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept\"},\"returns\":{\"liquidatorProfitBorrowToken\":\"The amount of borrow tokens liquidator received from the liquidation\",\"liquidatorProfitCollateralToken\":\"The amount of collateral tokens liquidator received from the liquidation\"}},\"multicall(bytes[])\":{\"details\":\"This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.\",\"params\":{\"data\":\"An array of bytes encoded function calls to be executed in sequence.\"},\"returns\":{\"results\":\"An array of bytes representing the return data from each function call executed.\"}},\"oracle()\":{\"returns\":{\"_0\":\"The oracle parameters\"}},\"partialRepay((uint256,uint256,address))\":{\"details\":\"The partial repay amount should be less than the debt position future value\",\"params\":{\"params\":\"PartialRepayParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position with debt to repay     - uint256 amount: The amount of tokens to repay (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - address borrower: The address of the borrower\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"repay((uint256,address))\":{\"details\":\"The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim\",\"params\":{\"params\":\"RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"riskConfig()\":{\"returns\":{\"_0\":\"The risk configuration parameters\"}},\"selfLiquidate((uint256))\":{\"details\":\"The user is prevented to self liquidate if a regular liquidation would be profitable\",\"params\":{\"params\":\"SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate\"}},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"params\":{\"params\":\"SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)\"}},\"sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"params\":{\"params\":\"SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)\"}},\"sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"details\":\"When emitting the `SwapData` event, the `recipient` parameter is left out. The reason is that `SwapData` emits only debt/credit recipients,      while `SellCreditMarket` emits both and also the cash recipient.\"},\"setUserConfiguration((address,uint256,bool,bool,uint256[]))\":{\"details\":\"By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.      Note: this function was updated in v1.8 to accept a `vault` parameter.        Although this function is market-specific, it will change a NonTransferrableRebasingTokenVault state that will be reflected on all markets.\",\"params\":{\"params\":\"SetUserConfigurationParams struct containing the following fields:     - address vault: The address of the user vault     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions\"}},\"setVariablePoolBorrowRate(uint128)\":{\"details\":\"The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero\",\"params\":{\"borrowRate\":\"The new borrow rate\"}},\"sizeFactory()\":{\"returns\":{\"_0\":\"The size factory\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateConfig((string,uint256))\":{\"details\":\"For `address` parameters, the `value` is converted to `uint160` and then to `address`\",\"params\":{\"params\":\"UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"vaultOf(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user vault\"}},\"version()\":{\"returns\":{\"_0\":\"The version of the Size protocol\"}},\"withdraw((address,uint256,address))\":{\"details\":\"This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens\",\"params\":{\"params\":\"WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal\"}}},\"title\":\"Size\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new loan offer in the orderbook\"},\"buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))\":{\"notice\":\"Same as `buyCreditLimit` but `onBehalfOf`\"},\"buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Obtains credit via lending or buying existing credit\"},\"buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"notice\":\"Same as `buyCreditMarket` but `onBehalfOf`\"},\"claim((uint256))\":{\"notice\":\"Claim the repayment of a loan with accrued interest from the Variable Pool\"},\"collateralRatio(address)\":{\"notice\":\"Get the collateral ratio of a user\"},\"compensateOnBehalfOf(((uint256,uint256,uint256),address))\":{\"notice\":\"Same as `compensate` but `onBehalfOf`\"},\"copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))\":{\"notice\":\"Copy limit orders from a user\"},\"copyLimitOrdersOnBehalfOf(((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))\":{\"notice\":\"Same as `copyLimitOrders` but `onBehalfOf`\"},\"data()\":{\"notice\":\"Get the data view\"},\"debtTokenAmountToCollateralTokenAmount(uint256)\":{\"notice\":\"Convert debt token amount to collateral token amount\"},\"deposit((address,uint256,address))\":{\"notice\":\"Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Aave Variable Pool or User Vault         Collateral tokens are deposited into the Size contract\"},\"depositOnBehalfOf(((address,uint256,address),address))\":{\"notice\":\"Same as `deposit` but `onBehalfOf`\"},\"feeConfig()\":{\"notice\":\"Get the fee configuration parameters\"},\"getBorrowOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a borrow offer\"},\"getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Gets the swap data for buying credit as a market order\"},\"getCreditPosition(uint256)\":{\"notice\":\"Get the details of a credit position\"},\"getDebtPosition(uint256)\":{\"notice\":\"Get the details of a debt position\"},\"getDebtPositionAssignedCollateral(uint256)\":{\"notice\":\"Get the assigned collateral for a debt position\"},\"getLoanOfferAPR(address,uint256)\":{\"notice\":\"Get the APR for a loan offer\"},\"getLoanStatus(uint256)\":{\"notice\":\"Get the loan status for a given position ID\"},\"getPositionsCount()\":{\"notice\":\"Get the count of debt and credit positions\"},\"getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Returns the swap data for selling credit as a market order\"},\"getSwapFee(uint256,uint256)\":{\"notice\":\"Get the swap fee for a given cash and tenor\"},\"getUserCopyLimitOrders(address)\":{\"notice\":\"Get the user copy limit orders for a given user\"},\"getUserView(address)\":{\"notice\":\"Get the user view for a given user\"},\"isCreditPositionId(uint256)\":{\"notice\":\"Check if a given ID is a credit position ID\"},\"isDebtPositionId(uint256)\":{\"notice\":\"Check if a given ID is a debt position ID\"},\"isDebtPositionLiquidatable(uint256)\":{\"notice\":\"Check if a debt position is liquidatable\"},\"liquidate((uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower\"},\"liquidateWithReplacement((uint256,address,uint256,uint256,uint256))\":{\"notice\":\"Liquidate a debt position with a replacement borrower\"},\"multicall(bytes[])\":{\"notice\":\"Executes multiple calls in a single transaction\"},\"oracle()\":{\"notice\":\"Get the oracle parameters\"},\"partialRepay((uint256,uint256,address))\":{\"notice\":\"Partial repay a debt position by selecting a specific CreditPosition\"},\"pause()\":{\"notice\":\"Pauses the protocol         Only callable by the PAUSER_ROLE\"},\"repay((uint256,address))\":{\"notice\":\"Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported\"},\"riskConfig()\":{\"notice\":\"Get the risk configuration parameters\"},\"selfLiquidate((uint256))\":{\"notice\":\"Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees\"},\"selfLiquidateOnBehalfOf(((uint256),address,address))\":{\"notice\":\"Same as `selfLiquidate` but `onBehalfOf`\"},\"sellCreditLimit((uint256,(uint256[],int256[],uint256[])))\":{\"notice\":\"Places a new borrow offer in the orderbook\"},\"sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))\":{\"notice\":\"Same as `sellCreditLimit` but `onBehalfOf`\"},\"sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))\":{\"notice\":\"Same as `sellCreditMarket` but `onBehalfOf`\"},\"setUserConfiguration((address,uint256,bool,bool,uint256[]))\":{\"notice\":\"Set the credit positions for sale\"},\"setUserConfigurationOnBehalfOf(((address,uint256,bool,bool,uint256[]),address))\":{\"notice\":\"Same as `setUserConfiguration` but `onBehalfOf`\"},\"setVariablePoolBorrowRate(uint128)\":{\"notice\":\"Sets the variable borrow rate         Only callable by the BORROW_RATE_UPDATER_ROLE\"},\"sizeFactory()\":{\"notice\":\"Get the size factory\"},\"unpause()\":{\"notice\":\"Unpauses the protocol         Only callable by the UNPAUSER_ROLE\"},\"updateConfig((string,uint256))\":{\"notice\":\"Updates the configuration of the protocol         Only callable by the DEFAULT_ADMIN_ROLE\"},\"vaultOf(address)\":{\"notice\":\"Get the user vault for a given user\"},\"version()\":{\"notice\":\"Get the version of the Size protocol\"},\"withdraw((address,uint256,address))\":{\"notice\":\"Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Aave Variable Pool or User Vault         Collateral tokens are withdrawn from the Size contract\"},\"withdrawOnBehalfOf(((address,uint256,address),address))\":{\"notice\":\"Same as `withdraw` but `onBehalfOf`\"}},\"notice\":\"See the documentation in {ISize}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/market/Size.sol\":\"Size\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC-7540-Reference/=lib/ERC-7540-Reference/\",\":@aave/=lib/aave-v3-core/contracts/\",\":@chainlink/=lib/chainlink/\",\":@chimera/=lib/chimera/src/\",\":@crytic/properties/=lib/properties/\",\":@deprecated/=deprecated/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pendle/=lib/pendle-core-v2-public/\",\":@safe-utils/=lib/safe-utils/src/\",\":@script/=script/\",\":@solady/=lib/solady/\",\":@src/=src/\",\":@tenderly-utils/=lib/tenderly-utils/src/\",\":@test/=test/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ERC-7540-Reference/=lib/ERC-7540-Reference/src/\",\":ERC4626/=lib/properties/lib/ERC4626/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":chainlink/=lib/chainlink/contracts/\",\":chimera/=lib/chimera/src/\",\":ds-test/=lib/solady/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/\",\":properties/=lib/properties/contracts/\",\":safe-smart-account/=lib/safe-utils/lib/safe-smart-account/\",\":safe-utils/=lib/safe-utils/src/\",\":solady/=lib/solady/\",\":solidity-http/=lib/solidity-http/src/\",\":solidity-stringutils/=lib/solidity-http/lib/solidity-stringutils/\",\":solmate/=lib/properties/lib/solmate/src/\",\":tenderly-utils/=lib/tenderly-utils/src/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"lib/aave-v3-core/contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa\",\"dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf\"]},\"lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol\":{\"keccak256\":\"0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0\",\"dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7\"]},\"lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol\":{\"keccak256\":\"0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87\",\"dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3\"]},\"lib/aave-v3-core/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d\",\"dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM\"]},\"lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06\",\"dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx\"]},\"lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23\",\"dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da\",\"dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x7b6690c21e94a45b825631a12581b40a753ea827de5ac9127a6b5833411317f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00045f2c18d7866618c65819fe180a9a9dab25c1974fab35069bdac9cf624b6b\",\"dweb:/ipfs/QmYk62QRqGHJ3rjqfEtbfEGFHWsenv5tNMbeMfq5HkTP44\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5d0c69ef32eae686acc22acfb1a54df9c91356e69adec593aa69eba83ae8f6f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7a9fca2cb3d802c4f8a2d0fda84ccc7f880264885801c7df08373501dd22282\",\"dweb:/ipfs/QmdtM2Loz9NzNTuQ3RXNQCPBjoPUJw35Ukpt1MSM9XH3cD\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231\",\"dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y\"]},\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260\",\"dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53\",\"dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df\",\"dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E\"]},\"src/factory/interfaces/ISizeFactory.sol\":{\"keccak256\":\"0xc51081e8c2738e314e5eb4b2aef8ffff0adb5d239b40d044fe20cfca9d35aae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be68813010c2eeb4ca0b59838edbb255cceb7f5da1db54a2c5b9c204fe8adc34\",\"dweb:/ipfs/QmVr4Vd7kwNA4hQWkRmNkRD5q63xA4ABanPsWHoMwFqbAM\"]},\"src/factory/interfaces/ISizeFactoryOffchainGetters.sol\":{\"keccak256\":\"0x01193f70622dd06fa303e488c255bf9b86f4fd2150ded107df75eabb1c200403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81f74325395f6f3c01d55991aa3e8b2e26c3bd8d80b3e061f3c3d90bea81603d\",\"dweb:/ipfs/QmWKW2CQdeYgK1x5L6i9k43wJVYxu9Qy6QUJD5aFoykQ8p\"]},\"src/factory/interfaces/ISizeFactoryV1_7.sol\":{\"keccak256\":\"0x88d8fee7f821de312741e741fcd2867e55905159002ba4d8ced827778bebde29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d42df9dfc39ad1b6812bb10c74d1398d3882e207e9611cb2e857187d7c79e09a\",\"dweb:/ipfs/QmTcbh5pZjV2S6zj5x3nzvRJBBsyy5DuNLRD4Dvg5Ydydq\"]},\"src/factory/libraries/Authorization.sol\":{\"keccak256\":\"0xf42a6c9392e33ad8d3be9045864c896a1552b4c3e4775198b990ea0b165f8908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02603db5e7c1b4df6b1f474e24fbd3b82e33e46deb84de07d0222bb26d2781af\",\"dweb:/ipfs/QmaDuJawdoxgvVvMerZW8CMQZXKJPXhuH4RASMTfuMJX96\"]},\"src/market/Size.sol\":{\"keccak256\":\"0x4f3acefe6bae9f645b20c6c77c0ce0e86b4098fbf5f347a01a1e850d03cc1da0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be134c52dafbb876aba662c516de6b515fa7bc34c7b01038c44ba901ab1a713d\",\"dweb:/ipfs/QmUwL8WAC5MA1peyZ4HTdxGTrhevf1cx1tSHMQtCJ8ee17\"]},\"src/market/SizeStorage.sol\":{\"keccak256\":\"0xc624be4edeaabb394f68a12ee42281644e52da26c3f8916f5d8454ef14e43681\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29f851bc1ba9c616a95f554d0639a8d420bec5c59c87dd58801e05f0325650a0\",\"dweb:/ipfs/QmdjEqJaZjKuzKjzLvtuenrr36GYZ4bLqXeaVZbanRxfzY\"]},\"src/market/SizeView.sol\":{\"keccak256\":\"0x9798ff23961206bfa475f47df3d1420bb512f335ae616a3cfc7da782b1b3c154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b7b8136c6b3ce39fadc74a947f516f1ffb6ae19f0a5add360cd6cd6ed5e73db\",\"dweb:/ipfs/QmfMqZ8bPVy73Un1u5vek2PDSe1YDEpQZwBWuasajWFUV6\"]},\"src/market/SizeViewData.sol\":{\"keccak256\":\"0x4fbd20e43987c211e0f8ab6ce467b4d017092a881ad544aa44a5d2f1d555df2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04f4ada02248e1224356a5e1b4fce02c60e4f14c414052a09363e9803317eacf\",\"dweb:/ipfs/QmZ69LGdEoZWajqVWiHrDfctYmArkt9ZWMYARwX6htQQ7x\"]},\"src/market/interfaces/IMulticall.sol\":{\"keccak256\":\"0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989\",\"dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R\"]},\"src/market/interfaces/ISize.sol\":{\"keccak256\":\"0x0beb3d15fa612609c8108053e7e16d394c02a6dd36a28ffcea2077187649308e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4af2ed987d5189bcd4501c40a1c5889f97605cd8f8cf366743bbdfa4d38ca916\",\"dweb:/ipfs/Qmbbi4kQT2kRo9uk4yvkr2SRUcbN5HqLwDCpQtc8MjFgz4\"]},\"src/market/interfaces/ISizeAdmin.sol\":{\"keccak256\":\"0x1f2fda9cf43a960e920186ce0414d596f0c73e20e0ab262a047ffcab5b8a4a9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://092faa4adc6268f096580faebcf426c87def65e02525abfecd04aa1acfceaa88\",\"dweb:/ipfs/QmWtjocrjvMRqKH47XiP7GKPRPKPCX3ApnpgpFjt3X9eRf\"]},\"src/market/interfaces/ISizeView.sol\":{\"keccak256\":\"0xc696fbce1b2505a74584cc168ce832a7aa7f3e0058820395a0e872bf1b8056a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9242667740deae9d2d3a6d9c133e48f5007589e954a4d3d2fe837f8215b7e3f3\",\"dweb:/ipfs/QmYZQDCNuK5wfBYYu4UQCE3evDcmhvWCD6HkSXY12kREdh\"]},\"src/market/interfaces/IWETH.sol\":{\"keccak256\":\"0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e\",\"dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t\"]},\"src/market/interfaces/v1.7/ISizeV1_7.sol\":{\"keccak256\":\"0xd884198d67b3d0d77fd5cc30ae96f18f0748b7f540704c130b7b163982d57e83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6948005cacbd6c490a8d158a9d8972b4baf0a05e1715d6c790b6d1f42f0d9b47\",\"dweb:/ipfs/Qmcp2Atca3wK2V1cyMdKLgBQkTPdYjeXqM5zjw3aF3KCdc\"]},\"src/market/interfaces/v1.7/ISizeViewV1_7.sol\":{\"keccak256\":\"0x1ae3e0e566182a39cea1e4a4b2f3ba8e47c9c5dc8aeed24fd5a90d35a5dd317e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c79e7a02e98992bca9e5bc5eb4513100b557f511b1cb0245f7838e12e87efeb\",\"dweb:/ipfs/QmPZDziwpJsReTqbzF7JiWntq4XitinnAJjDd393ePRB6T\"]},\"src/market/libraries/AccountingLibrary.sol\":{\"keccak256\":\"0x7951928ccae855e9fabc380ad88075fee1822e00dadeeb969c5add0e7b1e9a53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b895fa756fd379def6e9cb674a9618beeb7e7cc2f9708816cbafe36a56acd769\",\"dweb:/ipfs/QmbAg4HReEqmoJ23JrJpy7Rp2cgZA87VUgMrBFW3yr6Cp8\"]},\"src/market/libraries/Errors.sol\":{\"keccak256\":\"0x66db548ccfa42412d0f3de8c76f9758e0b3f39e590f806555602eb702e7701e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddcd07758278015c1760fccaa1154eee2669edfd2d183c5309c011025c3a5d5b\",\"dweb:/ipfs/QmbRjj86fuqpcdDc7niZkstQXRU6mfJfFLeRrE1rDHWg2Q\"]},\"src/market/libraries/Events.sol\":{\"keccak256\":\"0xf7ae3d09e1b94d73586072309b9c240d399f87b84d3dd1441b2a6012a97911b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e11a971c2f665c18bc2808cb48e599cc0b5446472e3c768154085799d399a00b\",\"dweb:/ipfs/QmWJ8qeUhYqp45FrwrB5WERmq9tGufa9MhsWPWQbmse4WL\"]},\"src/market/libraries/LoanLibrary.sol\":{\"keccak256\":\"0x40dcae0ebbfff42282a5ceb00b5698c882242e028740099bc5828a08fa7e77e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb877878b973bb6e8913cc3c4f4948ca7a43d0036dc243862cc8de7a3e92384\",\"dweb:/ipfs/QmYt8p1H7gAyTExvnKV1Anhfnjk5o774yi4ibHGUxByExv\"]},\"src/market/libraries/Math.sol\":{\"keccak256\":\"0xa270b1631b8b469d0e4bfddfaa0bf87ee285fa7532e1ed31f28674356fce0e65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f0d027e9af0e81111d0b573c836502f94f5f0e5a3b5c0fc8ff025060e78bb53\",\"dweb:/ipfs/QmbS7Wnub3nmeo7yfeQht68MzWwMrQ3Ef7bUtiNtDMtXDx\"]},\"src/market/libraries/Multicall.sol\":{\"keccak256\":\"0xaf98fced0f94fce8f0c27d1f5160019eeb17e3eb67316ca245f52c39df257fa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://852c668a4f10a61c2ceba43aac27993869ae591b8479c88d5c71bd4760cab1b6\",\"dweb:/ipfs/Qmer5YE99KsLeSKXf1QLxeDcUcLNgYkjFRwHzvBuG7JtUp\"]},\"src/market/libraries/OfferLibrary.sol\":{\"keccak256\":\"0x7926a94b1d39a8870808b0fbef5475f7b424589bde84f7edea97898e81bb13d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d44cc7a629d0d74013efb9fe3980916571416e19f717132a3ef18be95e18a9\",\"dweb:/ipfs/QmNRPBYTT5t2sXFWVCcMjkZCXEmfU3hP4HMqgUHwzmX7Ys\"]},\"src/market/libraries/RiskLibrary.sol\":{\"keccak256\":\"0xc639312f28fb460000aff9c0869ffb2c3bdaab5e6d5aff6895df6bc2d3461b7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eb18a5f3fc5ecacc2a166e0f5c456246bcff32284d29fa14d819f7616c7718d\",\"dweb:/ipfs/QmR9aSvd6G1qmqTKvT21fHk8EVeKGjKysn34qpCFTXhKXz\"]},\"src/market/libraries/YieldCurveLibrary.sol\":{\"keccak256\":\"0x8d4b1f45d67387169c3b38cc034305eba91ad306dac7021d4658e3b8bbc9a135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://438376203571e01cbb26ea58c192d3036a1e623c0c5897c52aeafaa90e281cd3\",\"dweb:/ipfs/QmcRNJKsudM9bZvCPCSEQWxPHvVEfQD1u2MPf8S33fh3o3\"]},\"src/market/libraries/actions/BuyCreditLimit.sol\":{\"keccak256\":\"0xccb77182ce62b7ea147ee65ad7e32076f9e565a2605c18842087103e471f79f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://571a3265ef2664d9fea268e229af1bc0e430f458efe6898a03532de799d959ef\",\"dweb:/ipfs/QmSA1hphKNeRdqKtKpbfM3yof9TTd13r9X5ei7jNiuhcwQ\"]},\"src/market/libraries/actions/BuyCreditMarket.sol\":{\"keccak256\":\"0xdb5cca0e607922f3de91658d1d2ae624fc8c9707076607607847ff0afb1caf95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0721e06a4759cec11f6f6593d668bd2ca736aec24b08f254b1db56bd63481ae9\",\"dweb:/ipfs/QmaQDmhoBKDbnDknbVeh4xH9mg68HT8HSk9xecLJyav84v\"]},\"src/market/libraries/actions/Claim.sol\":{\"keccak256\":\"0x0145b5a2bef3cb5b6348c0826a020eaaf8db1880bb7aa2804bf03cc16eaf2adf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de61cb5c77a1be1cc00990f8b21e1ad41005c811309244acb314d3e3f2324427\",\"dweb:/ipfs/QmVJJ8RgFXtNg3KLcevf99ZyhXQQtAH32i7MZXM1VLrbyd\"]},\"src/market/libraries/actions/Compensate.sol\":{\"keccak256\":\"0x5fa7ce8b74eeea09d12b78e3b31dbc7b37fca58b235299ad5d9f8e99ea400719\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fbeff16ba76d1e3735f4d067ba16da7b0f35176ff9ea501a99f94063936bc5d\",\"dweb:/ipfs/QmYyogfmQmrpEksBc9uSjVQvYAWdaq31pJ3j6aAnc8D1rA\"]},\"src/market/libraries/actions/CopyLimitOrders.sol\":{\"keccak256\":\"0x7c0122a6757ea03a0e466ece6bfe1689804dbc67aa47bbe3959dbfbd9bdf5044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5450e2ddb79dc482d93a34701e6559c972ba2247b6ce2fb2ce02c5ec15964bff\",\"dweb:/ipfs/QmdLeycgcqWjZ8gAvduxZpHRvsXGoa3BpvS9oJvhdH3QwZ\"]},\"src/market/libraries/actions/Deposit.sol\":{\"keccak256\":\"0x75e2039804c341b06705e712a8403350bf3860207178872eba02b12acc1a55e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76f871e1a3b6e9accffffac39be2a51d90cb16028511f0f54597bdb8e8c2c6fe\",\"dweb:/ipfs/QmNzQiqWUiVnqpL9EhyG9tbF36nksZJ3YeT3hNioQLCpwG\"]},\"src/market/libraries/actions/Initialize.sol\":{\"keccak256\":\"0xbad2d5f92aaeee28a87c1feda397f787cf1a2f8432bf05371f79b2309e9858f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c6959ee090add484fe99aa21bb8e879c36a97a1d00b4d49dfade775c4813a63\",\"dweb:/ipfs/QmZycV28jdCXWHy7QV7uqtqxaiReZaTYtvvgECuHb3gwJQ\"]},\"src/market/libraries/actions/Liquidate.sol\":{\"keccak256\":\"0x20e7ccfb443548a7325a592034bcfb6f474c313f9cf0453fafc45777a280d85f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec7a9075a20c68b7ca70c6b283692724d2e42faf0596187bd1075d8d7b6c03b1\",\"dweb:/ipfs/QmbHMZ2EmbhY4w51vWUkuEvr2r8XEkJkYvM56Tk5h1yr9G\"]},\"src/market/libraries/actions/LiquidateWithReplacement.sol\":{\"keccak256\":\"0x6a1c333d7bef57e97c11bdf8c3716c664262d71f11cfc3a1f0d42e8484a4288e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af21da69c46e028ddf38dcc3da24cb743c7efcd5ef4c6daad1bfd1c8ecc7bdfa\",\"dweb:/ipfs/QmaUTKfKmfrnTQZJrbP9TEeuBNSVFRxHWV8d1M5XhMfc3f\"]},\"src/market/libraries/actions/PartialRepay.sol\":{\"keccak256\":\"0xcca168dab87cf6c5a383340443041194ea3ca272aa48cdbe7ffcb263be767900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd4a81eeab2fbb3ac34e21fdfe3acf4cbae5802984ddd0eabcc4b5dcf5b80315\",\"dweb:/ipfs/QmVZ9wKB1vjGghXfCE3AFNGTiGLekqbLEELSdJ26eeXy3F\"]},\"src/market/libraries/actions/Repay.sol\":{\"keccak256\":\"0x8ce3d2f0cf14efb0489f509f244c05d8045ea5eecffceb2d932321d4f62a5474\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://773030fd26b7cd147d3c1c745a858e541dee98331c362de19e7c7f021be7c44e\",\"dweb:/ipfs/QmZ8Du3qDSdpM64JCD6PqfqQ4DtpcfaVX6ujiCEJhgUhX5\"]},\"src/market/libraries/actions/SelfLiquidate.sol\":{\"keccak256\":\"0x2d71cff942efc93fb7aa3a0a636e44562e0fa44ba4d503f323c6d08e7fdd8af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdc43c74a42cffbf3844939df1d21a2b392ad3596ece8f1e9a6ebe08c2ec64be\",\"dweb:/ipfs/QmRUScCkvE4EADEUEvdwrsnzfLsq7xjFt1xsSZ4PZfs6J7\"]},\"src/market/libraries/actions/SellCreditLimit.sol\":{\"keccak256\":\"0xe8fe9ab69faccffa8539167973d13c5afe04ca8358316a092540171d084654b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c626cb1ad9347b0eabd162f590c61175cdc687958bc6684843201713c5efa89\",\"dweb:/ipfs/QmNqZc3Zh2Nvj6exvG89XShBY4WtBJSh6iKWr7gZB8sQ3k\"]},\"src/market/libraries/actions/SellCreditMarket.sol\":{\"keccak256\":\"0x790f4e109ae8969b056286ae58a03500f5348842fac71b95d578f38e35d3a5fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a2fe554c36ed4483bd1d36cb04bd67d23f77d00247e82df66e976fb872fe6d\",\"dweb:/ipfs/QmUxkcfAUE66kDUGE8gnrQoZZVRcHi2HZUQ7LqdSx35pm8\"]},\"src/market/libraries/actions/SetUserConfiguration.sol\":{\"keccak256\":\"0xfc4ebcf3b25f112bf4f268167289f65904d45484a35930c5a665a6a405b10f07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c65465dd5d1fbeb0c5ce1b48cce941b2c92dcf32d1f1d3e543513ec858bd9df\",\"dweb:/ipfs/QmQNQSUFHYNgvemQNT5HtcLR2ybe4uHLT8o3rDVXHfFbwt\"]},\"src/market/libraries/actions/UpdateConfig.sol\":{\"keccak256\":\"0x040b1b2b4dfb446b50bce809c070a3b977e7c614f2bfdf632b10f9c89ec8d80e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://067a98624ca328a30debcd8d09adb675ad3ebeafe0829269ca5f42574babcca3\",\"dweb:/ipfs/QmU3K7oJnmknBtCyVNR6d2fLsUFCPvozr1DvY9W42cw1Eu\"]},\"src/market/libraries/actions/Withdraw.sol\":{\"keccak256\":\"0x7a742d3bababff2547f5e71d52feb7a6d93549beb896981a8e220952c02f52df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53abc4a277560dd0688de69f0dc8aa6531ad4ec7c808d4592e656b214fd71f21\",\"dweb:/ipfs/QmT61oye8uwqzSwnqK74PFkJu2kV63wHpJKSocH8yur3eR\"]},\"src/market/token/NonTransferrableRebasingTokenVault.sol\":{\"keccak256\":\"0x408c52f8e5ef7e79e1afcda1a42004a163e8856156ae859388c8b841349b9a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dae3ad0b3f501a9788657b9a961a7ad8440c5cc78f62f581a6949a21166b5481\",\"dweb:/ipfs/QmNurenVtRDWbmNHtb1QDzVNbB6sBZcN8LGcn2ayaCFBig\"]},\"src/market/token/NonTransferrableToken.sol\":{\"keccak256\":\"0xf82118604ddbcd5d9ff708d739396e993d9621cff7b07f22a519141ca39a9e17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f371fb37a2ac76630302b1284d62e8657f038b504ce9884723574c2a3de32ec\",\"dweb:/ipfs/QmRsjmBirftC8Jih4jBG2BoJmpe4RRAAsEwsmtLjWicTVf\"]},\"src/market/token/adapters/IAdapter.sol\":{\"keccak256\":\"0xb953b0e5e09d775cf4b6ef970131883c052510a156d0b6a7f6550aa7a3344d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62272b20b8f5d9fe2d7a55e5774835cede834df2d4ee8b3456d35e54547f0fb8\",\"dweb:/ipfs/Qmcf9RPBiArogFRFqZjt7jvtBQCuRGDPyQMakVDGPSDHF9\"]},\"src/oracle/IPriceFeed.sol\":{\"keccak256\":\"0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48\",\"dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ\"]},\"src/oracle/adapters/ChainlinkPriceFeed.sol\":{\"keccak256\":\"0x71a4ccb7d9469f4d7a914a81c754b1278152a387f8154e0f9793e0e3d010a599\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d953653f6481b344d0d00a677a8301f3006a50c3b90744c39cd3eda6f508818b\",\"dweb:/ipfs/QmYR1RvdMboMpH9ykJN5WwuC3AabSvPS2JA4t4afxa7gyh\"]},\"src/oracle/adapters/ChainlinkSequencerUptimeFeed.sol\":{\"keccak256\":\"0x3d200d7fcc7c457a201f2bb32a0b68ea13b2b697cb300bbd587828bff5ffe8b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d72923e346e73eb0d42d055437dc6df059c3a8f27b08ff5aacd7cf7fdf90eec5\",\"dweb:/ipfs/QmPYENtSCwseMxYtQeKAkVe8DuCJYzRGpFRxDgw85xf2g8\"]},\"src/oracle/adapters/UniswapV3PriceFeed.sol\":{\"keccak256\":\"0x84027f9673163df8f7dcbd7c828cf5bada6a9c7de1986d3821ec75004a11f639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0caf13ef11f4ad681f395ee48145d72fcd3a1eae5b439efb132be9cccd8f1243\",\"dweb:/ipfs/QmdrnR1auzKaQhZ7AqWRKHnajw1Y6oLmdNFYJzKLzb5E72\"]},\"src/oracle/v1.5.1/PriceFeed.sol\":{\"keccak256\":\"0x36473f98f23968eaab386e44c1404652c7ef88c09db9772ab3195d8305829762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5db471c144f3a43e9e07391890e7b29e39b64ae3fb0e73b66dd313801b03542a\",\"dweb:/ipfs/Qmf5GMB6SdKNCUPCbV4nYmxUjg6z3iKiweYU2ajY9BrGbC\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessControlBadConfirmation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "bytes32",
              "name": "neededRole",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "EnforcedPause" },
        { "inputs": [], "type": "error", "name": "ExpectedPause" },
        { "inputs": [], "type": "error", "name": "FailedCall" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "uint256",
              "name": "crBefore",
              "type": "uint256"
            },
            { "internalType": "uint256", "name": "crAfter", "type": "uint256" }
          ],
          "type": "error",
          "name": "MUST_IMPROVE_COLLATERAL_RATIO"
        },
        { "inputs": [], "type": "error", "name": "NULL_TENOR" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "oldBorrowRate",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "newBorrowRate",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VariablePoolBorrowRateUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditLimitOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BuyCreditLimitParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxDueDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct YieldCurve",
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256[]",
                          "name": "tenors",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "int256[]",
                          "name": "aprs",
                          "type": "int256[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "marketRateMultipliers",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditLimitOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct BuyCreditMarketParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "borrower",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "exactAmountIn",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyCreditMarketOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct ClaimParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralRatio",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionToCompensateId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensate"
        },
        {
          "inputs": [
            {
              "internalType": "struct CompensateOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CompensateParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "creditPositionWithDebtToRepayId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionToCompensateId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "compensateOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct CopyLimitOrdersParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "copyAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "copyLimitOrders"
        },
        {
          "inputs": [
            {
              "internalType": "struct CopyLimitOrdersOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CopyLimitOrdersParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "copyAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "struct CopyLimitOrder",
                      "name": "copyLoanOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "minTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "int256",
                          "name": "offsetAPR",
                          "type": "int256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct CopyLimitOrder",
                      "name": "copyBorrowOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "minTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxTenor",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxAPR",
                          "type": "uint256"
                        },
                        {
                          "internalType": "int256",
                          "name": "offsetAPR",
                          "type": "int256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "copyLimitOrdersOnBehalfOf"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "data",
          "outputs": [
            {
              "internalType": "struct DataView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nextDebtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nextCreditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableRebasingTokenVault",
                  "name": "borrowTokenVault",
                  "type": "address"
                },
                {
                  "internalType": "contract NonTransferrableToken",
                  "name": "debtToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IPool",
                  "name": "variablePool",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "debtTokenAmountToCollateralTokenAmount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositOnBehalfOfParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DepositParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositOnBehalfOf"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeConfig",
          "outputs": [
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBuyCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct BuyCreditMarket.SwapDataBuyCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCreditPosition",
          "outputs": [
            {
              "internalType": "struct CreditPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                { "internalType": "bool", "name": "forSale", "type": "bool" },
                {
                  "internalType": "uint256",
                  "name": "credit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPosition",
          "outputs": [
            {
              "internalType": "struct DebtPosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "futureValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidityIndexAtRepayment",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDebtPositionAssignedCollateral",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "lender", "type": "address" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanOfferAPR",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanStatus",
          "outputs": [
            { "internalType": "enum LoanStatus", "name": "", "type": "uint8" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionsCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSellCreditMarketSwapData",
          "outputs": [
            {
              "internalType": "struct SellCreditMarket.SwapDataSellCreditMarket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct CreditPosition",
                  "name": "creditPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "forSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "credit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "creditAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "cashAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "cash", "type": "uint256" },
            { "internalType": "uint256", "name": "tenor", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSwapFee",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserCopyLimitOrders",
          "outputs": [
            {
              "internalType": "struct UserCopyLimitOrders",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "copyAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyLoanOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "struct CopyLimitOrder",
                  "name": "copyBorrowOffer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "minTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "offsetAPR",
                      "type": "int256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserView",
          "outputs": [
            {
              "internalType": "struct UserView",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct User",
                  "name": "user",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct LimitOrder",
                      "name": "loanOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "struct LimitOrder",
                      "name": "borrowOffer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxDueDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct YieldCurve",
                          "name": "curveRelativeTime",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256[]",
                              "name": "tenors",
                              "type": "uint256[]"
                            },
                            {
                              "internalType": "int256[]",
                              "name": "aprs",
                              "type": "int256[]"
                            },
                            {
                              "internalType": "uint256[]",
                              "name": "marketRateMultipliers",
                              "type": "uint256[]"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralTokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowTokenBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "debtBalance",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            {
              "internalType": "struct InitializeFeeConfigParams",
              "name": "f",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapFeeAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fragmentationFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidationRewardPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "overdueCollateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralProtocolPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "feeRecipient",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "r",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct InitializeOracleParams",
              "name": "o",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            },
            {
              "internalType": "struct InitializeDataParams",
              "name": "d",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "weth",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingCollateralToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingBorrowToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "variablePool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "borrowTokenVault",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sizeFactory",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "creditPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCreditPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionId",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtPositionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDebtPositionLiquidatable",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LiquidateWithReplacementParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCollateralProfit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minAPR",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidateWithReplacement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidatorProfitCollateralToken",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidatorProfitBorrowToken",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes[]", "name": "_data", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            { "internalType": "bytes[]", "name": "results", "type": "bytes[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [
            {
              "internalType": "struct InitializeOracleParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "variablePoolBorrowRateStaleRateInterval",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PartialRepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionWithDebtToRepayId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "partialRepay"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            {
              "internalType": "address",
              "name": "callerConfirmation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "struct RepayParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "debtPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "riskConfig",
          "outputs": [
            {
              "internalType": "struct InitializeRiskConfigParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "crOpening",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "crLiquidation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumCreditBorrowToken",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minTenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTenor",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidate"
        },
        {
          "inputs": [
            {
              "internalType": "struct SelfLiquidateOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SelfLiquidateParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfLiquidateOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "maxDueDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct YieldCurve",
                  "name": "curveRelativeTime",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256[]",
                      "name": "tenors",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "int256[]",
                      "name": "aprs",
                      "type": "int256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "marketRateMultipliers",
                      "type": "uint256[]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimit"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditLimitOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SellCreditLimitParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxDueDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct YieldCurve",
                      "name": "curveRelativeTime",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256[]",
                          "name": "tenors",
                          "type": "uint256[]"
                        },
                        {
                          "internalType": "int256[]",
                          "name": "aprs",
                          "type": "int256[]"
                        },
                        {
                          "internalType": "uint256[]",
                          "name": "marketRateMultipliers",
                          "type": "uint256[]"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditLimitOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "creditPositionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tenor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAPR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "exactAmountIn",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarket"
        },
        {
          "inputs": [
            {
              "internalType": "struct SellCreditMarketOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SellCreditMarketParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "lender",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "creditPositionId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tenor",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAPR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "exactAmountIn",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sellCreditMarketOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "openingLimitBorrowCR",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "allCreditPositionsForSaleDisabled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "creditPositionIdsForSale",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "creditPositionIds",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfiguration"
        },
        {
          "inputs": [
            {
              "internalType": "struct SetUserConfigurationOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SetUserConfigurationParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "openingLimitBorrowCR",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "allCreditPositionsForSaleDisabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "creditPositionIdsForSale",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "creditPositionIds",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setUserConfigurationOnBehalfOf"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVariablePoolBorrowRate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sizeFactory",
          "outputs": [
            {
              "internalType": "contract ISizeFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "struct UpdateConfigParams",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "string", "name": "key", "type": "string" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultOf",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                { "internalType": "address", "name": "to", "type": "address" }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "struct WithdrawOnBehalfOfParams",
              "name": "externalParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct WithdrawParams",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "onBehalfOf",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawOnBehalfOf"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "BuyCreditLimitParams struct containing the following fields:     - uint256 maxDueDate: The maximum due date of the loan (e.g., 1712188800 for April 4th, 2024)     - YieldCurve curveRelativeTime: The yield curve for the loan offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [1e18, 1.2e18, 1.3e18] to represent 100%, 120%, and 130% of the market borrow rate, respectively)"
            }
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "BuyCreditMarketParams struct containing the following fields:     - address borrower: The address of the borrower (optional, for lending)     - uint256 creditPositionId: The id of the credit position to buy (optional, for buying credit)     - uint256 tenor: The tenor of the loan     - uint256 amount: The amount of tokens to lend or credit to buy     - bool exactAmountIn: Indicates if the amount is the value to be transferred or used to calculate the transfer amount     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            }
          },
          "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "details": "When emitting the `SwapData` event, the recipient is set as the `lender` param, which is inconsistent with the `BuyCreditMarket` event emitted just before,        where `lender` is passed as `onBehalfOf`. The reason is that `SwapData` emits only debt/credit recipients, while `BuyCreditMarket` emits both and also `onBehalfOf`."
          },
          "claim((uint256))": {
            "details": "Both ACTIVE and OVERDUE loans can't be claimed because the money is not in the protocol yet.      CLAIMED loans can't be claimed either because its credit has already been consumed entirely either by a previous claim or by exiting before",
            "params": {
              "params": "ClaimParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to claim"
            }
          },
          "collateralRatio(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The collateral ratio of the user" }
          },
          "compensate((uint256,uint256,uint256))": {
            "params": {
              "params": "CompensateParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position ID with debt to repay     - uint256 creditPositionToCompensateId: The id of the credit position to compensate     - uint256 amount: The amount of tokens to compensate (in decimals, e.g. 1_000e6 for 1000 aUSDC)"
            }
          },
          "constructor": { "custom:oz-upgrades-unsafe-allow": "constructor" },
          "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "details": "Does not erase the user's loan offer and borrow offer",
            "params": {
              "params": "CopyLimitOrdersParams struct containing the following fields:     - address copyAddress: The address of the user to copy from     - CopyLimitOrder copyLoanOffer: The loan offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the loan offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the loan offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the loan offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the loan offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied loan offer     - CopyLimitOrder copyBorrowOffer: The borrow offer to copy (null means no copy)       - uint256 minTenor: The minimum tenor of the borrow offer to copy (0 means use copy yield curve tenor lower bound)       - uint256 maxTenor: The maximum tenor of the borrow offer to copy (type(uint256).max means use copy yield curve tenor upper bound)       - uint256 minAPR: The minimum APR of the borrow offer to copy (0 means use copy yield curve APR lower bound)       - uint256 maxAPR: The maximum APR of the borrow offer to copy (type(uint256).max means use copy yield curve APR upper bound)       - int256 offsetAPR: The offset APR relative to the copied borrow offer"
            }
          },
          "data()": { "returns": { "_0": "The data view" } },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "params": { "amount": "The amount of debt tokens" },
            "returns": { "_0": "The equivalent amount of collateral tokens" }
          },
          "deposit((address,uint256,address))": {
            "details": "The caller must approve the transfer of the token to the protocol.      This function mints 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the deposited tokens",
            "params": {
              "params": "DepositParams struct containing the following fields:     - address token: The address of the token to deposit     - uint256 amount: The amount of tokens to deposit     - uint256 to: The recipient of the deposit"
            }
          },
          "feeConfig()": {
            "returns": { "_0": "The fee configuration parameters" }
          },
          "getBorrowOfferAPR(address,uint256)": {
            "params": {
              "borrower": "The address of the borrower",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the borrow offer" }
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for buying credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for buying credit as a market order"
            }
          },
          "getCreditPosition(uint256)": {
            "params": { "creditPositionId": "The ID of the credit position" },
            "returns": {
              "_0": "The CreditPosition struct containing the details of the credit position"
            }
          },
          "getDebtPosition(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "The DebtPosition struct containing the details of the debt position"
            }
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": { "_0": "The assigned collateral amount" }
          },
          "getLoanOfferAPR(address,uint256)": {
            "params": {
              "lender": "The address of the lender",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The APR of the loan offer" }
          },
          "getLoanStatus(uint256)": {
            "params": { "positionId": "The ID of the position" },
            "returns": { "_0": "The loan status" }
          },
          "getPositionsCount()": {
            "returns": {
              "_0": "The count of debt positions and credit positions"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "The input parameters for selling credit as a market order"
            },
            "returns": {
              "_0": "swapData The swap data for selling credit as a market order"
            }
          },
          "getSwapFee(uint256,uint256)": {
            "params": {
              "cash": "The cash amount",
              "tenor": "The tenor of the loan"
            },
            "returns": { "_0": "The swap fee" }
          },
          "getUserCopyLimitOrders(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user copy limit orders" }
          },
          "getUserView(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user view" }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isCreditPositionId(uint256)": {
            "params": { "creditPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a credit position ID, false otherwise"
            }
          },
          "isDebtPositionId(uint256)": {
            "params": { "debtPositionId": "The ID to check" },
            "returns": {
              "_0": "True if the ID is a debt position ID, false otherwise"
            }
          },
          "isDebtPositionLiquidatable(uint256)": {
            "params": { "debtPositionId": "The ID of the debt position" },
            "returns": {
              "_0": "True if the debt position is liquidatable, false otherwise"
            }
          },
          "liquidate((uint256,uint256,uint256))": {
            "params": {
              "params": "LiquidateParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)"
            },
            "returns": {
              "liquidatorProfitCollateralToken": "The amount of collateral tokens the the fee recipient received from the liquidation"
            }
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "details": "This function works exactly like `liquidate`, with an added logic of replacing the borrower on the storage         When liquidating with replacement, nothing changes from the lenders' perspective, but a spread is created between the previous borrower rate and the new borrower rate.         As a result of the spread of these borrow aprs, the protocol is able to profit from the liquidation. Since the choice of the borrower impacts on the protocol's profit, this method is permissioned",
            "params": {
              "params": "LiquidateWithReplacementParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to liquidate     - uint256 minimumCollateralProfit: The minimum collateral profit that the liquidator is willing to accept from the borrower (keepers might choose to pass a value below 100% of the cash they bring and take the risk of liquidating unprofitably)     - address borrower: The address of the replacement borrower     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 minAPR: The minimum APR the caller is willing to accept"
            },
            "returns": {
              "liquidatorProfitBorrowToken": "The amount of borrow tokens liquidator received from the liquidation",
              "liquidatorProfitCollateralToken": "The amount of collateral tokens liquidator received from the liquidation"
            }
          },
          "multicall(bytes[])": {
            "details": "This function allows for batch processing of multiple interactions with the protocol in a single transaction.      This allows users to take actions that would otherwise be denied due to deposit limits.",
            "params": {
              "data": "An array of bytes encoded function calls to be executed in sequence."
            },
            "returns": {
              "results": "An array of bytes representing the return data from each function call executed."
            }
          },
          "oracle()": { "returns": { "_0": "The oracle parameters" } },
          "partialRepay((uint256,uint256,address))": {
            "details": "The partial repay amount should be less than the debt position future value",
            "params": {
              "params": "PartialRepayParams struct containing the following fields:     - uint256 creditPositionWithDebtToRepayId: The id of the credit position with debt to repay     - uint256 amount: The amount of tokens to repay (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - address borrower: The address of the borrower"
            }
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
          },
          "repay((uint256,address))": {
            "details": "The Variable Pool liquidity index is snapshotted at the time of the repayment in order to calculate the accrued interest for lenders to claim",
            "params": {
              "params": "RepayParams struct containing the following fields:     - uint256 debtPositionId: The id of the debt position to repay"
            }
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "riskConfig()": {
            "returns": { "_0": "The risk configuration parameters" }
          },
          "selfLiquidate((uint256))": {
            "details": "The user is prevented to self liquidate if a regular liquidation would be profitable",
            "params": {
              "params": "SelfLiquidateParams struct containing the following fields:     - uint256 creditPositionId: The id of the credit position to self-liquidate"
            }
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "params": {
              "params": "SellCreditLimitParams struct containing the following fields:     - YieldCurve curveRelativeTime: The yield curve for the borrow offer, a struct containing the following fields:         - uint256[] tenors: The relative timestamps of the yield curve (for example, [30 days, 60 days, 90 days])         - int256[] aprs: The aprs of the yield curve (for example, [0.05e18, 0.07e18, 0.08e18] to represent 5% APR, 7% APR, and 8% APR, linear interest, respectively)         - uint256[] marketRateMultipliers: The market rate multipliers of the yield curve (for example, [0.99e18, 1e18, 1.1e18] to represent 99%, 100%, and 110% of the market borrow rate, respectively)"
            }
          },
          "sellCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "params": {
              "params": "SellCreditMarketParams struct containing the following fields:     - address lender: The address of the lender     - uint256 creditPositionId: The id of a credit position to be sold     - uint256 amount: The amount of tokens to borrow (in decimals, e.g. 1_000e6 for 1000 aUSDC)     - uint256 tenor: The tenor of the loan     - uint256 deadline: The maximum timestamp for the transaction to be executed     - uint256 maxAPR: The maximum APR the caller is willing to accept     - bool exactAmountIn: this flag indicates if the amount argument represents either credit (true) or cash (false)"
            }
          },
          "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "details": "When emitting the `SwapData` event, the `recipient` parameter is left out. The reason is that `SwapData` emits only debt/credit recipients,      while `SellCreditMarket` emits both and also the cash recipient."
          },
          "setUserConfiguration((address,uint256,bool,bool,uint256[]))": {
            "details": "By default, all created creadit positions are for sale.      Users who want to disable the sale of all or specific credit positions can do so by calling this function.      By default, all users CR to open a position is crOpening. Users who want to increase their CR opening limit can do so by calling this function.      Note: this function was updated in v1.8 to accept a `vault` parameter.        Although this function is market-specific, it will change a NonTransferrableRebasingTokenVault state that will be reflected on all markets.",
            "params": {
              "params": "SetUserConfigurationParams struct containing the following fields:     - address vault: The address of the user vault     - uint256 openingLimitBorrowCR: The opening limit borrow collateral ratio, which indicates the maximum CR the borrower is willing to accept after their offer is picked by a lender     - bool allCreditPositionsForSaleDisabled: This global flag indicates if all credit positions should be set for sale or not     - bool creditPositionIdsForSale: This flag indicates if the creditPositionIds array should be set for sale or not     - uint256[] creditPositionIds: The id of the credit positions"
            }
          },
          "setVariablePoolBorrowRate(uint128)": {
            "details": "The variable pool borrow rate cannot be used if the variablePoolBorrowRateStaleRateInterval is set to zero",
            "params": { "borrowRate": "The new borrow rate" }
          },
          "sizeFactory()": { "returns": { "_0": "The size factory" } },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "updateConfig((string,uint256))": {
            "details": "For `address` parameters, the `value` is converted to `uint160` and then to `address`",
            "params": {
              "params": "UpdateConfigParams struct containing the following fields:     - string key: The configuration parameter to update     - uint256 value: The value to update"
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "vaultOf(address)": {
            "params": { "user": "The address of the user" },
            "returns": { "_0": "The user vault" }
          },
          "version()": {
            "returns": { "_0": "The version of the Size protocol" }
          },
          "withdraw((address,uint256,address))": {
            "details": "This function burns 1:1 Deposit Tokens (e.g. szaUSDC, szETH) in exchange of the withdrawn tokens",
            "params": {
              "params": "WithdrawParams struct containing the following fields:     - address token: The address of the token to withdraw     - uint256 amount: The amount of tokens to withdraw (in decimals, e.g. 1_000e6 for 1000 USDC or 10e18 for 10 WETH)     - uint256 to: The recipient of the withdrawal"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new loan offer in the orderbook"
          },
          "buyCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": {
            "notice": "Same as `buyCreditLimit` but `onBehalfOf`"
          },
          "buyCreditMarket((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Obtains credit via lending or buying existing credit"
          },
          "buyCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "notice": "Same as `buyCreditMarket` but `onBehalfOf`"
          },
          "claim((uint256))": {
            "notice": "Claim the repayment of a loan with accrued interest from the Variable Pool"
          },
          "collateralRatio(address)": {
            "notice": "Get the collateral ratio of a user"
          },
          "compensateOnBehalfOf(((uint256,uint256,uint256),address))": {
            "notice": "Same as `compensate` but `onBehalfOf`"
          },
          "copyLimitOrders((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)))": {
            "notice": "Copy limit orders from a user"
          },
          "copyLimitOrdersOnBehalfOf(((address,(uint256,uint256,uint256,uint256,int256),(uint256,uint256,uint256,uint256,int256)),address))": {
            "notice": "Same as `copyLimitOrders` but `onBehalfOf`"
          },
          "data()": { "notice": "Get the data view" },
          "debtTokenAmountToCollateralTokenAmount(uint256)": {
            "notice": "Convert debt token amount to collateral token amount"
          },
          "deposit((address,uint256,address))": {
            "notice": "Deposit underlying borrow/collateral tokens to the protocol (e.g. USDC, WETH)         Borrow tokens are always deposited into the Aave Variable Pool or User Vault         Collateral tokens are deposited into the Size contract"
          },
          "depositOnBehalfOf(((address,uint256,address),address))": {
            "notice": "Same as `deposit` but `onBehalfOf`"
          },
          "feeConfig()": { "notice": "Get the fee configuration parameters" },
          "getBorrowOfferAPR(address,uint256)": {
            "notice": "Get the APR for a borrow offer"
          },
          "getBuyCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Gets the swap data for buying credit as a market order"
          },
          "getCreditPosition(uint256)": {
            "notice": "Get the details of a credit position"
          },
          "getDebtPosition(uint256)": {
            "notice": "Get the details of a debt position"
          },
          "getDebtPositionAssignedCollateral(uint256)": {
            "notice": "Get the assigned collateral for a debt position"
          },
          "getLoanOfferAPR(address,uint256)": {
            "notice": "Get the APR for a loan offer"
          },
          "getLoanStatus(uint256)": {
            "notice": "Get the loan status for a given position ID"
          },
          "getPositionsCount()": {
            "notice": "Get the count of debt and credit positions"
          },
          "getSellCreditMarketSwapData((address,uint256,uint256,uint256,uint256,uint256,bool))": {
            "notice": "Returns the swap data for selling credit as a market order"
          },
          "getSwapFee(uint256,uint256)": {
            "notice": "Get the swap fee for a given cash and tenor"
          },
          "getUserCopyLimitOrders(address)": {
            "notice": "Get the user copy limit orders for a given user"
          },
          "getUserView(address)": {
            "notice": "Get the user view for a given user"
          },
          "isCreditPositionId(uint256)": {
            "notice": "Check if a given ID is a credit position ID"
          },
          "isDebtPositionId(uint256)": {
            "notice": "Check if a given ID is a debt position ID"
          },
          "isDebtPositionLiquidatable(uint256)": {
            "notice": "Check if a debt position is liquidatable"
          },
          "liquidate((uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position         In case of a protifable liquidation, part of the collateral remainder is split between the protocol and the liquidator         The split is capped by the crLiquidation parameter (otherwise, the split for overdue loans could be too much)         If the loan is overdue, a liquidator is charged from the borrower"
          },
          "liquidateWithReplacement((uint256,address,uint256,uint256,uint256))": {
            "notice": "Liquidate a debt position with a replacement borrower"
          },
          "multicall(bytes[])": {
            "notice": "Executes multiple calls in a single transaction"
          },
          "oracle()": { "notice": "Get the oracle parameters" },
          "partialRepay((uint256,uint256,address))": {
            "notice": "Partial repay a debt position by selecting a specific CreditPosition"
          },
          "pause()": {
            "notice": "Pauses the protocol         Only callable by the PAUSER_ROLE"
          },
          "repay((uint256,address))": {
            "notice": "Repay a debt position by transferring the amount due of borrow tokens to the protocol, which are deposited to the Variable Pool for the lenders to claim         Partial repayment are currently unsupported"
          },
          "riskConfig()": { "notice": "Get the risk configuration parameters" },
          "selfLiquidate((uint256))": {
            "notice": "Self liquidate a credit position that is undercollateralized         The lender cancels an amount of debt equivalent to their credit and a percentage of the protocol fees"
          },
          "selfLiquidateOnBehalfOf(((uint256),address,address))": {
            "notice": "Same as `selfLiquidate` but `onBehalfOf`"
          },
          "sellCreditLimit((uint256,(uint256[],int256[],uint256[])))": {
            "notice": "Places a new borrow offer in the orderbook"
          },
          "sellCreditLimitOnBehalfOf(((uint256,(uint256[],int256[],uint256[])),address))": {
            "notice": "Same as `sellCreditLimit` but `onBehalfOf`"
          },
          "sellCreditMarketOnBehalfOf(((address,uint256,uint256,uint256,uint256,uint256,bool),address,address))": {
            "notice": "Same as `sellCreditMarket` but `onBehalfOf`"
          },
          "setUserConfiguration((address,uint256,bool,bool,uint256[]))": {
            "notice": "Set the credit positions for sale"
          },
          "setUserConfigurationOnBehalfOf(((address,uint256,bool,bool,uint256[]),address))": {
            "notice": "Same as `setUserConfiguration` but `onBehalfOf`"
          },
          "setVariablePoolBorrowRate(uint128)": {
            "notice": "Sets the variable borrow rate         Only callable by the BORROW_RATE_UPDATER_ROLE"
          },
          "sizeFactory()": { "notice": "Get the size factory" },
          "unpause()": {
            "notice": "Unpauses the protocol         Only callable by the UNPAUSER_ROLE"
          },
          "updateConfig((string,uint256))": {
            "notice": "Updates the configuration of the protocol         Only callable by the DEFAULT_ADMIN_ROLE"
          },
          "vaultOf(address)": {
            "notice": "Get the user vault for a given user"
          },
          "version()": { "notice": "Get the version of the Size protocol" },
          "withdraw((address,uint256,address))": {
            "notice": "Withdraw underlying borrow/collateral tokens from the protocol (e.g. USDC, WETH)         Borrow tokens are always withdrawn from the Aave Variable Pool or User Vault         Collateral tokens are withdrawn from the Size contract"
          },
          "withdrawOnBehalfOf(((address,uint256,address),address))": {
            "notice": "Same as `withdraw` but `onBehalfOf`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ERC-7540-Reference/=lib/ERC-7540-Reference/",
        "@aave/=lib/aave-v3-core/contracts/",
        "@chainlink/=lib/chainlink/",
        "@chimera/=lib/chimera/src/",
        "@crytic/properties/=lib/properties/",
        "@deprecated/=deprecated/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@pendle/=lib/pendle-core-v2-public/",
        "@safe-utils/=lib/safe-utils/src/",
        "@script/=script/",
        "@solady/=lib/solady/",
        "@src/=src/",
        "@tenderly-utils/=lib/tenderly-utils/src/",
        "@test/=test/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "ERC-7540-Reference/=lib/ERC-7540-Reference/src/",
        "ERC4626/=lib/properties/lib/ERC4626/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "chainlink/=lib/chainlink/contracts/",
        "chimera/=lib/chimera/src/",
        "ds-test/=lib/solady/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "pendle-core-v2-public/=lib/pendle-core-v2-public/contracts/",
        "properties/=lib/properties/contracts/",
        "safe-smart-account/=lib/safe-utils/lib/safe-smart-account/",
        "safe-utils/=lib/safe-utils/src/",
        "solady/=lib/solady/",
        "solidity-http/=lib/solidity-http/src/",
        "solidity-stringutils/=lib/solidity-http/lib/solidity-stringutils/",
        "solmate/=lib/properties/lib/solmate/src/",
        "tenderly-utils/=lib/tenderly-utils/src/",
        "v3-core/=lib/v3-core/contracts/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/market/Size.sol": "Size" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "lib/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
        "keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
        "urls": [
          "bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
          "dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAToken.sol": {
        "keccak256": "0x4ec2e3180174f248c9308e03fa837d44ca91ca6c1ad67c9951a2951d46948417",
        "urls": [
          "bzz-raw://764b8e56a62c7277efdd6dc29e1ce3f88cb997613a3142a79effa5b3d908a3fa",
          "dweb:/ipfs/QmWAF7rDjyVqkwDR6RGRwYvB3V2fe3T7G1ZSC9UuHjAAZf"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol": {
        "keccak256": "0x906b896fdcb878d1472f740a70680f26e9a601dc28701113ab1f89cd9edce0bd",
        "urls": [
          "bzz-raw://b17473265a3ec2ec73dac797e0e60c147590f4e5cc7016f8eb61efbe072c49e0",
          "dweb:/ipfs/QmchQGeuyUw3VW4Kgwfg5Ys9ky1F7Q6QCcKbywbRaEUPt7"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IInitializableAToken.sol": {
        "keccak256": "0xb7c0da4c50ab10ce00e2325e649297923497738350092f64ef4b259307039dee",
        "urls": [
          "bzz-raw://67af6435a258e6d08151b0c37884475e040c2939c76cfb0ba7afd6264c45be87",
          "dweb:/ipfs/Qmf5wup15foyfWrGvhiZDyasJn9XZFn4Vs14Dui9smeLa3"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPool.sol": {
        "keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
        "urls": [
          "bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
          "dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol": {
        "keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
        "urls": [
          "bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
          "dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol": {
        "keccak256": "0x72b3ea433cd3386f369f1643a154bf233ec60c02acd02c32088a97556207d2e4",
        "urls": [
          "bzz-raw://a5907c61cf65126001feebd94c7a869eff95045106d97e21bf7f0d3de22caf9d",
          "dweb:/ipfs/QmPARkA7YpsBtd1F3JgszZREJk6TAkqRLBkjWZUadCu3sM"
        ],
        "license": "AGPL-3.0"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol": {
        "keccak256": "0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07",
        "urls": [
          "bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06",
          "dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx"
        ],
        "license": "BUSL-1.1"
      },
      "lib/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol": {
        "keccak256": "0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88",
        "urls": [
          "bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828",
          "dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN"
        ],
        "license": "BUSL-1.1"
      },
      "lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
        "keccak256": "0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd",
        "urls": [
          "bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7",
          "dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534",
        "urls": [
          "bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da",
          "dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716",
        "urls": [
          "bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23",
          "dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63",
        "urls": [
          "bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec",
          "dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
        "keccak256": "0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5",
        "urls": [
          "bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb",
          "dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab",
        "urls": [
          "bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89",
          "dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530",
        "urls": [
          "bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0",
          "dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol": {
        "keccak256": "0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3",
        "urls": [
          "bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da",
          "dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x7b6690c21e94a45b825631a12581b40a753ea827de5ac9127a6b5833411317f0",
        "urls": [
          "bzz-raw://00045f2c18d7866618c65819fe180a9a9dab25c1974fab35069bdac9cf624b6b",
          "dweb:/ipfs/QmYk62QRqGHJ3rjqfEtbfEGFHWsenv5tNMbeMfq5HkTP44"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
        "urls": [
          "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
          "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898",
        "urls": [
          "bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70",
          "dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a",
        "urls": [
          "bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a",
          "dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c",
        "urls": [
          "bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e",
          "dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
        "keccak256": "0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6",
        "urls": [
          "bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd",
          "dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol": {
        "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
        "urls": [
          "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
          "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae",
        "urls": [
          "bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6",
          "dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0x5d0c69ef32eae686acc22acfb1a54df9c91356e69adec593aa69eba83ae8f6f4",
        "urls": [
          "bzz-raw://f7a9fca2cb3d802c4f8a2d0fda84ccc7f880264885801c7df08373501dd22282",
          "dweb:/ipfs/QmdtM2Loz9NzNTuQ3RXNQCPBjoPUJw35Ukpt1MSM9XH3cD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xecd5f3c702f549fb88555e44e5f2415a4dfd6db09081aec7e98c26b6a3739c06",
        "urls": [
          "bzz-raw://ed40e907a6d80458a0556a609d0d3991d718c20f9f1f21475e5ec739af523231",
          "dweb:/ipfs/QmejkwADsZRxkusNU94sswMJfpLrbq8RkJTbNccUEQpc7Y"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1fbad6f61bd3e5875e6b0060b67626cb1ccb9542c0da368a44eb3870c9a9e160",
        "urls": [
          "bzz-raw://5189fcd5ecff0f449475cf3183e9d6b509cd1221555aba6cd76c70b097cc8260",
          "dweb:/ipfs/Qmbt34Kf5h2DeYzmqXtg3jprYxDCFdENtf41NgCdcARA7u"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0xe313f89c69c0f1c91f0722868313b4ceb14479b3e7a0abf52a1b9bbd9c18e81b",
        "urls": [
          "bzz-raw://8ad09b061f3f533c116618c20cf01510108eebebb7ff8847b0f245b8ba368d53",
          "dweb:/ipfs/QmU6vdi5JjJfjK2KqonWvRg9NeuQWarj4B1YFN22Dh9VJM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0xa72de315bd655a0fd5043ff97c7fd3868a1b5b1986afd75c6f5f8fd0f904985f",
        "urls": [
          "bzz-raw://a8838e68aba9caf2b2cb13bd4cb661b1f9c167cca4dfcd50ac72ae96691392df",
          "dweb:/ipfs/QmfLq3cmsSQTuLLxiF4bgceaf2jx8CoiVXQd7BZXGgJG1E"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/factory/interfaces/ISizeFactory.sol": {
        "keccak256": "0xc51081e8c2738e314e5eb4b2aef8ffff0adb5d239b40d044fe20cfca9d35aae7",
        "urls": [
          "bzz-raw://be68813010c2eeb4ca0b59838edbb255cceb7f5da1db54a2c5b9c204fe8adc34",
          "dweb:/ipfs/QmVr4Vd7kwNA4hQWkRmNkRD5q63xA4ABanPsWHoMwFqbAM"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactoryOffchainGetters.sol": {
        "keccak256": "0x01193f70622dd06fa303e488c255bf9b86f4fd2150ded107df75eabb1c200403",
        "urls": [
          "bzz-raw://81f74325395f6f3c01d55991aa3e8b2e26c3bd8d80b3e061f3c3d90bea81603d",
          "dweb:/ipfs/QmWKW2CQdeYgK1x5L6i9k43wJVYxu9Qy6QUJD5aFoykQ8p"
        ],
        "license": "MIT"
      },
      "src/factory/interfaces/ISizeFactoryV1_7.sol": {
        "keccak256": "0x88d8fee7f821de312741e741fcd2867e55905159002ba4d8ced827778bebde29",
        "urls": [
          "bzz-raw://d42df9dfc39ad1b6812bb10c74d1398d3882e207e9611cb2e857187d7c79e09a",
          "dweb:/ipfs/QmTcbh5pZjV2S6zj5x3nzvRJBBsyy5DuNLRD4Dvg5Ydydq"
        ],
        "license": "MIT"
      },
      "src/factory/libraries/Authorization.sol": {
        "keccak256": "0xf42a6c9392e33ad8d3be9045864c896a1552b4c3e4775198b990ea0b165f8908",
        "urls": [
          "bzz-raw://02603db5e7c1b4df6b1f474e24fbd3b82e33e46deb84de07d0222bb26d2781af",
          "dweb:/ipfs/QmaDuJawdoxgvVvMerZW8CMQZXKJPXhuH4RASMTfuMJX96"
        ],
        "license": "MIT"
      },
      "src/market/Size.sol": {
        "keccak256": "0x4f3acefe6bae9f645b20c6c77c0ce0e86b4098fbf5f347a01a1e850d03cc1da0",
        "urls": [
          "bzz-raw://be134c52dafbb876aba662c516de6b515fa7bc34c7b01038c44ba901ab1a713d",
          "dweb:/ipfs/QmUwL8WAC5MA1peyZ4HTdxGTrhevf1cx1tSHMQtCJ8ee17"
        ],
        "license": "MIT"
      },
      "src/market/SizeStorage.sol": {
        "keccak256": "0xc624be4edeaabb394f68a12ee42281644e52da26c3f8916f5d8454ef14e43681",
        "urls": [
          "bzz-raw://29f851bc1ba9c616a95f554d0639a8d420bec5c59c87dd58801e05f0325650a0",
          "dweb:/ipfs/QmdjEqJaZjKuzKjzLvtuenrr36GYZ4bLqXeaVZbanRxfzY"
        ],
        "license": "MIT"
      },
      "src/market/SizeView.sol": {
        "keccak256": "0x9798ff23961206bfa475f47df3d1420bb512f335ae616a3cfc7da782b1b3c154",
        "urls": [
          "bzz-raw://4b7b8136c6b3ce39fadc74a947f516f1ffb6ae19f0a5add360cd6cd6ed5e73db",
          "dweb:/ipfs/QmfMqZ8bPVy73Un1u5vek2PDSe1YDEpQZwBWuasajWFUV6"
        ],
        "license": "MIT"
      },
      "src/market/SizeViewData.sol": {
        "keccak256": "0x4fbd20e43987c211e0f8ab6ce467b4d017092a881ad544aa44a5d2f1d555df2b",
        "urls": [
          "bzz-raw://04f4ada02248e1224356a5e1b4fce02c60e4f14c414052a09363e9803317eacf",
          "dweb:/ipfs/QmZ69LGdEoZWajqVWiHrDfctYmArkt9ZWMYARwX6htQQ7x"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/IMulticall.sol": {
        "keccak256": "0x6e37873de589b4bec14611f36d283ab797d149a2ea61be2d7f3ac32d503dbe41",
        "urls": [
          "bzz-raw://88a1095d11f66268b50848a9868f28020583e8a4bb0d2885a59624c74e40f989",
          "dweb:/ipfs/QmSDYFNMkdriiJwn1crwmN4GGAsGCAMz89jaw3qAdALF7R"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISize.sol": {
        "keccak256": "0x0beb3d15fa612609c8108053e7e16d394c02a6dd36a28ffcea2077187649308e",
        "urls": [
          "bzz-raw://4af2ed987d5189bcd4501c40a1c5889f97605cd8f8cf366743bbdfa4d38ca916",
          "dweb:/ipfs/Qmbbi4kQT2kRo9uk4yvkr2SRUcbN5HqLwDCpQtc8MjFgz4"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISizeAdmin.sol": {
        "keccak256": "0x1f2fda9cf43a960e920186ce0414d596f0c73e20e0ab262a047ffcab5b8a4a9c",
        "urls": [
          "bzz-raw://092faa4adc6268f096580faebcf426c87def65e02525abfecd04aa1acfceaa88",
          "dweb:/ipfs/QmWtjocrjvMRqKH47XiP7GKPRPKPCX3ApnpgpFjt3X9eRf"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/ISizeView.sol": {
        "keccak256": "0xc696fbce1b2505a74584cc168ce832a7aa7f3e0058820395a0e872bf1b8056a0",
        "urls": [
          "bzz-raw://9242667740deae9d2d3a6d9c133e48f5007589e954a4d3d2fe837f8215b7e3f3",
          "dweb:/ipfs/QmYZQDCNuK5wfBYYu4UQCE3evDcmhvWCD6HkSXY12kREdh"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/IWETH.sol": {
        "keccak256": "0x4f7e2b2d5033a819263abfafba2aa513dd9a25bb1ce21cfe497daa0ac4a9ec7c",
        "urls": [
          "bzz-raw://7e209482985a7a680a0ffc2a6a6e3d0c1fb832db256dc1240c5b054fab19253e",
          "dweb:/ipfs/QmWQC9Qy3Mn9xfvM9xkcru9wcdTgq4jMjiJSbDtSMRfc9t"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/v1.7/ISizeV1_7.sol": {
        "keccak256": "0xd884198d67b3d0d77fd5cc30ae96f18f0748b7f540704c130b7b163982d57e83",
        "urls": [
          "bzz-raw://6948005cacbd6c490a8d158a9d8972b4baf0a05e1715d6c790b6d1f42f0d9b47",
          "dweb:/ipfs/Qmcp2Atca3wK2V1cyMdKLgBQkTPdYjeXqM5zjw3aF3KCdc"
        ],
        "license": "MIT"
      },
      "src/market/interfaces/v1.7/ISizeViewV1_7.sol": {
        "keccak256": "0x1ae3e0e566182a39cea1e4a4b2f3ba8e47c9c5dc8aeed24fd5a90d35a5dd317e",
        "urls": [
          "bzz-raw://3c79e7a02e98992bca9e5bc5eb4513100b557f511b1cb0245f7838e12e87efeb",
          "dweb:/ipfs/QmPZDziwpJsReTqbzF7JiWntq4XitinnAJjDd393ePRB6T"
        ],
        "license": "MIT"
      },
      "src/market/libraries/AccountingLibrary.sol": {
        "keccak256": "0x7951928ccae855e9fabc380ad88075fee1822e00dadeeb969c5add0e7b1e9a53",
        "urls": [
          "bzz-raw://b895fa756fd379def6e9cb674a9618beeb7e7cc2f9708816cbafe36a56acd769",
          "dweb:/ipfs/QmbAg4HReEqmoJ23JrJpy7Rp2cgZA87VUgMrBFW3yr6Cp8"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Errors.sol": {
        "keccak256": "0x66db548ccfa42412d0f3de8c76f9758e0b3f39e590f806555602eb702e7701e2",
        "urls": [
          "bzz-raw://ddcd07758278015c1760fccaa1154eee2669edfd2d183c5309c011025c3a5d5b",
          "dweb:/ipfs/QmbRjj86fuqpcdDc7niZkstQXRU6mfJfFLeRrE1rDHWg2Q"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Events.sol": {
        "keccak256": "0xf7ae3d09e1b94d73586072309b9c240d399f87b84d3dd1441b2a6012a97911b9",
        "urls": [
          "bzz-raw://e11a971c2f665c18bc2808cb48e599cc0b5446472e3c768154085799d399a00b",
          "dweb:/ipfs/QmWJ8qeUhYqp45FrwrB5WERmq9tGufa9MhsWPWQbmse4WL"
        ],
        "license": "MIT"
      },
      "src/market/libraries/LoanLibrary.sol": {
        "keccak256": "0x40dcae0ebbfff42282a5ceb00b5698c882242e028740099bc5828a08fa7e77e6",
        "urls": [
          "bzz-raw://efb877878b973bb6e8913cc3c4f4948ca7a43d0036dc243862cc8de7a3e92384",
          "dweb:/ipfs/QmYt8p1H7gAyTExvnKV1Anhfnjk5o774yi4ibHGUxByExv"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Math.sol": {
        "keccak256": "0xa270b1631b8b469d0e4bfddfaa0bf87ee285fa7532e1ed31f28674356fce0e65",
        "urls": [
          "bzz-raw://7f0d027e9af0e81111d0b573c836502f94f5f0e5a3b5c0fc8ff025060e78bb53",
          "dweb:/ipfs/QmbS7Wnub3nmeo7yfeQht68MzWwMrQ3Ef7bUtiNtDMtXDx"
        ],
        "license": "MIT"
      },
      "src/market/libraries/Multicall.sol": {
        "keccak256": "0xaf98fced0f94fce8f0c27d1f5160019eeb17e3eb67316ca245f52c39df257fa3",
        "urls": [
          "bzz-raw://852c668a4f10a61c2ceba43aac27993869ae591b8479c88d5c71bd4760cab1b6",
          "dweb:/ipfs/Qmer5YE99KsLeSKXf1QLxeDcUcLNgYkjFRwHzvBuG7JtUp"
        ],
        "license": "MIT"
      },
      "src/market/libraries/OfferLibrary.sol": {
        "keccak256": "0x7926a94b1d39a8870808b0fbef5475f7b424589bde84f7edea97898e81bb13d8",
        "urls": [
          "bzz-raw://82d44cc7a629d0d74013efb9fe3980916571416e19f717132a3ef18be95e18a9",
          "dweb:/ipfs/QmNRPBYTT5t2sXFWVCcMjkZCXEmfU3hP4HMqgUHwzmX7Ys"
        ],
        "license": "MIT"
      },
      "src/market/libraries/RiskLibrary.sol": {
        "keccak256": "0xc639312f28fb460000aff9c0869ffb2c3bdaab5e6d5aff6895df6bc2d3461b7e",
        "urls": [
          "bzz-raw://4eb18a5f3fc5ecacc2a166e0f5c456246bcff32284d29fa14d819f7616c7718d",
          "dweb:/ipfs/QmR9aSvd6G1qmqTKvT21fHk8EVeKGjKysn34qpCFTXhKXz"
        ],
        "license": "MIT"
      },
      "src/market/libraries/YieldCurveLibrary.sol": {
        "keccak256": "0x8d4b1f45d67387169c3b38cc034305eba91ad306dac7021d4658e3b8bbc9a135",
        "urls": [
          "bzz-raw://438376203571e01cbb26ea58c192d3036a1e623c0c5897c52aeafaa90e281cd3",
          "dweb:/ipfs/QmcRNJKsudM9bZvCPCSEQWxPHvVEfQD1u2MPf8S33fh3o3"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/BuyCreditLimit.sol": {
        "keccak256": "0xccb77182ce62b7ea147ee65ad7e32076f9e565a2605c18842087103e471f79f1",
        "urls": [
          "bzz-raw://571a3265ef2664d9fea268e229af1bc0e430f458efe6898a03532de799d959ef",
          "dweb:/ipfs/QmSA1hphKNeRdqKtKpbfM3yof9TTd13r9X5ei7jNiuhcwQ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/BuyCreditMarket.sol": {
        "keccak256": "0xdb5cca0e607922f3de91658d1d2ae624fc8c9707076607607847ff0afb1caf95",
        "urls": [
          "bzz-raw://0721e06a4759cec11f6f6593d668bd2ca736aec24b08f254b1db56bd63481ae9",
          "dweb:/ipfs/QmaQDmhoBKDbnDknbVeh4xH9mg68HT8HSk9xecLJyav84v"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Claim.sol": {
        "keccak256": "0x0145b5a2bef3cb5b6348c0826a020eaaf8db1880bb7aa2804bf03cc16eaf2adf",
        "urls": [
          "bzz-raw://de61cb5c77a1be1cc00990f8b21e1ad41005c811309244acb314d3e3f2324427",
          "dweb:/ipfs/QmVJJ8RgFXtNg3KLcevf99ZyhXQQtAH32i7MZXM1VLrbyd"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Compensate.sol": {
        "keccak256": "0x5fa7ce8b74eeea09d12b78e3b31dbc7b37fca58b235299ad5d9f8e99ea400719",
        "urls": [
          "bzz-raw://4fbeff16ba76d1e3735f4d067ba16da7b0f35176ff9ea501a99f94063936bc5d",
          "dweb:/ipfs/QmYyogfmQmrpEksBc9uSjVQvYAWdaq31pJ3j6aAnc8D1rA"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/CopyLimitOrders.sol": {
        "keccak256": "0x7c0122a6757ea03a0e466ece6bfe1689804dbc67aa47bbe3959dbfbd9bdf5044",
        "urls": [
          "bzz-raw://5450e2ddb79dc482d93a34701e6559c972ba2247b6ce2fb2ce02c5ec15964bff",
          "dweb:/ipfs/QmdLeycgcqWjZ8gAvduxZpHRvsXGoa3BpvS9oJvhdH3QwZ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Deposit.sol": {
        "keccak256": "0x75e2039804c341b06705e712a8403350bf3860207178872eba02b12acc1a55e0",
        "urls": [
          "bzz-raw://76f871e1a3b6e9accffffac39be2a51d90cb16028511f0f54597bdb8e8c2c6fe",
          "dweb:/ipfs/QmNzQiqWUiVnqpL9EhyG9tbF36nksZJ3YeT3hNioQLCpwG"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Initialize.sol": {
        "keccak256": "0xbad2d5f92aaeee28a87c1feda397f787cf1a2f8432bf05371f79b2309e9858f9",
        "urls": [
          "bzz-raw://5c6959ee090add484fe99aa21bb8e879c36a97a1d00b4d49dfade775c4813a63",
          "dweb:/ipfs/QmZycV28jdCXWHy7QV7uqtqxaiReZaTYtvvgECuHb3gwJQ"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Liquidate.sol": {
        "keccak256": "0x20e7ccfb443548a7325a592034bcfb6f474c313f9cf0453fafc45777a280d85f",
        "urls": [
          "bzz-raw://ec7a9075a20c68b7ca70c6b283692724d2e42faf0596187bd1075d8d7b6c03b1",
          "dweb:/ipfs/QmbHMZ2EmbhY4w51vWUkuEvr2r8XEkJkYvM56Tk5h1yr9G"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/LiquidateWithReplacement.sol": {
        "keccak256": "0x6a1c333d7bef57e97c11bdf8c3716c664262d71f11cfc3a1f0d42e8484a4288e",
        "urls": [
          "bzz-raw://af21da69c46e028ddf38dcc3da24cb743c7efcd5ef4c6daad1bfd1c8ecc7bdfa",
          "dweb:/ipfs/QmaUTKfKmfrnTQZJrbP9TEeuBNSVFRxHWV8d1M5XhMfc3f"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/PartialRepay.sol": {
        "keccak256": "0xcca168dab87cf6c5a383340443041194ea3ca272aa48cdbe7ffcb263be767900",
        "urls": [
          "bzz-raw://fd4a81eeab2fbb3ac34e21fdfe3acf4cbae5802984ddd0eabcc4b5dcf5b80315",
          "dweb:/ipfs/QmVZ9wKB1vjGghXfCE3AFNGTiGLekqbLEELSdJ26eeXy3F"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Repay.sol": {
        "keccak256": "0x8ce3d2f0cf14efb0489f509f244c05d8045ea5eecffceb2d932321d4f62a5474",
        "urls": [
          "bzz-raw://773030fd26b7cd147d3c1c745a858e541dee98331c362de19e7c7f021be7c44e",
          "dweb:/ipfs/QmZ8Du3qDSdpM64JCD6PqfqQ4DtpcfaVX6ujiCEJhgUhX5"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SelfLiquidate.sol": {
        "keccak256": "0x2d71cff942efc93fb7aa3a0a636e44562e0fa44ba4d503f323c6d08e7fdd8af3",
        "urls": [
          "bzz-raw://cdc43c74a42cffbf3844939df1d21a2b392ad3596ece8f1e9a6ebe08c2ec64be",
          "dweb:/ipfs/QmRUScCkvE4EADEUEvdwrsnzfLsq7xjFt1xsSZ4PZfs6J7"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SellCreditLimit.sol": {
        "keccak256": "0xe8fe9ab69faccffa8539167973d13c5afe04ca8358316a092540171d084654b9",
        "urls": [
          "bzz-raw://0c626cb1ad9347b0eabd162f590c61175cdc687958bc6684843201713c5efa89",
          "dweb:/ipfs/QmNqZc3Zh2Nvj6exvG89XShBY4WtBJSh6iKWr7gZB8sQ3k"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SellCreditMarket.sol": {
        "keccak256": "0x790f4e109ae8969b056286ae58a03500f5348842fac71b95d578f38e35d3a5fb",
        "urls": [
          "bzz-raw://04a2fe554c36ed4483bd1d36cb04bd67d23f77d00247e82df66e976fb872fe6d",
          "dweb:/ipfs/QmUxkcfAUE66kDUGE8gnrQoZZVRcHi2HZUQ7LqdSx35pm8"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/SetUserConfiguration.sol": {
        "keccak256": "0xfc4ebcf3b25f112bf4f268167289f65904d45484a35930c5a665a6a405b10f07",
        "urls": [
          "bzz-raw://2c65465dd5d1fbeb0c5ce1b48cce941b2c92dcf32d1f1d3e543513ec858bd9df",
          "dweb:/ipfs/QmQNQSUFHYNgvemQNT5HtcLR2ybe4uHLT8o3rDVXHfFbwt"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/UpdateConfig.sol": {
        "keccak256": "0x040b1b2b4dfb446b50bce809c070a3b977e7c614f2bfdf632b10f9c89ec8d80e",
        "urls": [
          "bzz-raw://067a98624ca328a30debcd8d09adb675ad3ebeafe0829269ca5f42574babcca3",
          "dweb:/ipfs/QmU3K7oJnmknBtCyVNR6d2fLsUFCPvozr1DvY9W42cw1Eu"
        ],
        "license": "MIT"
      },
      "src/market/libraries/actions/Withdraw.sol": {
        "keccak256": "0x7a742d3bababff2547f5e71d52feb7a6d93549beb896981a8e220952c02f52df",
        "urls": [
          "bzz-raw://53abc4a277560dd0688de69f0dc8aa6531ad4ec7c808d4592e656b214fd71f21",
          "dweb:/ipfs/QmT61oye8uwqzSwnqK74PFkJu2kV63wHpJKSocH8yur3eR"
        ],
        "license": "MIT"
      },
      "src/market/token/NonTransferrableRebasingTokenVault.sol": {
        "keccak256": "0x408c52f8e5ef7e79e1afcda1a42004a163e8856156ae859388c8b841349b9a55",
        "urls": [
          "bzz-raw://dae3ad0b3f501a9788657b9a961a7ad8440c5cc78f62f581a6949a21166b5481",
          "dweb:/ipfs/QmNurenVtRDWbmNHtb1QDzVNbB6sBZcN8LGcn2ayaCFBig"
        ],
        "license": "MIT"
      },
      "src/market/token/NonTransferrableToken.sol": {
        "keccak256": "0xf82118604ddbcd5d9ff708d739396e993d9621cff7b07f22a519141ca39a9e17",
        "urls": [
          "bzz-raw://4f371fb37a2ac76630302b1284d62e8657f038b504ce9884723574c2a3de32ec",
          "dweb:/ipfs/QmRsjmBirftC8Jih4jBG2BoJmpe4RRAAsEwsmtLjWicTVf"
        ],
        "license": "MIT"
      },
      "src/market/token/adapters/IAdapter.sol": {
        "keccak256": "0xb953b0e5e09d775cf4b6ef970131883c052510a156d0b6a7f6550aa7a3344d7e",
        "urls": [
          "bzz-raw://62272b20b8f5d9fe2d7a55e5774835cede834df2d4ee8b3456d35e54547f0fb8",
          "dweb:/ipfs/Qmcf9RPBiArogFRFqZjt7jvtBQCuRGDPyQMakVDGPSDHF9"
        ],
        "license": "MIT"
      },
      "src/oracle/IPriceFeed.sol": {
        "keccak256": "0x7ec983afe56cc8eee5d4b3573a51665ad0cfc8835f8fb8fd864b2a5a119f9a90",
        "urls": [
          "bzz-raw://02fc706986c7c132d4b0b95ec2f7b3aa49def6511ebe84643ee1359b2318da48",
          "dweb:/ipfs/QmQCwub8SCenVvQnVtL24Eny3jNZrugoxKsu86da55nBKJ"
        ],
        "license": "MIT"
      },
      "src/oracle/adapters/ChainlinkPriceFeed.sol": {
        "keccak256": "0x71a4ccb7d9469f4d7a914a81c754b1278152a387f8154e0f9793e0e3d010a599",
        "urls": [
          "bzz-raw://d953653f6481b344d0d00a677a8301f3006a50c3b90744c39cd3eda6f508818b",
          "dweb:/ipfs/QmYR1RvdMboMpH9ykJN5WwuC3AabSvPS2JA4t4afxa7gyh"
        ],
        "license": "MIT"
      },
      "src/oracle/adapters/ChainlinkSequencerUptimeFeed.sol": {
        "keccak256": "0x3d200d7fcc7c457a201f2bb32a0b68ea13b2b697cb300bbd587828bff5ffe8b8",
        "urls": [
          "bzz-raw://d72923e346e73eb0d42d055437dc6df059c3a8f27b08ff5aacd7cf7fdf90eec5",
          "dweb:/ipfs/QmPYENtSCwseMxYtQeKAkVe8DuCJYzRGpFRxDgw85xf2g8"
        ],
        "license": "MIT"
      },
      "src/oracle/adapters/UniswapV3PriceFeed.sol": {
        "keccak256": "0x84027f9673163df8f7dcbd7c828cf5bada6a9c7de1986d3821ec75004a11f639",
        "urls": [
          "bzz-raw://0caf13ef11f4ad681f395ee48145d72fcd3a1eae5b439efb132be9cccd8f1243",
          "dweb:/ipfs/QmdrnR1auzKaQhZ7AqWRKHnajw1Y6oLmdNFYJzKLzb5E72"
        ],
        "license": "MIT"
      },
      "src/oracle/v1.5.1/PriceFeed.sol": {
        "keccak256": "0x36473f98f23968eaab386e44c1404652c7ef88c09db9772ab3195d8305829762",
        "urls": [
          "bzz-raw://5db471c144f3a43e9e07391890e7b29e39b64ae3fb0e73b66dd313801b03542a",
          "dweb:/ipfs/Qmf5GMB6SdKNCUPCbV4nYmxUjg6z3iKiweYU2ajY9BrGbC"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 252
}
